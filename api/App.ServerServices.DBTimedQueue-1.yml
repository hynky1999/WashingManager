### YamlMime:ManagedReference
items:
- uid: App.ServerServices.DBTimedQueue`1
  commentId: T:App.ServerServices.DBTimedQueue`1
  id: DBTimedQueue`1
  parent: App.ServerServices
  children:
  - App.ServerServices.DBTimedQueue`1.#ctor(System.Func{System.Threading.Tasks.Task{`0}},System.Func{`0,Duration})
  - App.ServerServices.DBTimedQueue`1.Dispose
  - App.ServerServices.DBTimedQueue`1.OnChange
  - App.ServerServices.DBTimedQueue`1.OnEvent
  langs:
  - csharp
  - vb
  name: DBTimedQueue<TItem>
  nameWithType: DBTimedQueue<TItem>
  fullName: App.ServerServices.DBTimedQueue<TItem>
  type: Class
  source:
    remote:
      path: App/ServerServices/TimedQueue.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: DBTimedQueue
    path: ../App/ServerServices/TimedQueue.cs
    startLine: 25
  assemblies:
  - App
  namespace: App.ServerServices
  summary: "\nITimedQueue represents queue of objects that will be processed in specific time.\nThe queue will plan a timer whenever a OnChange is called, the event with shortest duration will be selected.\nTo process this event you need to subscribe to the OnTimer event.\nBear in mind that when Timer is invoked it will not automatically requeue another one (Call OnChange).\nYou have to call OnChange manually in event handler.\n"
  example: []
  syntax:
    content: 'public class DBTimedQueue<TItem> : ITimedQueue<TItem>, IDisposable'
    typeParameters:
    - id: TItem
      description: ''
    content.vb: Public Class DBTimedQueue(Of TItem) Implements ITimedQueue(Of TItem), IDisposable
  inheritance:
  - System.Object
  implements:
  - App.ServerServices.ITimedQueue{{TItem}}
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - App.ServerServices.DBTimedQueue`1.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  - App.ServerServices.DBTimedQueue`1.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
  nameWithType.vb: DBTimedQueue(Of TItem)
  fullName.vb: App.ServerServices.DBTimedQueue(Of TItem)
  name.vb: DBTimedQueue(Of TItem)
- uid: App.ServerServices.DBTimedQueue`1.#ctor(System.Func{System.Threading.Tasks.Task{`0}},System.Func{`0,Duration})
  commentId: M:App.ServerServices.DBTimedQueue`1.#ctor(System.Func{System.Threading.Tasks.Task{`0}},System.Func{`0,Duration})
  id: '#ctor(System.Func{System.Threading.Tasks.Task{`0}},System.Func{`0,Duration})'
  parent: App.ServerServices.DBTimedQueue`1
  langs:
  - csharp
  - vb
  name: DBTimedQueue(Func<Task<TItem?>>, Func<TItem, Duration>)
  nameWithType: DBTimedQueue<TItem>.DBTimedQueue(Func<Task<TItem?>>, Func<TItem, Duration>)
  fullName: App.ServerServices.DBTimedQueue<TItem>.DBTimedQueue(System.Func<System.Threading.Tasks.Task<TItem?>>, System.Func<TItem, Duration>)
  type: Constructor
  source:
    remote:
      path: App/ServerServices/TimedQueue.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: .ctor
    path: ../App/ServerServices/TimedQueue.cs
    startLine: 36
  assemblies:
  - App
  namespace: App.ServerServices
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public DBTimedQueue(Func<Task<TItem?>> getNextEvent, Func<TItem, Duration> getDuration)
    parameters:
    - id: getNextEvent
      type: System.Func{System.Threading.Tasks.Task{{TItem}}}
      description: ''
    - id: getDuration
      type: System.Func{{TItem},Duration}
      description: ''
    content.vb: Public Sub New(getNextEvent As Func(Of Task(Of TItem)), getDuration As Func(Of TItem, Duration))
  overload: App.ServerServices.DBTimedQueue`1.#ctor*
  nameWithType.vb: DBTimedQueue(Of TItem).New(Func(Of Task(Of TItem)), Func(Of TItem, Duration))
  fullName.vb: App.ServerServices.DBTimedQueue(Of TItem).New(System.Func(Of System.Threading.Tasks.Task(Of TItem)), System.Func(Of TItem, Duration))
  name.vb: New(Func(Of Task(Of TItem)), Func(Of TItem, Duration))
- uid: App.ServerServices.DBTimedQueue`1.OnEvent
  commentId: E:App.ServerServices.DBTimedQueue`1.OnEvent
  id: OnEvent
  parent: App.ServerServices.DBTimedQueue`1
  langs:
  - csharp
  - vb
  name: OnEvent
  nameWithType: DBTimedQueue<TItem>.OnEvent
  fullName: App.ServerServices.DBTimedQueue<TItem>.OnEvent
  type: Event
  source:
    remote:
      path: App/ServerServices/TimedQueue.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: OnEvent
    path: ../App/ServerServices/TimedQueue.cs
    startLine: 45
  assemblies:
  - App
  namespace: App.ServerServices
  summary: "\nEvent that will be invoked when next event is ready to be processed.\n"
  example: []
  syntax:
    content: public event EventHandler<TItem>? OnEvent
    return:
      type: System.EventHandler{{TItem}}
    content.vb: Public Event OnEvent As EventHandler(Of TItem)
  implements:
  - App.ServerServices.ITimedQueue{{TItem}}.OnEvent
  nameWithType.vb: DBTimedQueue(Of TItem).OnEvent
  fullName.vb: App.ServerServices.DBTimedQueue(Of TItem).OnEvent
- uid: App.ServerServices.DBTimedQueue`1.OnChange
  commentId: M:App.ServerServices.DBTimedQueue`1.OnChange
  id: OnChange
  parent: App.ServerServices.DBTimedQueue`1
  langs:
  - csharp
  - vb
  name: OnChange()
  nameWithType: DBTimedQueue<TItem>.OnChange()
  fullName: App.ServerServices.DBTimedQueue<TItem>.OnChange()
  type: Method
  source:
    remote:
      path: App/ServerServices/TimedQueue.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: OnChange
    path: ../App/ServerServices/TimedQueue.cs
    startLine: 48
  assemblies:
  - App
  namespace: App.ServerServices
  summary: "\nFind next event to queue.\n"
  example: []
  syntax:
    content: public Task OnChange()
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Function OnChange() As Task
  overload: App.ServerServices.DBTimedQueue`1.OnChange*
  implements:
  - App.ServerServices.ITimedQueue{{TItem}}.OnChange
  nameWithType.vb: DBTimedQueue(Of TItem).OnChange()
  fullName.vb: App.ServerServices.DBTimedQueue(Of TItem).OnChange()
- uid: App.ServerServices.DBTimedQueue`1.Dispose
  commentId: M:App.ServerServices.DBTimedQueue`1.Dispose
  id: Dispose
  parent: App.ServerServices.DBTimedQueue`1
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: DBTimedQueue<TItem>.Dispose()
  fullName: App.ServerServices.DBTimedQueue<TItem>.Dispose()
  type: Method
  source:
    remote:
      path: App/ServerServices/TimedQueue.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: Dispose
    path: ../App/ServerServices/TimedQueue.cs
    startLine: 84
  assemblies:
  - App
  namespace: App.ServerServices
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: App.ServerServices.DBTimedQueue`1.Dispose*
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: DBTimedQueue(Of TItem).Dispose()
  fullName.vb: App.ServerServices.DBTimedQueue(Of TItem).Dispose()
references:
- uid: App.ServerServices
  commentId: N:App.ServerServices
  name: App.ServerServices
  nameWithType: App.ServerServices
  fullName: App.ServerServices
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.ServerServices
    name: ServerServices
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.ServerServices
    name: ServerServices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: App.ServerServices.ITimedQueue{{TItem}}
  commentId: T:App.ServerServices.ITimedQueue{`0}
  parent: App.ServerServices
  definition: App.ServerServices.ITimedQueue`1
  name: ITimedQueue<TItem>
  nameWithType: ITimedQueue<TItem>
  fullName: App.ServerServices.ITimedQueue<TItem>
  nameWithType.vb: ITimedQueue(Of TItem)
  fullName.vb: App.ServerServices.ITimedQueue(Of TItem)
  name.vb: ITimedQueue(Of TItem)
  spec.csharp:
  - uid: App.ServerServices.ITimedQueue`1
    name: ITimedQueue
  - name: <
  - name: TItem
  - name: '>'
  spec.vb:
  - uid: App.ServerServices.ITimedQueue`1
    name: ITimedQueue
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: App.ServerServices.DBTimedQueue`1.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  name: GetPropertyExpression<DBTimedQueue<TItem>>(DBTimedQueue<TItem>, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<DBTimedQueue<TItem>>(DBTimedQueue<TItem>, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<App.ServerServices.DBTimedQueue<TItem>>(App.ServerServices.DBTimedQueue<TItem>, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of DBTimedQueue(Of TItem))(DBTimedQueue(Of TItem), PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of App.ServerServices.DBTimedQueue(Of TItem))(App.ServerServices.DBTimedQueue(Of TItem), System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of DBTimedQueue(Of TItem))(DBTimedQueue(Of TItem), PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.ServerServices.DBTimedQueue{`0},System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - uid: App.ServerServices.DBTimedQueue`1
    name: DBTimedQueue
  - name: <
  - name: TItem
  - name: '>'
  - name: '>'
  - name: (
  - uid: App.ServerServices.DBTimedQueue`1
    name: DBTimedQueue
  - name: <
  - name: TItem
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.ServerServices.DBTimedQueue{`0},System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - uid: App.ServerServices.DBTimedQueue`1
    name: DBTimedQueue
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: )
  - name: (
  - uid: App.ServerServices.DBTimedQueue`1
    name: DBTimedQueue
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.ServerServices.DBTimedQueue`1.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  name: GetSetPropertyEventCallback<DBTimedQueue<TItem>>(DBTimedQueue<TItem>, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<DBTimedQueue<TItem>>(DBTimedQueue<TItem>, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<App.ServerServices.DBTimedQueue<TItem>>(App.ServerServices.DBTimedQueue<TItem>, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of DBTimedQueue(Of TItem))(DBTimedQueue(Of TItem), Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of App.ServerServices.DBTimedQueue(Of TItem))(App.ServerServices.DBTimedQueue(Of TItem), Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of DBTimedQueue(Of TItem))(DBTimedQueue(Of TItem), Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.ServerServices.DBTimedQueue{`0},System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - uid: App.ServerServices.DBTimedQueue`1
    name: DBTimedQueue
  - name: <
  - name: TItem
  - name: '>'
  - name: '>'
  - name: (
  - uid: App.ServerServices.DBTimedQueue`1
    name: DBTimedQueue
  - name: <
  - name: TItem
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.ServerServices.DBTimedQueue{`0},System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - uid: App.ServerServices.DBTimedQueue`1
    name: DBTimedQueue
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: )
  - name: (
  - uid: App.ServerServices.DBTimedQueue`1
    name: DBTimedQueue
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: App.ServerServices.ITimedQueue`1
  commentId: T:App.ServerServices.ITimedQueue`1
  name: ITimedQueue<TItem>
  nameWithType: ITimedQueue<TItem>
  fullName: App.ServerServices.ITimedQueue<TItem>
  nameWithType.vb: ITimedQueue(Of TItem)
  fullName.vb: App.ServerServices.ITimedQueue(Of TItem)
  name.vb: ITimedQueue(Of TItem)
  spec.csharp:
  - uid: App.ServerServices.ITimedQueue`1
    name: ITimedQueue
  - name: <
  - name: TItem
  - name: '>'
  spec.vb:
  - uid: App.ServerServices.ITimedQueue`1
    name: ITimedQueue
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
- uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetPropertyExpression<T>(T, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<T>(T, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<T>(T, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of T)(T, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils.ReflectionExtensions
  commentId: T:App.Utils.ReflectionExtensions
  parent: App.Utils
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: App.Utils.ReflectionExtensions
- uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils
  commentId: N:App.Utils
  name: App.Utils
  nameWithType: App.Utils
  fullName: App.Utils
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
- uid: App.ServerServices.DBTimedQueue`1.#ctor*
  commentId: Overload:App.ServerServices.DBTimedQueue`1.#ctor
  name: DBTimedQueue
  nameWithType: DBTimedQueue<TItem>.DBTimedQueue
  fullName: App.ServerServices.DBTimedQueue<TItem>.DBTimedQueue
  nameWithType.vb: DBTimedQueue(Of TItem).New
  fullName.vb: App.ServerServices.DBTimedQueue(Of TItem).New
  name.vb: New
- uid: System.Func{System.Threading.Tasks.Task{{TItem}}}
  commentId: T:System.Func{System.Threading.Tasks.Task{`0}}
  parent: System
  definition: System.Func`1
  name: Func<Task<TItem>>
  nameWithType: Func<Task<TItem>>
  fullName: System.Func<System.Threading.Tasks.Task<TItem>>
  nameWithType.vb: Func(Of Task(Of TItem))
  fullName.vb: System.Func(Of System.Threading.Tasks.Task(Of TItem))
  name.vb: Func(Of Task(Of TItem))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
  - name: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - name: TItem
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: )
- uid: System.Func{{TItem},Duration}
  commentId: T:System.Func{`0,Duration}
  parent: System
  definition: System.Func`2
  name: Func<TItem, Duration>
  nameWithType: Func<TItem, Duration>
  fullName: System.Func<TItem, Duration>
  nameWithType.vb: Func(Of TItem, Duration)
  fullName.vb: System.Func(Of TItem, Duration)
  name.vb: Func(Of TItem, Duration)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: TItem
  - name: ','
  - name: " "
  - uid: Duration
    name: Duration
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: ','
  - name: " "
  - uid: Duration
    name: Duration
    isExternal: true
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: App.ServerServices.ITimedQueue{{TItem}}.OnEvent
  commentId: E:App.ServerServices.ITimedQueue{`0}.OnEvent
  parent: App.ServerServices.ITimedQueue{{TItem}}
  definition: App.ServerServices.ITimedQueue`1.OnEvent
  name: OnEvent
  nameWithType: ITimedQueue<TItem>.OnEvent
  fullName: App.ServerServices.ITimedQueue<TItem>.OnEvent
  nameWithType.vb: ITimedQueue(Of TItem).OnEvent
  fullName.vb: App.ServerServices.ITimedQueue(Of TItem).OnEvent
- uid: System.EventHandler{{TItem}}
  commentId: T:System.EventHandler{`0}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<TItem>
  nameWithType: EventHandler<TItem>
  fullName: System.EventHandler<TItem>
  nameWithType.vb: EventHandler(Of TItem)
  fullName.vb: System.EventHandler(Of TItem)
  name.vb: EventHandler(Of TItem)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
  - name: <
  - name: TItem
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
- uid: App.ServerServices.ITimedQueue`1.OnEvent
  commentId: E:App.ServerServices.ITimedQueue`1.OnEvent
  name: OnEvent
  nameWithType: ITimedQueue<TItem>.OnEvent
  fullName: App.ServerServices.ITimedQueue<TItem>.OnEvent
  nameWithType.vb: ITimedQueue(Of TItem).OnEvent
  fullName.vb: App.ServerServices.ITimedQueue(Of TItem).OnEvent
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: App.ServerServices.DBTimedQueue`1.OnChange*
  commentId: Overload:App.ServerServices.DBTimedQueue`1.OnChange
  name: OnChange
  nameWithType: DBTimedQueue<TItem>.OnChange
  fullName: App.ServerServices.DBTimedQueue<TItem>.OnChange
  nameWithType.vb: DBTimedQueue(Of TItem).OnChange
  fullName.vb: App.ServerServices.DBTimedQueue(Of TItem).OnChange
- uid: App.ServerServices.ITimedQueue{{TItem}}.OnChange
  commentId: M:App.ServerServices.ITimedQueue{`0}.OnChange
  parent: App.ServerServices.ITimedQueue{{TItem}}
  definition: App.ServerServices.ITimedQueue`1.OnChange
  name: OnChange()
  nameWithType: ITimedQueue<TItem>.OnChange()
  fullName: App.ServerServices.ITimedQueue<TItem>.OnChange()
  nameWithType.vb: ITimedQueue(Of TItem).OnChange()
  fullName.vb: App.ServerServices.ITimedQueue(Of TItem).OnChange()
  spec.csharp:
  - uid: App.ServerServices.ITimedQueue{`0}.OnChange
    name: OnChange
  - name: (
  - name: )
  spec.vb:
  - uid: App.ServerServices.ITimedQueue{`0}.OnChange
    name: OnChange
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: App.ServerServices.ITimedQueue`1.OnChange
  commentId: M:App.ServerServices.ITimedQueue`1.OnChange
  name: OnChange()
  nameWithType: ITimedQueue<TItem>.OnChange()
  fullName: App.ServerServices.ITimedQueue<TItem>.OnChange()
  nameWithType.vb: ITimedQueue(Of TItem).OnChange()
  fullName.vb: App.ServerServices.ITimedQueue(Of TItem).OnChange()
  spec.csharp:
  - uid: App.ServerServices.ITimedQueue`1.OnChange
    name: OnChange
  - name: (
  - name: )
  spec.vb:
  - uid: App.ServerServices.ITimedQueue`1.OnChange
    name: OnChange
  - name: (
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
- uid: App.ServerServices.DBTimedQueue`1.Dispose*
  commentId: Overload:App.ServerServices.DBTimedQueue`1.Dispose
  name: Dispose
  nameWithType: DBTimedQueue<TItem>.Dispose
  fullName: App.ServerServices.DBTimedQueue<TItem>.Dispose
  nameWithType.vb: DBTimedQueue(Of TItem).Dispose
  fullName.vb: App.ServerServices.DBTimedQueue(Of TItem).Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
