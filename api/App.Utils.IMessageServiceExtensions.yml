### YamlMime:ManagedReference
items:
- uid: App.Utils.IMessageServiceExtensions
  commentId: T:App.Utils.IMessageServiceExtensions
  id: IMessageServiceExtensions
  parent: App.Utils
  children:
  - App.Utils.IMessageServiceExtensions.GenericOnDBError(IMessageService,App.Data.ServiceInterfaces.ILocalizationService,System.Func{System.Threading.Tasks.Task},System.Boolean)
  - App.Utils.IMessageServiceExtensions.GenericOnDBError``1(IMessageService,App.Data.ServiceInterfaces.ILocalizationService,System.Func{System.Threading.Tasks.Task{``0}},System.Boolean)
  langs:
  - csharp
  - vb
  name: IMessageServiceExtensions
  nameWithType: IMessageServiceExtensions
  fullName: App.Utils.IMessageServiceExtensions
  type: Class
  source:
    remote:
      path: App/Utils/MessageUtils.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: IMessageServiceExtensions
    path: ../App/Utils/MessageUtils.cs
    startLine: 9
  assemblies:
  - App
  namespace: App.Utils
  summary: "\nExtension methods for <see cref=\"!:IMessageService\"></see>.\n"
  example: []
  syntax:
    content: public static class IMessageServiceExtensions
    content.vb: Public Module IMessageServiceExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: App.Utils.IMessageServiceExtensions.GenericOnDBError``1(IMessageService,App.Data.ServiceInterfaces.ILocalizationService,System.Func{System.Threading.Tasks.Task{``0}},System.Boolean)
  commentId: M:App.Utils.IMessageServiceExtensions.GenericOnDBError``1(IMessageService,App.Data.ServiceInterfaces.ILocalizationService,System.Func{System.Threading.Tasks.Task{``0}},System.Boolean)
  id: GenericOnDBError``1(IMessageService,App.Data.ServiceInterfaces.ILocalizationService,System.Func{System.Threading.Tasks.Task{``0}},System.Boolean)
  isExtensionMethod: true
  parent: App.Utils.IMessageServiceExtensions
  langs:
  - csharp
  - vb
  name: GenericOnDBError<T>(IMessageService, ILocalizationService, Func<Task<T>>, bool)
  nameWithType: IMessageServiceExtensions.GenericOnDBError<T>(IMessageService, ILocalizationService, Func<Task<T>>, bool)
  fullName: App.Utils.IMessageServiceExtensions.GenericOnDBError<T>(IMessageService, App.Data.ServiceInterfaces.ILocalizationService, System.Func<System.Threading.Tasks.Task<T>>, bool)
  type: Method
  source:
    remote:
      path: App/Utils/MessageUtils.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: GenericOnDBError
    path: ../App/Utils/MessageUtils.cs
    startLine: 22
  assemblies:
  - App
  namespace: App.Utils
  summary: "\nSends a message based on action result.\nIf the action throws an exception, it will be handled and a message informing user about exception will be sent.\nIf the actions is successful nothing will be sent.\n"
  example: []
  syntax:
    content: public static Task<T?> GenericOnDBError<T>(this IMessageService msg, ILocalizationService loc, Func<Task<T>> action, bool showArgException = true)
    parameters:
    - id: msg
      type: IMessageService
      description: ''
    - id: loc
      type: App.Data.ServiceInterfaces.ILocalizationService
      description: ''
    - id: action
      type: System.Func{System.Threading.Tasks.Task{{T}}}
      description: Action to act upon
    - id: showArgException
      type: System.Boolean
      description: Should Argument Exception also be handled ?
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: Returns result of the task if successful
    content.vb: Public Shared Function GenericOnDBError(Of T)(msg As IMessageService, loc As ILocalizationService, action As Func(Of Task(Of T)), showArgException As Boolean = True) As Task(Of T)
  overload: App.Utils.IMessageServiceExtensions.GenericOnDBError*
  nameWithType.vb: IMessageServiceExtensions.GenericOnDBError(Of T)(IMessageService, ILocalizationService, Func(Of Task(Of T)), Boolean)
  fullName.vb: App.Utils.IMessageServiceExtensions.GenericOnDBError(Of T)(IMessageService, App.Data.ServiceInterfaces.ILocalizationService, System.Func(Of System.Threading.Tasks.Task(Of T)), Boolean)
  name.vb: GenericOnDBError(Of T)(IMessageService, ILocalizationService, Func(Of Task(Of T)), Boolean)
- uid: App.Utils.IMessageServiceExtensions.GenericOnDBError(IMessageService,App.Data.ServiceInterfaces.ILocalizationService,System.Func{System.Threading.Tasks.Task},System.Boolean)
  commentId: M:App.Utils.IMessageServiceExtensions.GenericOnDBError(IMessageService,App.Data.ServiceInterfaces.ILocalizationService,System.Func{System.Threading.Tasks.Task},System.Boolean)
  id: GenericOnDBError(IMessageService,App.Data.ServiceInterfaces.ILocalizationService,System.Func{System.Threading.Tasks.Task},System.Boolean)
  isExtensionMethod: true
  parent: App.Utils.IMessageServiceExtensions
  langs:
  - csharp
  - vb
  name: GenericOnDBError(IMessageService, ILocalizationService, Func<Task>, bool)
  nameWithType: IMessageServiceExtensions.GenericOnDBError(IMessageService, ILocalizationService, Func<Task>, bool)
  fullName: App.Utils.IMessageServiceExtensions.GenericOnDBError(IMessageService, App.Data.ServiceInterfaces.ILocalizationService, System.Func<System.Threading.Tasks.Task>, bool)
  type: Method
  source:
    remote:
      path: App/Utils/MessageUtils.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: GenericOnDBError
    path: ../App/Utils/MessageUtils.cs
    startLine: 54
  assemblies:
  - App
  namespace: App.Utils
  summary: "\nSame as <xref href=\"App.Utils.IMessageServiceExtensions.GenericOnDBError%60%601(IMessageService%2cApp.Data.ServiceInterfaces.ILocalizationService%2cSystem.Func%7bSystem.Threading.Tasks.Task%7b%60%600%7d%7d%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> but without return value.\n"
  example: []
  syntax:
    content: public static Task GenericOnDBError(this IMessageService msg, ILocalizationService loc, Func<Task> action, bool showArgException = true)
    parameters:
    - id: msg
      type: IMessageService
      description: ''
    - id: loc
      type: App.Data.ServiceInterfaces.ILocalizationService
      description: ''
    - id: action
      type: System.Func{System.Threading.Tasks.Task}
      description: ''
    - id: showArgException
      type: System.Boolean
      description: ''
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function GenericOnDBError(msg As IMessageService, loc As ILocalizationService, action As Func(Of Task), showArgException As Boolean = True) As Task
  overload: App.Utils.IMessageServiceExtensions.GenericOnDBError*
  nameWithType.vb: IMessageServiceExtensions.GenericOnDBError(IMessageService, ILocalizationService, Func(Of Task), Boolean)
  fullName.vb: App.Utils.IMessageServiceExtensions.GenericOnDBError(IMessageService, App.Data.ServiceInterfaces.ILocalizationService, System.Func(Of System.Threading.Tasks.Task), Boolean)
  name.vb: GenericOnDBError(IMessageService, ILocalizationService, Func(Of Task), Boolean)
references:
- uid: App.Utils
  commentId: N:App.Utils
  name: App.Utils
  nameWithType: App.Utils
  fullName: App.Utils
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: App.Utils.IMessageServiceExtensions.GenericOnDBError*
  commentId: Overload:App.Utils.IMessageServiceExtensions.GenericOnDBError
  name: GenericOnDBError
  nameWithType: IMessageServiceExtensions.GenericOnDBError
  fullName: App.Utils.IMessageServiceExtensions.GenericOnDBError
- uid: IMessageService
  isExternal: true
  name: IMessageService
  nameWithType: IMessageService
  fullName: IMessageService
- uid: App.Data.ServiceInterfaces.ILocalizationService
  commentId: T:App.Data.ServiceInterfaces.ILocalizationService
  parent: App.Data.ServiceInterfaces
  name: ILocalizationService
  nameWithType: ILocalizationService
  fullName: App.Data.ServiceInterfaces.ILocalizationService
- uid: System.Func{System.Threading.Tasks.Task{{T}}}
  commentId: T:System.Func{System.Threading.Tasks.Task{``0}}
  parent: System
  definition: System.Func`1
  name: Func<Task<T>>
  nameWithType: Func<Task<T>>
  fullName: System.Func<System.Threading.Tasks.Task<T>>
  nameWithType.vb: Func(Of Task(Of T))
  fullName.vb: System.Func(Of System.Threading.Tasks.Task(Of T))
  name.vb: Func(Of Task(Of T))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
  - name: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: App.Data.ServiceInterfaces
  commentId: N:App.Data.ServiceInterfaces
  name: App.Data.ServiceInterfaces
  nameWithType: App.Data.ServiceInterfaces
  fullName: App.Data.ServiceInterfaces
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.ServiceInterfaces
    name: ServiceInterfaces
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.ServiceInterfaces
    name: ServiceInterfaces
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
- uid: App.Utils.IMessageServiceExtensions.GenericOnDBError``1(IMessageService,App.Data.ServiceInterfaces.ILocalizationService,System.Func{System.Threading.Tasks.Task{``0}},System.Boolean)
  commentId: M:App.Utils.IMessageServiceExtensions.GenericOnDBError``1(IMessageService,App.Data.ServiceInterfaces.ILocalizationService,System.Func{System.Threading.Tasks.Task{``0}},System.Boolean)
  isExternal: true
- uid: System.Func{System.Threading.Tasks.Task}
  commentId: T:System.Func{System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`1
  name: Func<Task>
  nameWithType: Func<Task>
  fullName: System.Func<System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of Task)
  fullName.vb: System.Func(Of System.Threading.Tasks.Task)
  name.vb: Func(Of Task)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
  - name: <
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
