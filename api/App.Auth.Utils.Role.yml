### YamlMime:ManagedReference
items:
- uid: App.Auth.Utils.Role
  commentId: T:App.Auth.Utils.Role
  id: Role
  parent: App.Auth.Utils
  children:
  - App.Auth.Utils.Role.#ctor
  - App.Auth.Utils.Role.#ctor(System.String)
  langs:
  - csharp
  - vb
  name: Role
  nameWithType: Role
  fullName: App.Auth.Utils.Role
  type: Class
  source:
    remote:
      path: App/Auth/Utils/Role.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: Role
    path: ../App/Auth/Utils/Role.cs
    startLine: 8
  assemblies:
  - App
  namespace: App.Auth.Utils
  summary: "\nImplementation of <xref href=\"Microsoft.AspNetCore.Identity.IdentityRole%601\" data-throw-if-not-resolved=\"false\"></xref>\nWe don&apos;t really had to implement this class, but it&apos;s good to have it for future use\n"
  example: []
  syntax:
    content: 'public class Role : IdentityRole<int>'
    content.vb: Public Class Role Inherits IdentityRole(Of Integer)
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}
  inheritedMembers:
  - Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}.ToString
  - Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}.Id
  - Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}.Name
  - Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}.NormalizedName
  - Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}.ConcurrencyStamp
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - App.Auth.Utils.Role.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  - App.Auth.Utils.Role.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
- uid: App.Auth.Utils.Role.#ctor(System.String)
  commentId: M:App.Auth.Utils.Role.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: App.Auth.Utils.Role
  langs:
  - csharp
  - vb
  name: Role(string)
  nameWithType: Role.Role(string)
  fullName: App.Auth.Utils.Role.Role(string)
  type: Constructor
  source:
    remote:
      path: App/Auth/Utils/Role.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: .ctor
    path: ../App/Auth/Utils/Role.cs
    startLine: 11
  assemblies:
  - App
  namespace: App.Auth.Utils
  example: []
  syntax:
    content: public Role(string role)
    parameters:
    - id: role
      type: System.String
    content.vb: Public Sub New(role As String)
  overload: App.Auth.Utils.Role.#ctor*
  nameWithType.vb: Role.New(String)
  fullName.vb: App.Auth.Utils.Role.New(String)
  name.vb: New(String)
- uid: App.Auth.Utils.Role.#ctor
  commentId: M:App.Auth.Utils.Role.#ctor
  id: '#ctor'
  parent: App.Auth.Utils.Role
  langs:
  - csharp
  - vb
  name: Role()
  nameWithType: Role.Role()
  fullName: App.Auth.Utils.Role.Role()
  type: Constructor
  source:
    remote:
      path: App/Auth/Utils/Role.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: .ctor
    path: ../App/Auth/Utils/Role.cs
    startLine: 16
  assemblies:
  - App
  namespace: App.Auth.Utils
  example: []
  syntax:
    content: public Role()
    content.vb: Public Sub New()
  overload: App.Auth.Utils.Role.#ctor*
  nameWithType.vb: Role.New()
  fullName.vb: App.Auth.Utils.Role.New()
  name.vb: New()
references:
- uid: Microsoft.AspNetCore.Identity.IdentityRole`1
  commentId: T:Microsoft.AspNetCore.Identity.IdentityRole`1
  isExternal: true
  name: IdentityRole<TKey>
  nameWithType: IdentityRole<TKey>
  fullName: Microsoft.AspNetCore.Identity.IdentityRole<TKey>
  nameWithType.vb: IdentityRole(Of TKey)
  fullName.vb: Microsoft.AspNetCore.Identity.IdentityRole(Of TKey)
  name.vb: IdentityRole(Of TKey)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityRole`1
    name: IdentityRole
    isExternal: true
  - name: <
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityRole`1
    name: IdentityRole
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
- uid: App.Auth.Utils
  commentId: N:App.Auth.Utils
  name: App.Auth.Utils
  nameWithType: App.Auth.Utils
  fullName: App.Auth.Utils
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Auth
    name: Auth
  - name: .
  - uid: App.Auth.Utils
    name: Utils
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Auth
    name: Auth
  - name: .
  - uid: App.Auth.Utils
    name: Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}
  commentId: T:Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IdentityRole`1
  name: IdentityRole<int>
  nameWithType: IdentityRole<int>
  fullName: Microsoft.AspNetCore.Identity.IdentityRole<int>
  nameWithType.vb: IdentityRole(Of Integer)
  fullName.vb: Microsoft.AspNetCore.Identity.IdentityRole(Of Integer)
  name.vb: IdentityRole(Of Integer)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityRole`1
    name: IdentityRole
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityRole`1
    name: IdentityRole
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}.ToString
  commentId: M:Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}.ToString
  parent: Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}
  definition: Microsoft.AspNetCore.Identity.IdentityRole`1.ToString
  name: ToString()
  nameWithType: IdentityRole<int>.ToString()
  fullName: Microsoft.AspNetCore.Identity.IdentityRole<int>.ToString()
  nameWithType.vb: IdentityRole(Of Integer).ToString()
  fullName.vb: Microsoft.AspNetCore.Identity.IdentityRole(Of Integer).ToString()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}.Id
  commentId: P:Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}.Id
  parent: Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}
  definition: Microsoft.AspNetCore.Identity.IdentityRole`1.Id
  name: Id
  nameWithType: IdentityRole<int>.Id
  fullName: Microsoft.AspNetCore.Identity.IdentityRole<int>.Id
  nameWithType.vb: IdentityRole(Of Integer).Id
  fullName.vb: Microsoft.AspNetCore.Identity.IdentityRole(Of Integer).Id
- uid: Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}.Name
  commentId: P:Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}.Name
  parent: Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}
  definition: Microsoft.AspNetCore.Identity.IdentityRole`1.Name
  name: Name
  nameWithType: IdentityRole<int>.Name
  fullName: Microsoft.AspNetCore.Identity.IdentityRole<int>.Name
  nameWithType.vb: IdentityRole(Of Integer).Name
  fullName.vb: Microsoft.AspNetCore.Identity.IdentityRole(Of Integer).Name
- uid: Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}.NormalizedName
  commentId: P:Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}.NormalizedName
  parent: Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}
  definition: Microsoft.AspNetCore.Identity.IdentityRole`1.NormalizedName
  name: NormalizedName
  nameWithType: IdentityRole<int>.NormalizedName
  fullName: Microsoft.AspNetCore.Identity.IdentityRole<int>.NormalizedName
  nameWithType.vb: IdentityRole(Of Integer).NormalizedName
  fullName.vb: Microsoft.AspNetCore.Identity.IdentityRole(Of Integer).NormalizedName
- uid: Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}.ConcurrencyStamp
  commentId: P:Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}.ConcurrencyStamp
  parent: Microsoft.AspNetCore.Identity.IdentityRole{System.Int32}
  definition: Microsoft.AspNetCore.Identity.IdentityRole`1.ConcurrencyStamp
  name: ConcurrencyStamp
  nameWithType: IdentityRole<int>.ConcurrencyStamp
  fullName: Microsoft.AspNetCore.Identity.IdentityRole<int>.ConcurrencyStamp
  nameWithType.vb: IdentityRole(Of Integer).ConcurrencyStamp
  fullName.vb: Microsoft.AspNetCore.Identity.IdentityRole(Of Integer).ConcurrencyStamp
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: App.Auth.Utils.Role.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  name: GetPropertyExpression<Role>(Role, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<Role>(Role, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<App.Auth.Utils.Role>(App.Auth.Utils.Role, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of Role)(Role, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of App.Auth.Utils.Role)(App.Auth.Utils.Role, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of Role)(Role, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.Auth.Utils.Role,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - uid: App.Auth.Utils.Role
    name: Role
  - name: '>'
  - name: (
  - uid: App.Auth.Utils.Role
    name: Role
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.Auth.Utils.Role,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - uid: App.Auth.Utils.Role
    name: Role
  - name: )
  - name: (
  - uid: App.Auth.Utils.Role
    name: Role
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Auth.Utils.Role.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  name: GetSetPropertyEventCallback<Role>(Role, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<Role>(Role, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<App.Auth.Utils.Role>(App.Auth.Utils.Role, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of Role)(Role, Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of App.Auth.Utils.Role)(App.Auth.Utils.Role, Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of Role)(Role, Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.Auth.Utils.Role,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - uid: App.Auth.Utils.Role
    name: Role
  - name: '>'
  - name: (
  - uid: App.Auth.Utils.Role
    name: Role
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.Auth.Utils.Role,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - uid: App.Auth.Utils.Role
    name: Role
  - name: )
  - name: (
  - uid: App.Auth.Utils.Role
    name: Role
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: true
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore.Identity
    name: Identity
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore.Identity
    name: Identity
    isExternal: true
- uid: Microsoft.AspNetCore.Identity.IdentityRole`1.ToString
  commentId: M:Microsoft.AspNetCore.Identity.IdentityRole`1.ToString
  isExternal: true
  name: ToString()
  nameWithType: IdentityRole<TKey>.ToString()
  fullName: Microsoft.AspNetCore.Identity.IdentityRole<TKey>.ToString()
  nameWithType.vb: IdentityRole(Of TKey).ToString()
  fullName.vb: Microsoft.AspNetCore.Identity.IdentityRole(Of TKey).ToString()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityRole`1.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityRole`1.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.AspNetCore.Identity.IdentityRole`1.Id
  commentId: P:Microsoft.AspNetCore.Identity.IdentityRole`1.Id
  isExternal: true
  name: Id
  nameWithType: IdentityRole<TKey>.Id
  fullName: Microsoft.AspNetCore.Identity.IdentityRole<TKey>.Id
  nameWithType.vb: IdentityRole(Of TKey).Id
  fullName.vb: Microsoft.AspNetCore.Identity.IdentityRole(Of TKey).Id
- uid: Microsoft.AspNetCore.Identity.IdentityRole`1.Name
  commentId: P:Microsoft.AspNetCore.Identity.IdentityRole`1.Name
  isExternal: true
  name: Name
  nameWithType: IdentityRole<TKey>.Name
  fullName: Microsoft.AspNetCore.Identity.IdentityRole<TKey>.Name
  nameWithType.vb: IdentityRole(Of TKey).Name
  fullName.vb: Microsoft.AspNetCore.Identity.IdentityRole(Of TKey).Name
- uid: Microsoft.AspNetCore.Identity.IdentityRole`1.NormalizedName
  commentId: P:Microsoft.AspNetCore.Identity.IdentityRole`1.NormalizedName
  isExternal: true
  name: NormalizedName
  nameWithType: IdentityRole<TKey>.NormalizedName
  fullName: Microsoft.AspNetCore.Identity.IdentityRole<TKey>.NormalizedName
  nameWithType.vb: IdentityRole(Of TKey).NormalizedName
  fullName.vb: Microsoft.AspNetCore.Identity.IdentityRole(Of TKey).NormalizedName
- uid: Microsoft.AspNetCore.Identity.IdentityRole`1.ConcurrencyStamp
  commentId: P:Microsoft.AspNetCore.Identity.IdentityRole`1.ConcurrencyStamp
  isExternal: true
  name: ConcurrencyStamp
  nameWithType: IdentityRole<TKey>.ConcurrencyStamp
  fullName: Microsoft.AspNetCore.Identity.IdentityRole<TKey>.ConcurrencyStamp
  nameWithType.vb: IdentityRole(Of TKey).ConcurrencyStamp
  fullName.vb: Microsoft.AspNetCore.Identity.IdentityRole(Of TKey).ConcurrencyStamp
- uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetPropertyExpression<T>(T, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<T>(T, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<T>(T, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of T)(T, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils.ReflectionExtensions
  commentId: T:App.Utils.ReflectionExtensions
  parent: App.Utils
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: App.Utils.ReflectionExtensions
- uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils
  commentId: N:App.Utils
  name: App.Utils
  nameWithType: App.Utils
  fullName: App.Utils
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
- uid: App.Auth.Utils.Role.#ctor*
  commentId: Overload:App.Auth.Utils.Role.#ctor
  name: Role
  nameWithType: Role.Role
  fullName: App.Auth.Utils.Role.Role
  nameWithType.vb: Role.New
  fullName.vb: App.Auth.Utils.Role.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
