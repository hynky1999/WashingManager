### YamlMime:ManagedReference
items:
- uid: App.ServerServices.ITimedQueue`1
  commentId: T:App.ServerServices.ITimedQueue`1
  id: ITimedQueue`1
  parent: App.ServerServices
  children:
  - App.ServerServices.ITimedQueue`1.OnChange
  - App.ServerServices.ITimedQueue`1.OnEvent
  langs:
  - csharp
  - vb
  name: ITimedQueue<TItem>
  nameWithType: ITimedQueue<TItem>
  fullName: App.ServerServices.ITimedQueue<TItem>
  type: Interface
  source:
    remote:
      path: App/ServerServices/TimedQueue.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: ITimedQueue
    path: ../App/ServerServices/TimedQueue.cs
    startLine: 10
  assemblies:
  - App
  namespace: App.ServerServices
  summary: "\nITimedQueue represents queue of objects that will be processed in specific time.\nThe queue will plan a timer whenever a OnChange is called, the event with shortest duration will be selected.\nTo process this event you need to subscribe to the OnTimer event.\nBear in mind that when Timer is invoked it will not automatically requeue another one (Call OnChange).\nYou have to call OnChange manually in event handler.\n"
  example: []
  syntax:
    content: 'public interface ITimedQueue<TItem> : IDisposable'
    typeParameters:
    - id: TItem
      description: ''
    content.vb: Public Interface ITimedQueue(Of TItem) Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  extensionMethods:
  - App.ServerServices.ITimedQueue`1.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  - App.ServerServices.ITimedQueue`1.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
  nameWithType.vb: ITimedQueue(Of TItem)
  fullName.vb: App.ServerServices.ITimedQueue(Of TItem)
  name.vb: ITimedQueue(Of TItem)
- uid: App.ServerServices.ITimedQueue`1.OnEvent
  commentId: E:App.ServerServices.ITimedQueue`1.OnEvent
  id: OnEvent
  parent: App.ServerServices.ITimedQueue`1
  langs:
  - csharp
  - vb
  name: OnEvent
  nameWithType: ITimedQueue<TItem>.OnEvent
  fullName: App.ServerServices.ITimedQueue<TItem>.OnEvent
  type: Event
  source:
    remote:
      path: App/ServerServices/TimedQueue.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: OnEvent
    path: ../App/ServerServices/TimedQueue.cs
    startLine: 15
  assemblies:
  - App
  namespace: App.ServerServices
  summary: "\nEvent that will be invoked when next event is ready to be processed.\n"
  example: []
  syntax:
    content: event EventHandler<TItem>? OnEvent
    return:
      type: System.EventHandler{{TItem}}
    content.vb: Event OnEvent As EventHandler(Of TItem)
  nameWithType.vb: ITimedQueue(Of TItem).OnEvent
  fullName.vb: App.ServerServices.ITimedQueue(Of TItem).OnEvent
- uid: App.ServerServices.ITimedQueue`1.OnChange
  commentId: M:App.ServerServices.ITimedQueue`1.OnChange
  id: OnChange
  parent: App.ServerServices.ITimedQueue`1
  langs:
  - csharp
  - vb
  name: OnChange()
  nameWithType: ITimedQueue<TItem>.OnChange()
  fullName: App.ServerServices.ITimedQueue<TItem>.OnChange()
  type: Method
  source:
    remote:
      path: App/ServerServices/TimedQueue.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: OnChange
    path: ../App/ServerServices/TimedQueue.cs
    startLine: 21
  assemblies:
  - App
  namespace: App.ServerServices
  summary: "\nFind next event to queue.\n"
  example: []
  syntax:
    content: Task OnChange()
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function OnChange() As Task
  overload: App.ServerServices.ITimedQueue`1.OnChange*
  nameWithType.vb: ITimedQueue(Of TItem).OnChange()
  fullName.vb: App.ServerServices.ITimedQueue(Of TItem).OnChange()
references:
- uid: App.ServerServices
  commentId: N:App.ServerServices
  name: App.ServerServices
  nameWithType: App.ServerServices
  fullName: App.ServerServices
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.ServerServices
    name: ServerServices
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.ServerServices
    name: ServerServices
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
- uid: App.ServerServices.ITimedQueue`1.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  name: GetPropertyExpression<ITimedQueue<TItem>>(ITimedQueue<TItem>, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<ITimedQueue<TItem>>(ITimedQueue<TItem>, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<App.ServerServices.ITimedQueue<TItem>>(App.ServerServices.ITimedQueue<TItem>, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of ITimedQueue(Of TItem))(ITimedQueue(Of TItem), PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of App.ServerServices.ITimedQueue(Of TItem))(App.ServerServices.ITimedQueue(Of TItem), System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of ITimedQueue(Of TItem))(ITimedQueue(Of TItem), PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.ServerServices.ITimedQueue{`0},System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - uid: App.ServerServices.ITimedQueue`1
    name: ITimedQueue
  - name: <
  - name: TItem
  - name: '>'
  - name: '>'
  - name: (
  - uid: App.ServerServices.ITimedQueue`1
    name: ITimedQueue
  - name: <
  - name: TItem
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.ServerServices.ITimedQueue{`0},System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - uid: App.ServerServices.ITimedQueue`1
    name: ITimedQueue
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: )
  - name: (
  - uid: App.ServerServices.ITimedQueue`1
    name: ITimedQueue
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.ServerServices.ITimedQueue`1.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  name: GetSetPropertyEventCallback<ITimedQueue<TItem>>(ITimedQueue<TItem>, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<ITimedQueue<TItem>>(ITimedQueue<TItem>, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<App.ServerServices.ITimedQueue<TItem>>(App.ServerServices.ITimedQueue<TItem>, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of ITimedQueue(Of TItem))(ITimedQueue(Of TItem), Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of App.ServerServices.ITimedQueue(Of TItem))(App.ServerServices.ITimedQueue(Of TItem), Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of ITimedQueue(Of TItem))(ITimedQueue(Of TItem), Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.ServerServices.ITimedQueue{`0},System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - uid: App.ServerServices.ITimedQueue`1
    name: ITimedQueue
  - name: <
  - name: TItem
  - name: '>'
  - name: '>'
  - name: (
  - uid: App.ServerServices.ITimedQueue`1
    name: ITimedQueue
  - name: <
  - name: TItem
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.ServerServices.ITimedQueue{`0},System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - uid: App.ServerServices.ITimedQueue`1
    name: ITimedQueue
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: )
  - name: (
  - uid: App.ServerServices.ITimedQueue`1
    name: ITimedQueue
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetPropertyExpression<T>(T, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<T>(T, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<T>(T, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of T)(T, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils.ReflectionExtensions
  commentId: T:App.Utils.ReflectionExtensions
  parent: App.Utils
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: App.Utils.ReflectionExtensions
- uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: App.Utils
  commentId: N:App.Utils
  name: App.Utils
  nameWithType: App.Utils
  fullName: App.Utils
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
- uid: System.EventHandler{{TItem}}
  commentId: T:System.EventHandler{`0}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<TItem>
  nameWithType: EventHandler<TItem>
  fullName: System.EventHandler<TItem>
  nameWithType.vb: EventHandler(Of TItem)
  fullName.vb: System.EventHandler(Of TItem)
  name.vb: EventHandler(Of TItem)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
  - name: <
  - name: TItem
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: App.ServerServices.ITimedQueue`1.OnChange*
  commentId: Overload:App.ServerServices.ITimedQueue`1.OnChange
  name: OnChange
  nameWithType: ITimedQueue<TItem>.OnChange
  fullName: App.ServerServices.ITimedQueue<TItem>.OnChange
  nameWithType.vb: ITimedQueue(Of TItem).OnChange
  fullName.vb: App.ServerServices.ITimedQueue(Of TItem).OnChange
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
