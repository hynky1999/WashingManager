### YamlMime:ManagedReference
items:
- uid: App.Data.Models.BorrowPerson
  commentId: T:App.Data.Models.BorrowPerson
  id: BorrowPerson
  parent: App.Data.Models
  children:
  - App.Data.Models.BorrowPerson.BorrowPersonID
  - App.Data.Models.BorrowPerson.Clone
  - App.Data.Models.BorrowPerson.HumanReadableLoc(App.Data.ServiceInterfaces.ILocalizationService)
  - App.Data.Models.BorrowPerson.Name
  - App.Data.Models.BorrowPerson.Surname
  - App.Data.Models.BorrowPerson.User
  - App.Data.Models.BorrowPerson.UserID
  langs:
  - csharp
  - vb
  name: BorrowPerson
  nameWithType: BorrowPerson
  fullName: App.Data.Models.BorrowPerson
  type: Class
  source:
    remote:
      path: App/Data/Models/BorrowPerson.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: BorrowPerson
    path: ../App/Data/Models/BorrowPerson.cs
    startLine: 16
  assemblies:
  - App
  namespace: App.Data.Models
  summary: "\nmodel for representing a Person that borrows a Borrowable Entity\n"
  example: []
  syntax:
    content: 'public class BorrowPerson : IDBModel, ICloneable'
    content.vb: Public Class BorrowPerson Implements IDBModel, ICloneable
  inheritance:
  - System.Object
  implements:
  - App.Data.ModelInterfaces.IDBModel
  - System.ICloneable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - App.Data.Models.BorrowPerson.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  - App.Data.Models.BorrowPerson.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
- uid: App.Data.Models.BorrowPerson.BorrowPersonID
  commentId: P:App.Data.Models.BorrowPerson.BorrowPersonID
  id: BorrowPersonID
  parent: App.Data.Models.BorrowPerson
  langs:
  - csharp
  - vb
  name: BorrowPersonID
  nameWithType: BorrowPerson.BorrowPersonID
  fullName: App.Data.Models.BorrowPerson.BorrowPersonID
  type: Property
  source:
    remote:
      path: App/Data/Models/BorrowPerson.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: BorrowPersonID
    path: ../App/Data/Models/BorrowPerson.cs
    startLine: 19
  assemblies:
  - App
  namespace: App.Data.Models
  syntax:
    content: >-
      [UIVisibility(UIVisibilityEnum.Disabled)]

      [Key]

      public int BorrowPersonID { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <UIVisibility(UIVisibilityEnum.Disabled)>

      <Key>

      Public Property BorrowPersonID As Integer
  overload: App.Data.Models.BorrowPerson.BorrowPersonID*
  attributes:
  - type: App.Data.Utils.UIVisibility
    ctor: App.Data.Utils.UIVisibility.#ctor(App.Data.Utils.UIVisibilityEnum)
    arguments:
    - type: App.Data.Utils.UIVisibilityEnum
      value: 1
  - type: System.ComponentModel.DataAnnotations.KeyAttribute
    ctor: System.ComponentModel.DataAnnotations.KeyAttribute.#ctor
    arguments: []
- uid: App.Data.Models.BorrowPerson.Name
  commentId: P:App.Data.Models.BorrowPerson.Name
  id: Name
  parent: App.Data.Models.BorrowPerson
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: BorrowPerson.Name
  fullName: App.Data.Models.BorrowPerson.Name
  type: Property
  source:
    remote:
      path: App/Data/Models/BorrowPerson.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: Name
    path: ../App/Data/Models/BorrowPerson.cs
    startLine: 24
  assemblies:
  - App
  namespace: App.Data.Models
  syntax:
    content: >-
      [Required]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      Public Property Name As String
  overload: App.Data.Models.BorrowPerson.Name*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: App.Data.Models.BorrowPerson.Surname
  commentId: P:App.Data.Models.BorrowPerson.Surname
  id: Surname
  parent: App.Data.Models.BorrowPerson
  langs:
  - csharp
  - vb
  name: Surname
  nameWithType: BorrowPerson.Surname
  fullName: App.Data.Models.BorrowPerson.Surname
  type: Property
  source:
    remote:
      path: App/Data/Models/BorrowPerson.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: Surname
    path: ../App/Data/Models/BorrowPerson.cs
    startLine: 28
  assemblies:
  - App
  namespace: App.Data.Models
  syntax:
    content: >-
      [Required]

      public string Surname { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      Public Property Surname As String
  overload: App.Data.Models.BorrowPerson.Surname*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: App.Data.Models.BorrowPerson.UserID
  commentId: P:App.Data.Models.BorrowPerson.UserID
  id: UserID
  parent: App.Data.Models.BorrowPerson
  langs:
  - csharp
  - vb
  name: UserID
  nameWithType: BorrowPerson.UserID
  fullName: App.Data.Models.BorrowPerson.UserID
  type: Property
  source:
    remote:
      path: App/Data/Models/BorrowPerson.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: UserID
    path: ../App/Data/Models/BorrowPerson.cs
    startLine: 32
  assemblies:
  - App
  namespace: App.Data.Models
  syntax:
    content: >-
      [UIVisibility(UIVisibilityEnum.Disabled)]

      public int? UserID { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <UIVisibility(UIVisibilityEnum.Disabled)>

      Public Property UserID As Integer?
  overload: App.Data.Models.BorrowPerson.UserID*
  attributes:
  - type: App.Data.Utils.UIVisibility
    ctor: App.Data.Utils.UIVisibility.#ctor(App.Data.Utils.UIVisibilityEnum)
    arguments:
    - type: App.Data.Utils.UIVisibilityEnum
      value: 1
- uid: App.Data.Models.BorrowPerson.User
  commentId: P:App.Data.Models.BorrowPerson.User
  id: User
  parent: App.Data.Models.BorrowPerson
  langs:
  - csharp
  - vb
  name: User
  nameWithType: BorrowPerson.User
  fullName: App.Data.Models.BorrowPerson.User
  type: Property
  source:
    remote:
      path: App/Data/Models/BorrowPerson.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: User
    path: ../App/Data/Models/BorrowPerson.cs
    startLine: 36
  assemblies:
  - App
  namespace: App.Data.Models
  syntax:
    content: public ApplicationUser? User { get; set; }
    parameters: []
    return:
      type: App.Auth.Models.ApplicationUser
    content.vb: Public Property User As ApplicationUser
  overload: App.Data.Models.BorrowPerson.User*
- uid: App.Data.Models.BorrowPerson.Clone
  commentId: M:App.Data.Models.BorrowPerson.Clone
  id: Clone
  parent: App.Data.Models.BorrowPerson
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: BorrowPerson.Clone()
  fullName: App.Data.Models.BorrowPerson.Clone()
  type: Method
  source:
    remote:
      path: App/Data/Models/BorrowPerson.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: Clone
    path: ../App/Data/Models/BorrowPerson.cs
    startLine: 39
  assemblies:
  - App
  namespace: App.Data.Models
  syntax:
    content: public object Clone()
    return:
      type: System.Object
    content.vb: Public Function Clone() As Object
  overload: App.Data.Models.BorrowPerson.Clone*
  implements:
  - System.ICloneable.Clone
- uid: App.Data.Models.BorrowPerson.HumanReadableLoc(App.Data.ServiceInterfaces.ILocalizationService)
  commentId: M:App.Data.Models.BorrowPerson.HumanReadableLoc(App.Data.ServiceInterfaces.ILocalizationService)
  id: HumanReadableLoc(App.Data.ServiceInterfaces.ILocalizationService)
  parent: App.Data.Models.BorrowPerson
  langs:
  - csharp
  - vb
  name: HumanReadableLoc(ILocalizationService)
  nameWithType: BorrowPerson.HumanReadableLoc(ILocalizationService)
  fullName: App.Data.Models.BorrowPerson.HumanReadableLoc(App.Data.ServiceInterfaces.ILocalizationService)
  type: Method
  source:
    remote:
      path: App/Data/Models/BorrowPerson.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: HumanReadableLoc
    path: ../App/Data/Models/BorrowPerson.cs
    startLine: 44
  assemblies:
  - App
  namespace: App.Data.Models
  syntax:
    content: public string HumanReadableLoc(ILocalizationService loc)
    parameters:
    - id: loc
      type: App.Data.ServiceInterfaces.ILocalizationService
    return:
      type: System.String
    content.vb: Public Function HumanReadableLoc(loc As ILocalizationService) As String
  overload: App.Data.Models.BorrowPerson.HumanReadableLoc*
  implements:
  - App.Data.ModelInterfaces.IDBModel.HumanReadableLoc(App.Data.ServiceInterfaces.ILocalizationService)
references:
- uid: App.Data.Models
  commentId: N:App.Data.Models
  name: App.Data.Models
  nameWithType: App.Data.Models
  fullName: App.Data.Models
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.Models
    name: Models
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.Models
    name: Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: App.Data.ModelInterfaces.IDBModel
  commentId: T:App.Data.ModelInterfaces.IDBModel
  parent: App.Data.ModelInterfaces
  name: IDBModel
  nameWithType: IDBModel
  fullName: App.Data.ModelInterfaces.IDBModel
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: App.Data.Models.BorrowPerson.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  name: GetPropertyExpression<BorrowPerson>(BorrowPerson, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<BorrowPerson>(BorrowPerson, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<App.Data.Models.BorrowPerson>(App.Data.Models.BorrowPerson, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of BorrowPerson)(BorrowPerson, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of App.Data.Models.BorrowPerson)(App.Data.Models.BorrowPerson, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of BorrowPerson)(BorrowPerson, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.Data.Models.BorrowPerson,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - uid: App.Data.Models.BorrowPerson
    name: BorrowPerson
  - name: '>'
  - name: (
  - uid: App.Data.Models.BorrowPerson
    name: BorrowPerson
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.Data.Models.BorrowPerson,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - uid: App.Data.Models.BorrowPerson
    name: BorrowPerson
  - name: )
  - name: (
  - uid: App.Data.Models.BorrowPerson
    name: BorrowPerson
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Data.Models.BorrowPerson.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  name: GetSetPropertyEventCallback<BorrowPerson>(BorrowPerson, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<BorrowPerson>(BorrowPerson, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<App.Data.Models.BorrowPerson>(App.Data.Models.BorrowPerson, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of BorrowPerson)(BorrowPerson, Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of App.Data.Models.BorrowPerson)(App.Data.Models.BorrowPerson, Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of BorrowPerson)(BorrowPerson, Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.Data.Models.BorrowPerson,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - uid: App.Data.Models.BorrowPerson
    name: BorrowPerson
  - name: '>'
  - name: (
  - uid: App.Data.Models.BorrowPerson
    name: BorrowPerson
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.Data.Models.BorrowPerson,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - uid: App.Data.Models.BorrowPerson
    name: BorrowPerson
  - name: )
  - name: (
  - uid: App.Data.Models.BorrowPerson
    name: BorrowPerson
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: App.Data.ModelInterfaces
  commentId: N:App.Data.ModelInterfaces
  name: App.Data.ModelInterfaces
  nameWithType: App.Data.ModelInterfaces
  fullName: App.Data.ModelInterfaces
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.ModelInterfaces
    name: ModelInterfaces
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.ModelInterfaces
    name: ModelInterfaces
- uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetPropertyExpression<T>(T, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<T>(T, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<T>(T, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of T)(T, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils.ReflectionExtensions
  commentId: T:App.Utils.ReflectionExtensions
  parent: App.Utils
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: App.Utils.ReflectionExtensions
- uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils
  commentId: N:App.Utils
  name: App.Utils
  nameWithType: App.Utils
  fullName: App.Utils
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
- uid: App.Data.Models.BorrowPerson.BorrowPersonID*
  commentId: Overload:App.Data.Models.BorrowPerson.BorrowPersonID
  name: BorrowPersonID
  nameWithType: BorrowPerson.BorrowPersonID
  fullName: App.Data.Models.BorrowPerson.BorrowPersonID
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: App.Data.Models.BorrowPerson.Name*
  commentId: Overload:App.Data.Models.BorrowPerson.Name
  name: Name
  nameWithType: BorrowPerson.Name
  fullName: App.Data.Models.BorrowPerson.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: App.Data.Models.BorrowPerson.Surname*
  commentId: Overload:App.Data.Models.BorrowPerson.Surname
  name: Surname
  nameWithType: BorrowPerson.Surname
  fullName: App.Data.Models.BorrowPerson.Surname
- uid: App.Data.Models.BorrowPerson.UserID*
  commentId: Overload:App.Data.Models.BorrowPerson.UserID
  name: UserID
  nameWithType: BorrowPerson.UserID
  fullName: App.Data.Models.BorrowPerson.UserID
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: App.Data.Models.BorrowPerson.User*
  commentId: Overload:App.Data.Models.BorrowPerson.User
  name: User
  nameWithType: BorrowPerson.User
  fullName: App.Data.Models.BorrowPerson.User
- uid: App.Auth.Models.ApplicationUser
  commentId: T:App.Auth.Models.ApplicationUser
  parent: App.Auth.Models
  name: ApplicationUser
  nameWithType: ApplicationUser
  fullName: App.Auth.Models.ApplicationUser
- uid: App.Auth.Models
  commentId: N:App.Auth.Models
  name: App.Auth.Models
  nameWithType: App.Auth.Models
  fullName: App.Auth.Models
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Auth
    name: Auth
  - name: .
  - uid: App.Auth.Models
    name: Models
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Auth
    name: Auth
  - name: .
  - uid: App.Auth.Models
    name: Models
- uid: App.Data.Models.BorrowPerson.Clone*
  commentId: Overload:App.Data.Models.BorrowPerson.Clone
  name: Clone
  nameWithType: BorrowPerson.Clone
  fullName: App.Data.Models.BorrowPerson.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: App.Data.Models.BorrowPerson.HumanReadableLoc*
  commentId: Overload:App.Data.Models.BorrowPerson.HumanReadableLoc
  name: HumanReadableLoc
  nameWithType: BorrowPerson.HumanReadableLoc
  fullName: App.Data.Models.BorrowPerson.HumanReadableLoc
- uid: App.Data.ModelInterfaces.IDBModel.HumanReadableLoc(App.Data.ServiceInterfaces.ILocalizationService)
  commentId: M:App.Data.ModelInterfaces.IDBModel.HumanReadableLoc(App.Data.ServiceInterfaces.ILocalizationService)
  parent: App.Data.ModelInterfaces.IDBModel
  name: HumanReadableLoc(ILocalizationService)
  nameWithType: IDBModel.HumanReadableLoc(ILocalizationService)
  fullName: App.Data.ModelInterfaces.IDBModel.HumanReadableLoc(App.Data.ServiceInterfaces.ILocalizationService)
  spec.csharp:
  - uid: App.Data.ModelInterfaces.IDBModel.HumanReadableLoc(App.Data.ServiceInterfaces.ILocalizationService)
    name: HumanReadableLoc
  - name: (
  - uid: App.Data.ServiceInterfaces.ILocalizationService
    name: ILocalizationService
  - name: )
  spec.vb:
  - uid: App.Data.ModelInterfaces.IDBModel.HumanReadableLoc(App.Data.ServiceInterfaces.ILocalizationService)
    name: HumanReadableLoc
  - name: (
  - uid: App.Data.ServiceInterfaces.ILocalizationService
    name: ILocalizationService
  - name: )
- uid: App.Data.ServiceInterfaces.ILocalizationService
  commentId: T:App.Data.ServiceInterfaces.ILocalizationService
  parent: App.Data.ServiceInterfaces
  name: ILocalizationService
  nameWithType: ILocalizationService
  fullName: App.Data.ServiceInterfaces.ILocalizationService
- uid: App.Data.ServiceInterfaces
  commentId: N:App.Data.ServiceInterfaces
  name: App.Data.ServiceInterfaces
  nameWithType: App.Data.ServiceInterfaces
  fullName: App.Data.ServiceInterfaces
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.ServiceInterfaces
    name: ServiceInterfaces
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.ServiceInterfaces
    name: ServiceInterfaces
