### YamlMime:ManagedReference
items:
- uid: App.Data.Utils.Status
  commentId: T:App.Data.Utils.Status
  id: Status
  parent: App.Data.Utils
  children:
  - App.Data.Utils.Status.Broken
  - App.Data.Utils.Status.Free
  - App.Data.Utils.Status.Taken
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: Status
  fullName: App.Data.Utils.Status
  type: Enum
  source:
    remote:
      path: App/Data/Utils/Status.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: Status
    path: ../App/Data/Utils/Status.cs
    startLine: 5
  assemblies:
  - App
  namespace: App.Data.Utils
  summary: "\nRepresents status of Borrowable entity\n"
  example: []
  syntax:
    content: public enum Status
    content.vb: Public Enum Status
  extensionMethods:
  - App.Data.Utils.Status.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  - App.Data.Utils.Status.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
- uid: App.Data.Utils.Status.Taken
  commentId: F:App.Data.Utils.Status.Taken
  id: Taken
  parent: App.Data.Utils.Status
  langs:
  - csharp
  - vb
  name: Taken
  nameWithType: Status.Taken
  fullName: App.Data.Utils.Status.Taken
  type: Field
  source:
    remote:
      path: App/Data/Utils/Status.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: Taken
    path: ../App/Data/Utils/Status.cs
    startLine: 11
  assemblies:
  - App
  namespace: App.Data.Utils
  summary: "\nTaken by someone\nIt should have borrow with no end\n"
  example: []
  syntax:
    content: Taken = 0
    return:
      type: App.Data.Utils.Status
- uid: App.Data.Utils.Status.Broken
  commentId: F:App.Data.Utils.Status.Broken
  id: Broken
  parent: App.Data.Utils.Status
  langs:
  - csharp
  - vb
  name: Broken
  nameWithType: Status.Broken
  fullName: App.Data.Utils.Status.Broken
  type: Field
  source:
    remote:
      path: App/Data/Utils/Status.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: Broken
    path: ../App/Data/Utils/Status.cs
    startLine: 16
  assemblies:
  - App
  namespace: App.Data.Utils
  summary: "\nBroken and not usable\n"
  example: []
  syntax:
    content: Broken = 1
    return:
      type: App.Data.Utils.Status
- uid: App.Data.Utils.Status.Free
  commentId: F:App.Data.Utils.Status.Free
  id: Free
  parent: App.Data.Utils.Status
  langs:
  - csharp
  - vb
  name: Free
  nameWithType: Status.Free
  fullName: App.Data.Utils.Status.Free
  type: Field
  source:
    remote:
      path: App/Data/Utils/Status.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: Free
    path: ../App/Data/Utils/Status.cs
    startLine: 21
  assemblies:
  - App
  namespace: App.Data.Utils
  summary: "\nAvailable for borrowing\n"
  example: []
  syntax:
    content: Free = 2
    return:
      type: App.Data.Utils.Status
references:
- uid: App.Data.Utils
  commentId: N:App.Data.Utils
  name: App.Data.Utils
  nameWithType: App.Data.Utils
  fullName: App.Data.Utils
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.Utils
    name: Utils
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.Utils
    name: Utils
- uid: App.Data.Utils.Status.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  name: GetPropertyExpression<Status>(Status, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<Status>(Status, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<App.Data.Utils.Status>(App.Data.Utils.Status, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of Status)(Status, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of App.Data.Utils.Status)(App.Data.Utils.Status, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of Status)(Status, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.Data.Utils.Status,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - uid: App.Data.Utils.Status
    name: Status
  - name: '>'
  - name: (
  - uid: App.Data.Utils.Status
    name: Status
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.Data.Utils.Status,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - uid: App.Data.Utils.Status
    name: Status
  - name: )
  - name: (
  - uid: App.Data.Utils.Status
    name: Status
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Data.Utils.Status.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  name: GetSetPropertyEventCallback<Status>(Status, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<Status>(Status, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<App.Data.Utils.Status>(App.Data.Utils.Status, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of Status)(Status, Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of App.Data.Utils.Status)(App.Data.Utils.Status, Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of Status)(Status, Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.Data.Utils.Status,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - uid: App.Data.Utils.Status
    name: Status
  - name: '>'
  - name: (
  - uid: App.Data.Utils.Status
    name: Status
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.Data.Utils.Status,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - uid: App.Data.Utils.Status
    name: Status
  - name: )
  - name: (
  - uid: App.Data.Utils.Status
    name: Status
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetPropertyExpression<T>(T, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<T>(T, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<T>(T, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of T)(T, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils.ReflectionExtensions
  commentId: T:App.Utils.ReflectionExtensions
  parent: App.Utils
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: App.Utils.ReflectionExtensions
- uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils
  commentId: N:App.Utils
  name: App.Utils
  nameWithType: App.Utils
  fullName: App.Utils
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
- uid: App.Data.Utils.Status
  commentId: T:App.Data.Utils.Status
  parent: App.Data.Utils
  name: Status
  nameWithType: Status
  fullName: App.Data.Utils.Status
