### YamlMime:ManagedReference
items:
- uid: App.Data.ServiceInterfaces.IBorrowPersonService
  commentId: T:App.Data.ServiceInterfaces.IBorrowPersonService
  id: IBorrowPersonService
  parent: App.Data.ServiceInterfaces
  children:
  - App.Data.ServiceInterfaces.IBorrowPersonService.GetByIdAsync(System.Int32)
  - App.Data.ServiceInterfaces.IBorrowPersonService.GetIdByNameAndSurnameAsync(System.String,System.String)
  langs:
  - csharp
  - vb
  name: IBorrowPersonService
  nameWithType: IBorrowPersonService
  fullName: App.Data.ServiceInterfaces.IBorrowPersonService
  type: Interface
  source:
    remote:
      path: App/Data/ServiceInterfaces/IBorrowPersonService.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: IBorrowPersonService
    path: ../App/Data/ServiceInterfaces/IBorrowPersonService.cs
    startLine: 7
  assemblies:
  - App
  namespace: App.Data.ServiceInterfaces
  summary: "\nService for managing BorrowPerson model\n"
  example: []
  syntax:
    content: public interface IBorrowPersonService
    content.vb: Public Interface IBorrowPersonService
  extensionMethods:
  - App.Data.ServiceInterfaces.IBorrowPersonService.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  - App.Data.ServiceInterfaces.IBorrowPersonService.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
- uid: App.Data.ServiceInterfaces.IBorrowPersonService.GetIdByNameAndSurnameAsync(System.String,System.String)
  commentId: M:App.Data.ServiceInterfaces.IBorrowPersonService.GetIdByNameAndSurnameAsync(System.String,System.String)
  id: GetIdByNameAndSurnameAsync(System.String,System.String)
  parent: App.Data.ServiceInterfaces.IBorrowPersonService
  langs:
  - csharp
  - vb
  name: GetIdByNameAndSurnameAsync(string, string)
  nameWithType: IBorrowPersonService.GetIdByNameAndSurnameAsync(string, string)
  fullName: App.Data.ServiceInterfaces.IBorrowPersonService.GetIdByNameAndSurnameAsync(string, string)
  type: Method
  source:
    remote:
      path: App/Data/ServiceInterfaces/IBorrowPersonService.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: GetIdByNameAndSurnameAsync
    path: ../App/Data/ServiceInterfaces/IBorrowPersonService.cs
    startLine: 15
  assemblies:
  - App
  namespace: App.Data.ServiceInterfaces
  summary: "\nReturns a BorrowPerson&apos;s id based on the name and surname\n"
  example: []
  syntax:
    content: Task<int> GetIdByNameAndSurnameAsync(string name, string surname)
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: surname
      type: System.String
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: id of BP
    content.vb: Function GetIdByNameAndSurnameAsync(name As String, surname As String) As Task(Of Integer)
  overload: App.Data.ServiceInterfaces.IBorrowPersonService.GetIdByNameAndSurnameAsync*
  nameWithType.vb: IBorrowPersonService.GetIdByNameAndSurnameAsync(String, String)
  fullName.vb: App.Data.ServiceInterfaces.IBorrowPersonService.GetIdByNameAndSurnameAsync(String, String)
  name.vb: GetIdByNameAndSurnameAsync(String, String)
- uid: App.Data.ServiceInterfaces.IBorrowPersonService.GetByIdAsync(System.Int32)
  commentId: M:App.Data.ServiceInterfaces.IBorrowPersonService.GetByIdAsync(System.Int32)
  id: GetByIdAsync(System.Int32)
  parent: App.Data.ServiceInterfaces.IBorrowPersonService
  langs:
  - csharp
  - vb
  name: GetByIdAsync(int)
  nameWithType: IBorrowPersonService.GetByIdAsync(int)
  fullName: App.Data.ServiceInterfaces.IBorrowPersonService.GetByIdAsync(int)
  type: Method
  source:
    remote:
      path: App/Data/ServiceInterfaces/IBorrowPersonService.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: GetByIdAsync
    path: ../App/Data/ServiceInterfaces/IBorrowPersonService.cs
    startLine: 23
  assemblies:
  - App
  namespace: App.Data.ServiceInterfaces
  summary: "\nReturns Borrow person based on it&apos;s id\n"
  example: []
  syntax:
    content: Task<BorrowPerson?> GetByIdAsync(int id)
    parameters:
    - id: id
      type: System.Int32
      description: ''
    return:
      type: System.Threading.Tasks.Task{App.Data.Models.BorrowPerson}
      description: BorrowPerson if exists
    content.vb: Function GetByIdAsync(id As Integer) As Task(Of BorrowPerson)
  overload: App.Data.ServiceInterfaces.IBorrowPersonService.GetByIdAsync*
  nameWithType.vb: IBorrowPersonService.GetByIdAsync(Integer)
  fullName.vb: App.Data.ServiceInterfaces.IBorrowPersonService.GetByIdAsync(Integer)
  name.vb: GetByIdAsync(Integer)
references:
- uid: App.Data.ServiceInterfaces
  commentId: N:App.Data.ServiceInterfaces
  name: App.Data.ServiceInterfaces
  nameWithType: App.Data.ServiceInterfaces
  fullName: App.Data.ServiceInterfaces
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.ServiceInterfaces
    name: ServiceInterfaces
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.ServiceInterfaces
    name: ServiceInterfaces
- uid: App.Data.ServiceInterfaces.IBorrowPersonService.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  name: GetPropertyExpression<IBorrowPersonService>(IBorrowPersonService, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<IBorrowPersonService>(IBorrowPersonService, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<App.Data.ServiceInterfaces.IBorrowPersonService>(App.Data.ServiceInterfaces.IBorrowPersonService, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of IBorrowPersonService)(IBorrowPersonService, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of App.Data.ServiceInterfaces.IBorrowPersonService)(App.Data.ServiceInterfaces.IBorrowPersonService, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of IBorrowPersonService)(IBorrowPersonService, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.Data.ServiceInterfaces.IBorrowPersonService,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - uid: App.Data.ServiceInterfaces.IBorrowPersonService
    name: IBorrowPersonService
  - name: '>'
  - name: (
  - uid: App.Data.ServiceInterfaces.IBorrowPersonService
    name: IBorrowPersonService
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.Data.ServiceInterfaces.IBorrowPersonService,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - uid: App.Data.ServiceInterfaces.IBorrowPersonService
    name: IBorrowPersonService
  - name: )
  - name: (
  - uid: App.Data.ServiceInterfaces.IBorrowPersonService
    name: IBorrowPersonService
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Data.ServiceInterfaces.IBorrowPersonService.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  name: GetSetPropertyEventCallback<IBorrowPersonService>(IBorrowPersonService, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<IBorrowPersonService>(IBorrowPersonService, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<App.Data.ServiceInterfaces.IBorrowPersonService>(App.Data.ServiceInterfaces.IBorrowPersonService, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of IBorrowPersonService)(IBorrowPersonService, Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of App.Data.ServiceInterfaces.IBorrowPersonService)(App.Data.ServiceInterfaces.IBorrowPersonService, Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of IBorrowPersonService)(IBorrowPersonService, Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.Data.ServiceInterfaces.IBorrowPersonService,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - uid: App.Data.ServiceInterfaces.IBorrowPersonService
    name: IBorrowPersonService
  - name: '>'
  - name: (
  - uid: App.Data.ServiceInterfaces.IBorrowPersonService
    name: IBorrowPersonService
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.Data.ServiceInterfaces.IBorrowPersonService,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - uid: App.Data.ServiceInterfaces.IBorrowPersonService
    name: IBorrowPersonService
  - name: )
  - name: (
  - uid: App.Data.ServiceInterfaces.IBorrowPersonService
    name: IBorrowPersonService
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetPropertyExpression<T>(T, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<T>(T, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<T>(T, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of T)(T, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils.ReflectionExtensions
  commentId: T:App.Utils.ReflectionExtensions
  parent: App.Utils
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: App.Utils.ReflectionExtensions
- uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils
  commentId: N:App.Utils
  name: App.Utils
  nameWithType: App.Utils
  fullName: App.Utils
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
- uid: App.Data.ServiceInterfaces.IBorrowPersonService.GetIdByNameAndSurnameAsync*
  commentId: Overload:App.Data.ServiceInterfaces.IBorrowPersonService.GetIdByNameAndSurnameAsync
  name: GetIdByNameAndSurnameAsync
  nameWithType: IBorrowPersonService.GetIdByNameAndSurnameAsync
  fullName: App.Data.ServiceInterfaces.IBorrowPersonService.GetIdByNameAndSurnameAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
- uid: App.Data.ServiceInterfaces.IBorrowPersonService.GetByIdAsync*
  commentId: Overload:App.Data.ServiceInterfaces.IBorrowPersonService.GetByIdAsync
  name: GetByIdAsync
  nameWithType: IBorrowPersonService.GetByIdAsync
  fullName: App.Data.ServiceInterfaces.IBorrowPersonService.GetByIdAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{App.Data.Models.BorrowPerson}
  commentId: T:System.Threading.Tasks.Task{App.Data.Models.BorrowPerson}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<BorrowPerson>
  nameWithType: Task<BorrowPerson>
  fullName: System.Threading.Tasks.Task<App.Data.Models.BorrowPerson>
  nameWithType.vb: Task(Of BorrowPerson)
  fullName.vb: System.Threading.Tasks.Task(Of App.Data.Models.BorrowPerson)
  name.vb: Task(Of BorrowPerson)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - uid: App.Data.Models.BorrowPerson
    name: BorrowPerson
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: App.Data.Models.BorrowPerson
    name: BorrowPerson
  - name: )
