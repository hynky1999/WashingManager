### YamlMime:ManagedReference
items:
- uid: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel
  commentId: T:App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel
  id: ChangePasswordModel.InputModel
  parent: App.Areas.Manage.Pages.Account.Manage
  children:
  - App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.ConfirmPassword
  - App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.NewPassword
  - App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.OldPassword
  langs:
  - csharp
  - vb
  name: ChangePasswordModel.InputModel
  nameWithType: ChangePasswordModel.InputModel
  fullName: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel
  type: Class
  source:
    remote:
      path: App/Areas/Manage/Pages/Account/Manage/ChangePassword.cshtml.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: InputModel
    path: ../App/Areas/Manage/Pages/Account/Manage/ChangePassword.cshtml.cs
    startLine: 96
  assemblies:
  - App
  namespace: App.Areas.Manage.Pages.Account.Manage
  summary: "\nInput model for the change password page.\n"
  example: []
  syntax:
    content: public class ChangePasswordModel.InputModel
    content.vb: Public Class ChangePasswordModel.InputModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  - App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
- uid: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.OldPassword
  commentId: P:App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.OldPassword
  id: OldPassword
  parent: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel
  langs:
  - csharp
  - vb
  name: OldPassword
  nameWithType: ChangePasswordModel.InputModel.OldPassword
  fullName: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.OldPassword
  type: Property
  source:
    remote:
      path: App/Areas/Manage/Pages/Account/Manage/ChangePassword.cshtml.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: OldPassword
    path: ../App/Areas/Manage/Pages/Account/Manage/ChangePassword.cshtml.cs
    startLine: 101
  assemblies:
  - App
  namespace: App.Areas.Manage.Pages.Account.Manage
  summary: "\nOld password to check\n"
  example: []
  syntax:
    content: >-
      [Required]

      [DataType(DataType.Password)]

      [Display(Name = "Current password")]

      public string OldPassword { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <DataType(DataType.Password)>

      <Display(Name:="Current password")>

      Public Property OldPassword As String
  overload: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.OldPassword*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
    ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
    arguments:
    - type: System.ComponentModel.DataAnnotations.DataType
      value: 11
  - type: System.ComponentModel.DataAnnotations.DisplayAttribute
    ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Current password
- uid: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.NewPassword
  commentId: P:App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.NewPassword
  id: NewPassword
  parent: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel
  langs:
  - csharp
  - vb
  name: NewPassword
  nameWithType: ChangePasswordModel.InputModel.NewPassword
  fullName: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.NewPassword
  type: Property
  source:
    remote:
      path: App/Areas/Manage/Pages/Account/Manage/ChangePassword.cshtml.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: NewPassword
    path: ../App/Areas/Manage/Pages/Account/Manage/ChangePassword.cshtml.cs
    startLine: 109
  assemblies:
  - App
  namespace: App.Areas.Manage.Pages.Account.Manage
  summary: "\nNew users password\n"
  example: []
  syntax:
    content: >-
      [Required]

      [StringLength(20, ErrorMessage = "The {0} must be at least {2} and at max {1} characters long.", MinimumLength = 8)]

      [DataType(DataType.Password)]

      [Display(Name = "New password")]

      public string NewPassword { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <StringLength(20, ErrorMessage:="The {0} must be at least {2} and at max {1} characters long.", MinimumLength:=8)>

      <DataType(DataType.Password)>

      <Display(Name:="New password")>

      Public Property NewPassword As String
  overload: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.NewPassword*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 20
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: The {0} must be at least {2} and at max {1} characters long.
    - name: MinimumLength
      type: System.Int32
      value: 8
  - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
    ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
    arguments:
    - type: System.ComponentModel.DataAnnotations.DataType
      value: 11
  - type: System.ComponentModel.DataAnnotations.DisplayAttribute
    ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: New password
- uid: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.ConfirmPassword
  commentId: P:App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.ConfirmPassword
  id: ConfirmPassword
  parent: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel
  langs:
  - csharp
  - vb
  name: ConfirmPassword
  nameWithType: ChangePasswordModel.InputModel.ConfirmPassword
  fullName: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.ConfirmPassword
  type: Property
  source:
    remote:
      path: App/Areas/Manage/Pages/Account/Manage/ChangePassword.cshtml.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: ConfirmPassword
    path: ../App/Areas/Manage/Pages/Account/Manage/ChangePassword.cshtml.cs
    startLine: 121
  assemblies:
  - App
  namespace: App.Areas.Manage.Pages.Account.Manage
  summary: "\nRepeat new password\n"
  example: []
  syntax:
    content: >-
      [DataType(DataType.Password)]

      [Display(Name = "Confirm new password")]

      [Compare("NewPassword", ErrorMessage = "The new password and confirmation password do not match.")]

      public string ConfirmPassword { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataType(DataType.Password)>

      <Display(Name:="Confirm new password")>

      <Compare("NewPassword", ErrorMessage:="The new password and confirmation password do not match.")>

      Public Property ConfirmPassword As String
  overload: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.ConfirmPassword*
  attributes:
  - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
    ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
    arguments:
    - type: System.ComponentModel.DataAnnotations.DataType
      value: 11
  - type: System.ComponentModel.DataAnnotations.DisplayAttribute
    ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Confirm new password
  - type: System.ComponentModel.DataAnnotations.CompareAttribute
    ctor: System.ComponentModel.DataAnnotations.CompareAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NewPassword
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: The new password and confirmation password do not match.
references:
- uid: App.Areas.Manage.Pages.Account.Manage
  commentId: N:App.Areas.Manage.Pages.Account.Manage
  name: App.Areas.Manage.Pages.Account.Manage
  nameWithType: App.Areas.Manage.Pages.Account.Manage
  fullName: App.Areas.Manage.Pages.Account.Manage
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Areas
    name: Areas
  - name: .
  - uid: App.Areas.Manage
    name: Manage
  - name: .
  - uid: App.Areas.Manage.Pages
    name: Pages
  - name: .
  - uid: App.Areas.Manage.Pages.Account
    name: Account
  - name: .
  - uid: App.Areas.Manage.Pages.Account.Manage
    name: Manage
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Areas
    name: Areas
  - name: .
  - uid: App.Areas.Manage
    name: Manage
  - name: .
  - uid: App.Areas.Manage.Pages
    name: Pages
  - name: .
  - uid: App.Areas.Manage.Pages.Account
    name: Account
  - name: .
  - uid: App.Areas.Manage.Pages.Account.Manage
    name: Manage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  name: GetPropertyExpression<InputModel>(InputModel, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<ChangePasswordModel.InputModel>(ChangePasswordModel.InputModel, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel>(App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of ChangePasswordModel.InputModel)(ChangePasswordModel.InputModel, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel)(App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of InputModel)(InputModel, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - uid: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel
    name: InputModel
  - name: '>'
  - name: (
  - uid: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel
    name: InputModel
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - uid: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel
    name: InputModel
  - name: )
  - name: (
  - uid: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel
    name: InputModel
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  name: GetSetPropertyEventCallback<InputModel>(InputModel, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<ChangePasswordModel.InputModel>(ChangePasswordModel.InputModel, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel>(App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of ChangePasswordModel.InputModel)(ChangePasswordModel.InputModel, Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel)(App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel, Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of InputModel)(InputModel, Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - uid: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel
    name: InputModel
  - name: '>'
  - name: (
  - uid: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel
    name: InputModel
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - uid: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel
    name: InputModel
  - name: )
  - name: (
  - uid: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel
    name: InputModel
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetPropertyExpression<T>(T, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<T>(T, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<T>(T, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of T)(T, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils.ReflectionExtensions
  commentId: T:App.Utils.ReflectionExtensions
  parent: App.Utils
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: App.Utils.ReflectionExtensions
- uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils
  commentId: N:App.Utils
  name: App.Utils
  nameWithType: App.Utils
  fullName: App.Utils
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
- uid: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.OldPassword*
  commentId: Overload:App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.OldPassword
  name: OldPassword
  nameWithType: ChangePasswordModel.InputModel.OldPassword
  fullName: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.OldPassword
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.NewPassword*
  commentId: Overload:App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.NewPassword
  name: NewPassword
  nameWithType: ChangePasswordModel.InputModel.NewPassword
  fullName: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.NewPassword
- uid: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.ConfirmPassword*
  commentId: Overload:App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.ConfirmPassword
  name: ConfirmPassword
  nameWithType: ChangePasswordModel.InputModel.ConfirmPassword
  fullName: App.Areas.Manage.Pages.Account.Manage.ChangePasswordModel.InputModel.ConfirmPassword
