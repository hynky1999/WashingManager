### YamlMime:ManagedReference
items:
- uid: App.Shared.Components.LazyRemoteTable`1
  commentId: T:App.Shared.Components.LazyRemoteTable`1
  id: LazyRemoteTable`1
  parent: App.Shared.Components
  children:
  - App.Shared.Components.LazyRemoteTable`1.Bordered
  - App.Shared.Components.LazyRemoteTable`1.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)
  - App.Shared.Components.LazyRemoteTable`1.ChangeLocally(System.Func{`0[],`0[]})
  - App.Shared.Components.LazyRemoteTable`1.ChildContent
  - App.Shared.Components.LazyRemoteTable`1.Class
  - App.Shared.Components.LazyRemoteTable`1.OnInitialized
  - App.Shared.Components.LazyRemoteTable`1.OnQuery
  - App.Shared.Components.LazyRemoteTable`1.OnQueryCount
  - App.Shared.Components.LazyRemoteTable`1.PageSize
  - App.Shared.Components.LazyRemoteTable`1.Style
  langs:
  - csharp
  - vb
  name: LazyRemoteTable<TItem>
  nameWithType: LazyRemoteTable<TItem>
  fullName: App.Shared.Components.LazyRemoteTable<TItem>
  type: Class
  source:
    remote:
      path: docfx_project/Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Shared_Components_LazyRemoteTable_razor.g.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: LazyRemoteTable
    path: ../Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Shared_Components_LazyRemoteTable_razor.g.cs
    startLine: 158
  assemblies:
  - App
  namespace: App.Shared.Components
  syntax:
    content: 'public class LazyRemoteTable<TItem> : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender'
    typeParameters:
    - id: TItem
    content.vb: Public Class LazyRemoteTable(Of TItem) Inherits ComponentBase Implements IComponent, IHandleEvent, IHandleAfterRender
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Components.ComponentBase
  implements:
  - Microsoft.AspNetCore.Components.IComponent
  - Microsoft.AspNetCore.Components.IHandleEvent
  - Microsoft.AspNetCore.Components.IHandleAfterRender
  inheritedMembers:
  - Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync
  - Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet
  - Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync
  - Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged
  - Microsoft.AspNetCore.Components.ComponentBase.ShouldRender
  - Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(System.Boolean)
  - Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean)
  - Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action)
  - Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func{System.Threading.Tasks.Task})
  - Microsoft.AspNetCore.Components.ComponentBase.Microsoft#AspNetCore#Components#IComponent#Attach(Microsoft.AspNetCore.Components.RenderHandle)
  - Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)
  - Microsoft.AspNetCore.Components.ComponentBase.Microsoft#AspNetCore#Components#IHandleEvent#HandleEventAsync(Microsoft.AspNetCore.Components.EventCallbackWorkItem,System.Object)
  - Microsoft.AspNetCore.Components.ComponentBase.Microsoft#AspNetCore#Components#IHandleAfterRender#OnAfterRenderAsync
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - App.Shared.Components.LazyRemoteTable`1.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  - App.Shared.Components.LazyRemoteTable`1.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
  nameWithType.vb: LazyRemoteTable(Of TItem)
  fullName.vb: App.Shared.Components.LazyRemoteTable(Of TItem)
  name.vb: LazyRemoteTable(Of TItem)
- uid: App.Shared.Components.LazyRemoteTable`1.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)
  commentId: M:App.Shared.Components.LazyRemoteTable`1.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)
  id: BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)
  parent: App.Shared.Components.LazyRemoteTable`1
  langs:
  - csharp
  - vb
  name: BuildRenderTree(RenderTreeBuilder)
  nameWithType: LazyRemoteTable<TItem>.BuildRenderTree(RenderTreeBuilder)
  fullName: App.Shared.Components.LazyRemoteTable<TItem>.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)
  type: Method
  source:
    remote:
      path: docfx_project/Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Shared_Components_LazyRemoteTable_razor.g.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: BuildRenderTree
    path: ../Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Shared_Components_LazyRemoteTable_razor.g.cs
    startLine: 161
  assemblies:
  - App
  namespace: App.Shared.Components
  syntax:
    content: protected override void BuildRenderTree(RenderTreeBuilder __builder)
    parameters:
    - id: __builder
      type: Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder
    content.vb: Protected Overrides Sub BuildRenderTree(__builder As RenderTreeBuilder)
  overridden: Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)
  overload: App.Shared.Components.LazyRemoteTable`1.BuildRenderTree*
  nameWithType.vb: LazyRemoteTable(Of TItem).BuildRenderTree(RenderTreeBuilder)
  fullName.vb: App.Shared.Components.LazyRemoteTable(Of TItem).BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)
- uid: App.Shared.Components.LazyRemoteTable`1.ChildContent
  commentId: P:App.Shared.Components.LazyRemoteTable`1.ChildContent
  id: ChildContent
  parent: App.Shared.Components.LazyRemoteTable`1
  langs:
  - csharp
  - vb
  name: ChildContent
  nameWithType: LazyRemoteTable<TItem>.ChildContent
  fullName: App.Shared.Components.LazyRemoteTable<TItem>.ChildContent
  type: Property
  source:
    remote:
      path: docfx_project/Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Shared_Components_LazyRemoteTable_razor.g.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: ChildContent
    path: ../Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Shared_Components_LazyRemoteTable_razor.g.cs
    startLine: 229
  assemblies:
  - App
  namespace: App.Shared.Components
  syntax:
    content: >-
      [Parameter]

      public RenderFragment<TItem>? ChildContent { get; set; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Components.RenderFragment{{TItem}}
    content.vb: >-
      <Parameter>

      Public Property ChildContent As RenderFragment(Of TItem)
  overload: App.Shared.Components.LazyRemoteTable`1.ChildContent*
  attributes:
  - type: Microsoft.AspNetCore.Components.ParameterAttribute
    ctor: Microsoft.AspNetCore.Components.ParameterAttribute.#ctor
    arguments: []
  nameWithType.vb: LazyRemoteTable(Of TItem).ChildContent
  fullName.vb: App.Shared.Components.LazyRemoteTable(Of TItem).ChildContent
- uid: App.Shared.Components.LazyRemoteTable`1.OnQuery
  commentId: P:App.Shared.Components.LazyRemoteTable`1.OnQuery
  id: OnQuery
  parent: App.Shared.Components.LazyRemoteTable`1
  langs:
  - csharp
  - vb
  name: OnQuery
  nameWithType: LazyRemoteTable<TItem>.OnQuery
  fullName: App.Shared.Components.LazyRemoteTable<TItem>.OnQuery
  type: Property
  source:
    remote:
      path: docfx_project/Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Shared_Components_LazyRemoteTable_razor.g.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: OnQuery
    path: ../Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Shared_Components_LazyRemoteTable_razor.g.cs
    startLine: 233
  assemblies:
  - App
  namespace: App.Shared.Components
  syntax:
    content: >-
      [Parameter]

      [EditorRequired]

      public Func<QueryModel<TItem>, Task<TItem[]>>? OnQuery { get; set; }
    parameters: []
    return:
      type: System.Func{QueryModel{{TItem}},System.Threading.Tasks.Task{{TItem}[]}}
    content.vb: >-
      <Parameter>

      <EditorRequired>

      Public Property OnQuery As Func(Of QueryModel(Of TItem), Task(Of TItem()))
  overload: App.Shared.Components.LazyRemoteTable`1.OnQuery*
  attributes:
  - type: Microsoft.AspNetCore.Components.ParameterAttribute
    ctor: Microsoft.AspNetCore.Components.ParameterAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Components.EditorRequiredAttribute
    ctor: Microsoft.AspNetCore.Components.EditorRequiredAttribute.#ctor
    arguments: []
  nameWithType.vb: LazyRemoteTable(Of TItem).OnQuery
  fullName.vb: App.Shared.Components.LazyRemoteTable(Of TItem).OnQuery
- uid: App.Shared.Components.LazyRemoteTable`1.OnQueryCount
  commentId: P:App.Shared.Components.LazyRemoteTable`1.OnQueryCount
  id: OnQueryCount
  parent: App.Shared.Components.LazyRemoteTable`1
  langs:
  - csharp
  - vb
  name: OnQueryCount
  nameWithType: LazyRemoteTable<TItem>.OnQueryCount
  fullName: App.Shared.Components.LazyRemoteTable<TItem>.OnQueryCount
  type: Property
  source:
    remote:
      path: docfx_project/Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Shared_Components_LazyRemoteTable_razor.g.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: OnQueryCount
    path: ../Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Shared_Components_LazyRemoteTable_razor.g.cs
    startLine: 236
  assemblies:
  - App
  namespace: App.Shared.Components
  syntax:
    content: >-
      [Parameter]

      [EditorRequired]

      public Func<QueryModel<TItem>, Task<int>>? OnQueryCount { get; set; }
    parameters: []
    return:
      type: System.Func{QueryModel{{TItem}},System.Threading.Tasks.Task{System.Int32}}
    content.vb: >-
      <Parameter>

      <EditorRequired>

      Public Property OnQueryCount As Func(Of QueryModel(Of TItem), Task(Of Integer))
  overload: App.Shared.Components.LazyRemoteTable`1.OnQueryCount*
  attributes:
  - type: Microsoft.AspNetCore.Components.ParameterAttribute
    ctor: Microsoft.AspNetCore.Components.ParameterAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Components.EditorRequiredAttribute
    ctor: Microsoft.AspNetCore.Components.EditorRequiredAttribute.#ctor
    arguments: []
  nameWithType.vb: LazyRemoteTable(Of TItem).OnQueryCount
  fullName.vb: App.Shared.Components.LazyRemoteTable(Of TItem).OnQueryCount
- uid: App.Shared.Components.LazyRemoteTable`1.Bordered
  commentId: P:App.Shared.Components.LazyRemoteTable`1.Bordered
  id: Bordered
  parent: App.Shared.Components.LazyRemoteTable`1
  langs:
  - csharp
  - vb
  name: Bordered
  nameWithType: LazyRemoteTable<TItem>.Bordered
  fullName: App.Shared.Components.LazyRemoteTable<TItem>.Bordered
  type: Property
  source:
    remote:
      path: docfx_project/Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Shared_Components_LazyRemoteTable_razor.g.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: Bordered
    path: ../Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Shared_Components_LazyRemoteTable_razor.g.cs
    startLine: 239
  assemblies:
  - App
  namespace: App.Shared.Components
  syntax:
    content: >-
      [Parameter]

      public bool Bordered { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Parameter>

      Public Property Bordered As Boolean
  overload: App.Shared.Components.LazyRemoteTable`1.Bordered*
  attributes:
  - type: Microsoft.AspNetCore.Components.ParameterAttribute
    ctor: Microsoft.AspNetCore.Components.ParameterAttribute.#ctor
    arguments: []
  nameWithType.vb: LazyRemoteTable(Of TItem).Bordered
  fullName.vb: App.Shared.Components.LazyRemoteTable(Of TItem).Bordered
- uid: App.Shared.Components.LazyRemoteTable`1.Style
  commentId: P:App.Shared.Components.LazyRemoteTable`1.Style
  id: Style
  parent: App.Shared.Components.LazyRemoteTable`1
  langs:
  - csharp
  - vb
  name: Style
  nameWithType: LazyRemoteTable<TItem>.Style
  fullName: App.Shared.Components.LazyRemoteTable<TItem>.Style
  type: Property
  source:
    remote:
      path: docfx_project/Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Shared_Components_LazyRemoteTable_razor.g.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: Style
    path: ../Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Shared_Components_LazyRemoteTable_razor.g.cs
    startLine: 242
  assemblies:
  - App
  namespace: App.Shared.Components
  syntax:
    content: >-
      [Parameter]

      public string? Style { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Parameter>

      Public Property Style As String
  overload: App.Shared.Components.LazyRemoteTable`1.Style*
  attributes:
  - type: Microsoft.AspNetCore.Components.ParameterAttribute
    ctor: Microsoft.AspNetCore.Components.ParameterAttribute.#ctor
    arguments: []
  nameWithType.vb: LazyRemoteTable(Of TItem).Style
  fullName.vb: App.Shared.Components.LazyRemoteTable(Of TItem).Style
- uid: App.Shared.Components.LazyRemoteTable`1.Class
  commentId: P:App.Shared.Components.LazyRemoteTable`1.Class
  id: Class
  parent: App.Shared.Components.LazyRemoteTable`1
  langs:
  - csharp
  - vb
  name: Class
  nameWithType: LazyRemoteTable<TItem>.Class
  fullName: App.Shared.Components.LazyRemoteTable<TItem>.Class
  type: Property
  source:
    remote:
      path: docfx_project/Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Shared_Components_LazyRemoteTable_razor.g.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: Class
    path: ../Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Shared_Components_LazyRemoteTable_razor.g.cs
    startLine: 245
  assemblies:
  - App
  namespace: App.Shared.Components
  syntax:
    content: >-
      [Parameter]

      public string Class { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Parameter>

      Public Property [Class] As String
  overload: App.Shared.Components.LazyRemoteTable`1.Class*
  attributes:
  - type: Microsoft.AspNetCore.Components.ParameterAttribute
    ctor: Microsoft.AspNetCore.Components.ParameterAttribute.#ctor
    arguments: []
  nameWithType.vb: LazyRemoteTable(Of TItem).Class
  fullName.vb: App.Shared.Components.LazyRemoteTable(Of TItem).Class
- uid: App.Shared.Components.LazyRemoteTable`1.PageSize
  commentId: P:App.Shared.Components.LazyRemoteTable`1.PageSize
  id: PageSize
  parent: App.Shared.Components.LazyRemoteTable`1
  langs:
  - csharp
  - vb
  name: PageSize
  nameWithType: LazyRemoteTable<TItem>.PageSize
  fullName: App.Shared.Components.LazyRemoteTable<TItem>.PageSize
  type: Property
  source:
    remote:
      path: docfx_project/Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Shared_Components_LazyRemoteTable_razor.g.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: PageSize
    path: ../Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Shared_Components_LazyRemoteTable_razor.g.cs
    startLine: 248
  assemblies:
  - App
  namespace: App.Shared.Components
  syntax:
    content: >-
      [Parameter]

      public int PageSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Parameter>

      Public Property PageSize As Integer
  overload: App.Shared.Components.LazyRemoteTable`1.PageSize*
  attributes:
  - type: Microsoft.AspNetCore.Components.ParameterAttribute
    ctor: Microsoft.AspNetCore.Components.ParameterAttribute.#ctor
    arguments: []
  nameWithType.vb: LazyRemoteTable(Of TItem).PageSize
  fullName.vb: App.Shared.Components.LazyRemoteTable(Of TItem).PageSize
- uid: App.Shared.Components.LazyRemoteTable`1.ChangeLocally(System.Func{`0[],`0[]})
  commentId: M:App.Shared.Components.LazyRemoteTable`1.ChangeLocally(System.Func{`0[],`0[]})
  id: ChangeLocally(System.Func{`0[],`0[]})
  parent: App.Shared.Components.LazyRemoteTable`1
  langs:
  - csharp
  - vb
  name: ChangeLocally(Func<TItem[], TItem[]>)
  nameWithType: LazyRemoteTable<TItem>.ChangeLocally(Func<TItem[], TItem[]>)
  fullName: App.Shared.Components.LazyRemoteTable<TItem>.ChangeLocally(System.Func<TItem[], TItem[]>)
  type: Method
  source:
    remote:
      path: docfx_project/Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Shared_Components_LazyRemoteTable_razor.g.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: ChangeLocally
    path: ../Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Shared_Components_LazyRemoteTable_razor.g.cs
    startLine: 283
  assemblies:
  - App
  namespace: App.Shared.Components
  syntax:
    content: public void ChangeLocally(Func<TItem[], TItem[]> func)
    parameters:
    - id: func
      type: System.Func{{TItem}[],{TItem}[]}
    content.vb: Public Sub ChangeLocally(func As Func(Of TItem(), TItem()))
  overload: App.Shared.Components.LazyRemoteTable`1.ChangeLocally*
  nameWithType.vb: LazyRemoteTable(Of TItem).ChangeLocally(Func(Of TItem(), TItem()))
  fullName.vb: App.Shared.Components.LazyRemoteTable(Of TItem).ChangeLocally(System.Func(Of TItem(), TItem()))
  name.vb: ChangeLocally(Func(Of TItem(), TItem()))
- uid: App.Shared.Components.LazyRemoteTable`1.OnInitialized
  commentId: M:App.Shared.Components.LazyRemoteTable`1.OnInitialized
  id: OnInitialized
  parent: App.Shared.Components.LazyRemoteTable`1
  langs:
  - csharp
  - vb
  name: OnInitialized()
  nameWithType: LazyRemoteTable<TItem>.OnInitialized()
  fullName: App.Shared.Components.LazyRemoteTable<TItem>.OnInitialized()
  type: Method
  source:
    remote:
      path: docfx_project/Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Shared_Components_LazyRemoteTable_razor.g.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: OnInitialized
    path: ../Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Shared_Components_LazyRemoteTable_razor.g.cs
    startLine: 288
  assemblies:
  - App
  namespace: App.Shared.Components
  syntax:
    content: protected override void OnInitialized()
    content.vb: Protected Overrides Sub OnInitialized()
  overridden: Microsoft.AspNetCore.Components.ComponentBase.OnInitialized
  overload: App.Shared.Components.LazyRemoteTable`1.OnInitialized*
  nameWithType.vb: LazyRemoteTable(Of TItem).OnInitialized()
  fullName.vb: App.Shared.Components.LazyRemoteTable(Of TItem).OnInitialized()
references:
- uid: App.Shared.Components
  commentId: N:App.Shared.Components
  name: App.Shared.Components
  nameWithType: App.Shared.Components
  fullName: App.Shared.Components
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Shared
    name: Shared
  - name: .
  - uid: App.Shared.Components
    name: Components
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Shared
    name: Shared
  - name: .
  - uid: App.Shared.Components
    name: Components
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Microsoft.AspNetCore.Components.ComponentBase
  commentId: T:Microsoft.AspNetCore.Components.ComponentBase
  parent: Microsoft.AspNetCore.Components
  isExternal: true
  name: ComponentBase
  nameWithType: ComponentBase
  fullName: Microsoft.AspNetCore.Components.ComponentBase
- uid: Microsoft.AspNetCore.Components.IComponent
  commentId: T:Microsoft.AspNetCore.Components.IComponent
  parent: Microsoft.AspNetCore.Components
  isExternal: true
  name: IComponent
  nameWithType: IComponent
  fullName: Microsoft.AspNetCore.Components.IComponent
- uid: Microsoft.AspNetCore.Components.IHandleEvent
  commentId: T:Microsoft.AspNetCore.Components.IHandleEvent
  parent: Microsoft.AspNetCore.Components
  isExternal: true
  name: IHandleEvent
  nameWithType: IHandleEvent
  fullName: Microsoft.AspNetCore.Components.IHandleEvent
- uid: Microsoft.AspNetCore.Components.IHandleAfterRender
  commentId: T:Microsoft.AspNetCore.Components.IHandleAfterRender
  parent: Microsoft.AspNetCore.Components
  isExternal: true
  name: IHandleAfterRender
  nameWithType: IHandleAfterRender
  fullName: Microsoft.AspNetCore.Components.IHandleAfterRender
- uid: Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync
  commentId: M:Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync
  parent: Microsoft.AspNetCore.Components.ComponentBase
  isExternal: true
  name: OnInitializedAsync()
  nameWithType: ComponentBase.OnInitializedAsync()
  fullName: Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync
    name: OnInitializedAsync
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync
    name: OnInitializedAsync
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet
  commentId: M:Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet
  parent: Microsoft.AspNetCore.Components.ComponentBase
  isExternal: true
  name: OnParametersSet()
  nameWithType: ComponentBase.OnParametersSet()
  fullName: Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet
    name: OnParametersSet
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet
    name: OnParametersSet
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync
  commentId: M:Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync
  parent: Microsoft.AspNetCore.Components.ComponentBase
  isExternal: true
  name: OnParametersSetAsync()
  nameWithType: ComponentBase.OnParametersSetAsync()
  fullName: Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync
    name: OnParametersSetAsync
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync
    name: OnParametersSetAsync
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged
  commentId: M:Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged
  parent: Microsoft.AspNetCore.Components.ComponentBase
  isExternal: true
  name: StateHasChanged()
  nameWithType: ComponentBase.StateHasChanged()
  fullName: Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged
    name: StateHasChanged
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged
    name: StateHasChanged
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.AspNetCore.Components.ComponentBase.ShouldRender
  commentId: M:Microsoft.AspNetCore.Components.ComponentBase.ShouldRender
  parent: Microsoft.AspNetCore.Components.ComponentBase
  isExternal: true
  name: ShouldRender()
  nameWithType: ComponentBase.ShouldRender()
  fullName: Microsoft.AspNetCore.Components.ComponentBase.ShouldRender()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.ShouldRender
    name: ShouldRender
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.ShouldRender
    name: ShouldRender
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(System.Boolean)
  commentId: M:Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(System.Boolean)
  parent: Microsoft.AspNetCore.Components.ComponentBase
  isExternal: true
  name: OnAfterRender(bool)
  nameWithType: ComponentBase.OnAfterRender(bool)
  fullName: Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(bool)
  nameWithType.vb: ComponentBase.OnAfterRender(Boolean)
  fullName.vb: Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(Boolean)
  name.vb: OnAfterRender(Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(System.Boolean)
    name: OnAfterRender
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(System.Boolean)
    name: OnAfterRender
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean)
  commentId: M:Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean)
  parent: Microsoft.AspNetCore.Components.ComponentBase
  isExternal: true
  name: OnAfterRenderAsync(bool)
  nameWithType: ComponentBase.OnAfterRenderAsync(bool)
  fullName: Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(bool)
  nameWithType.vb: ComponentBase.OnAfterRenderAsync(Boolean)
  fullName.vb: Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(Boolean)
  name.vb: OnAfterRenderAsync(Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean)
    name: OnAfterRenderAsync
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean)
    name: OnAfterRenderAsync
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action)
  commentId: M:Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action)
  parent: Microsoft.AspNetCore.Components.ComponentBase
  isExternal: true
  name: InvokeAsync(Action)
  nameWithType: ComponentBase.InvokeAsync(Action)
  fullName: Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action)
    name: InvokeAsync
    isExternal: true
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action)
    name: InvokeAsync
    isExternal: true
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func{System.Threading.Tasks.Task})
  commentId: M:Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func{System.Threading.Tasks.Task})
  parent: Microsoft.AspNetCore.Components.ComponentBase
  isExternal: true
  name: InvokeAsync(Func<Task>)
  nameWithType: ComponentBase.InvokeAsync(Func<Task>)
  fullName: Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func<System.Threading.Tasks.Task>)
  nameWithType.vb: ComponentBase.InvokeAsync(Func(Of Task))
  fullName.vb: Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func(Of System.Threading.Tasks.Task))
  name.vb: InvokeAsync(Func(Of Task))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func{System.Threading.Tasks.Task})
    name: InvokeAsync
    isExternal: true
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
  - name: <
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func{System.Threading.Tasks.Task})
    name: InvokeAsync
    isExternal: true
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
  - name: )
  - name: )
- uid: Microsoft.AspNetCore.Components.ComponentBase.Microsoft#AspNetCore#Components#IComponent#Attach(Microsoft.AspNetCore.Components.RenderHandle)
  commentId: M:Microsoft.AspNetCore.Components.ComponentBase.Microsoft#AspNetCore#Components#IComponent#Attach(Microsoft.AspNetCore.Components.RenderHandle)
  parent: Microsoft.AspNetCore.Components.ComponentBase
  isExternal: true
  name: IComponent.Attach(RenderHandle)
  nameWithType: ComponentBase.IComponent.Attach(RenderHandle)
  fullName: Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IComponent.Attach(Microsoft.AspNetCore.Components.RenderHandle)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Components.IComponent
    name: IComponent
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore.Components.ComponentBase.Microsoft#AspNetCore#Components#IComponent#Attach(Microsoft.AspNetCore.Components.RenderHandle)
    name: Attach
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Components.RenderHandle
    name: RenderHandle
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)
  commentId: M:Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)
  parent: Microsoft.AspNetCore.Components.ComponentBase
  isExternal: true
  name: SetParametersAsync(ParameterView)
  nameWithType: ComponentBase.SetParametersAsync(ParameterView)
  fullName: Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)
    name: SetParametersAsync
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Components.ParameterView
    name: ParameterView
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)
    name: SetParametersAsync
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Components.ParameterView
    name: ParameterView
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Components.ComponentBase.Microsoft#AspNetCore#Components#IHandleEvent#HandleEventAsync(Microsoft.AspNetCore.Components.EventCallbackWorkItem,System.Object)
  commentId: M:Microsoft.AspNetCore.Components.ComponentBase.Microsoft#AspNetCore#Components#IHandleEvent#HandleEventAsync(Microsoft.AspNetCore.Components.EventCallbackWorkItem,System.Object)
  parent: Microsoft.AspNetCore.Components.ComponentBase
  isExternal: true
  name: IHandleEvent.HandleEventAsync(EventCallbackWorkItem, object)
  nameWithType: ComponentBase.IHandleEvent.HandleEventAsync(EventCallbackWorkItem, object)
  fullName: Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IHandleEvent.HandleEventAsync(Microsoft.AspNetCore.Components.EventCallbackWorkItem, object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Components.IHandleEvent
    name: IHandleEvent
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore.Components.ComponentBase.Microsoft#AspNetCore#Components#IHandleEvent#HandleEventAsync(Microsoft.AspNetCore.Components.EventCallbackWorkItem,System.Object)
    name: HandleEventAsync
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Components.EventCallbackWorkItem
    name: EventCallbackWorkItem
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Components.ComponentBase.Microsoft#AspNetCore#Components#IHandleAfterRender#OnAfterRenderAsync
  commentId: M:Microsoft.AspNetCore.Components.ComponentBase.Microsoft#AspNetCore#Components#IHandleAfterRender#OnAfterRenderAsync
  parent: Microsoft.AspNetCore.Components.ComponentBase
  isExternal: true
  name: IHandleAfterRender.OnAfterRenderAsync()
  nameWithType: ComponentBase.IHandleAfterRender.OnAfterRenderAsync()
  fullName: Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Components.IHandleAfterRender
    name: IHandleAfterRender
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore.Components.ComponentBase.Microsoft#AspNetCore#Components#IHandleAfterRender#OnAfterRenderAsync
    name: OnAfterRenderAsync
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: App.Shared.Components.LazyRemoteTable`1.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  name: GetPropertyExpression<LazyRemoteTable<TItem>>(LazyRemoteTable<TItem>, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<LazyRemoteTable<TItem>>(LazyRemoteTable<TItem>, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<App.Shared.Components.LazyRemoteTable<TItem>>(App.Shared.Components.LazyRemoteTable<TItem>, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of LazyRemoteTable(Of TItem))(LazyRemoteTable(Of TItem), PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of App.Shared.Components.LazyRemoteTable(Of TItem))(App.Shared.Components.LazyRemoteTable(Of TItem), System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of LazyRemoteTable(Of TItem))(LazyRemoteTable(Of TItem), PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.Shared.Components.LazyRemoteTable{`0},System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - uid: App.Shared.Components.LazyRemoteTable`1
    name: LazyRemoteTable
  - name: <
  - name: TItem
  - name: '>'
  - name: '>'
  - name: (
  - uid: App.Shared.Components.LazyRemoteTable`1
    name: LazyRemoteTable
  - name: <
  - name: TItem
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.Shared.Components.LazyRemoteTable{`0},System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - uid: App.Shared.Components.LazyRemoteTable`1
    name: LazyRemoteTable
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: )
  - name: (
  - uid: App.Shared.Components.LazyRemoteTable`1
    name: LazyRemoteTable
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Shared.Components.LazyRemoteTable`1.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  name: GetSetPropertyEventCallback<LazyRemoteTable<TItem>>(LazyRemoteTable<TItem>, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<LazyRemoteTable<TItem>>(LazyRemoteTable<TItem>, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<App.Shared.Components.LazyRemoteTable<TItem>>(App.Shared.Components.LazyRemoteTable<TItem>, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of LazyRemoteTable(Of TItem))(LazyRemoteTable(Of TItem), Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of App.Shared.Components.LazyRemoteTable(Of TItem))(App.Shared.Components.LazyRemoteTable(Of TItem), Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of LazyRemoteTable(Of TItem))(LazyRemoteTable(Of TItem), Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.Shared.Components.LazyRemoteTable{`0},System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - uid: App.Shared.Components.LazyRemoteTable`1
    name: LazyRemoteTable
  - name: <
  - name: TItem
  - name: '>'
  - name: '>'
  - name: (
  - uid: App.Shared.Components.LazyRemoteTable`1
    name: LazyRemoteTable
  - name: <
  - name: TItem
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.Shared.Components.LazyRemoteTable{`0},System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - uid: App.Shared.Components.LazyRemoteTable`1
    name: LazyRemoteTable
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: )
  - name: (
  - uid: App.Shared.Components.LazyRemoteTable`1
    name: LazyRemoteTable
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Components
  commentId: N:Microsoft.AspNetCore.Components
  isExternal: true
  name: Microsoft.AspNetCore.Components
  nameWithType: Microsoft.AspNetCore.Components
  fullName: Microsoft.AspNetCore.Components
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore.Components
    name: Components
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore.Components
    name: Components
    isExternal: true
- uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetPropertyExpression<T>(T, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<T>(T, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<T>(T, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of T)(T, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils.ReflectionExtensions
  commentId: T:App.Utils.ReflectionExtensions
  parent: App.Utils
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: App.Utils.ReflectionExtensions
- uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils
  commentId: N:App.Utils
  name: App.Utils
  nameWithType: App.Utils
  fullName: App.Utils
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
- uid: Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)
  commentId: M:Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)
  parent: Microsoft.AspNetCore.Components.ComponentBase
  isExternal: true
  name: BuildRenderTree(RenderTreeBuilder)
  nameWithType: ComponentBase.BuildRenderTree(RenderTreeBuilder)
  fullName: Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)
    name: BuildRenderTree
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder
    name: RenderTreeBuilder
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)
    name: BuildRenderTree
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder
    name: RenderTreeBuilder
    isExternal: true
  - name: )
- uid: App.Shared.Components.LazyRemoteTable`1.BuildRenderTree*
  commentId: Overload:App.Shared.Components.LazyRemoteTable`1.BuildRenderTree
  name: BuildRenderTree
  nameWithType: LazyRemoteTable<TItem>.BuildRenderTree
  fullName: App.Shared.Components.LazyRemoteTable<TItem>.BuildRenderTree
  nameWithType.vb: LazyRemoteTable(Of TItem).BuildRenderTree
  fullName.vb: App.Shared.Components.LazyRemoteTable(Of TItem).BuildRenderTree
- uid: Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder
  commentId: T:Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder
  parent: Microsoft.AspNetCore.Components.Rendering
  isExternal: true
  name: RenderTreeBuilder
  nameWithType: RenderTreeBuilder
  fullName: Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder
- uid: Microsoft.AspNetCore.Components.Rendering
  commentId: N:Microsoft.AspNetCore.Components.Rendering
  isExternal: true
  name: Microsoft.AspNetCore.Components.Rendering
  nameWithType: Microsoft.AspNetCore.Components.Rendering
  fullName: Microsoft.AspNetCore.Components.Rendering
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore.Components
    name: Components
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore.Components.Rendering
    name: Rendering
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore.Components
    name: Components
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore.Components.Rendering
    name: Rendering
    isExternal: true
- uid: App.Shared.Components.LazyRemoteTable`1.ChildContent*
  commentId: Overload:App.Shared.Components.LazyRemoteTable`1.ChildContent
  name: ChildContent
  nameWithType: LazyRemoteTable<TItem>.ChildContent
  fullName: App.Shared.Components.LazyRemoteTable<TItem>.ChildContent
  nameWithType.vb: LazyRemoteTable(Of TItem).ChildContent
  fullName.vb: App.Shared.Components.LazyRemoteTable(Of TItem).ChildContent
- uid: Microsoft.AspNetCore.Components.RenderFragment{{TItem}}
  commentId: T:Microsoft.AspNetCore.Components.RenderFragment{`0}
  parent: Microsoft.AspNetCore.Components
  definition: Microsoft.AspNetCore.Components.RenderFragment`1
  name: RenderFragment<TItem>
  nameWithType: RenderFragment<TItem>
  fullName: Microsoft.AspNetCore.Components.RenderFragment<TItem>
  nameWithType.vb: RenderFragment(Of TItem)
  fullName.vb: Microsoft.AspNetCore.Components.RenderFragment(Of TItem)
  name.vb: RenderFragment(Of TItem)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Components.RenderFragment`1
    name: RenderFragment
    isExternal: true
  - name: <
  - name: TItem
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Components.RenderFragment`1
    name: RenderFragment
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
- uid: Microsoft.AspNetCore.Components.RenderFragment`1
  commentId: T:Microsoft.AspNetCore.Components.RenderFragment`1
  isExternal: true
  name: RenderFragment<TValue>
  nameWithType: RenderFragment<TValue>
  fullName: Microsoft.AspNetCore.Components.RenderFragment<TValue>
  nameWithType.vb: RenderFragment(Of TValue)
  fullName.vb: Microsoft.AspNetCore.Components.RenderFragment(Of TValue)
  name.vb: RenderFragment(Of TValue)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Components.RenderFragment`1
    name: RenderFragment
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Components.RenderFragment`1
    name: RenderFragment
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: App.Shared.Components.LazyRemoteTable`1.OnQuery*
  commentId: Overload:App.Shared.Components.LazyRemoteTable`1.OnQuery
  name: OnQuery
  nameWithType: LazyRemoteTable<TItem>.OnQuery
  fullName: App.Shared.Components.LazyRemoteTable<TItem>.OnQuery
  nameWithType.vb: LazyRemoteTable(Of TItem).OnQuery
  fullName.vb: App.Shared.Components.LazyRemoteTable(Of TItem).OnQuery
- uid: System.Func{QueryModel{{TItem}},System.Threading.Tasks.Task{{TItem}[]}}
  commentId: T:System.Func{QueryModel{`0},System.Threading.Tasks.Task{`0[]}}
  parent: System
  definition: System.Func`2
  name: Func<QueryModel<TItem>, Task<TItem[]>>
  nameWithType: Func<QueryModel<TItem>, Task<TItem[]>>
  fullName: System.Func<QueryModel<TItem>, System.Threading.Tasks.Task<TItem[]>>
  nameWithType.vb: Func(Of QueryModel(Of TItem), Task(Of TItem()))
  fullName.vb: System.Func(Of QueryModel(Of TItem), System.Threading.Tasks.Task(Of TItem()))
  name.vb: Func(Of QueryModel(Of TItem), Task(Of TItem()))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - uid: QueryModel`1
    name: QueryModel
    isExternal: true
  - name: <
  - name: TItem
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - name: TItem
  - name: '['
  - name: ']'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: QueryModel`1
    name: QueryModel
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: (
  - name: )
  - name: )
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: App.Shared.Components.LazyRemoteTable`1.OnQueryCount*
  commentId: Overload:App.Shared.Components.LazyRemoteTable`1.OnQueryCount
  name: OnQueryCount
  nameWithType: LazyRemoteTable<TItem>.OnQueryCount
  fullName: App.Shared.Components.LazyRemoteTable<TItem>.OnQueryCount
  nameWithType.vb: LazyRemoteTable(Of TItem).OnQueryCount
  fullName.vb: App.Shared.Components.LazyRemoteTable(Of TItem).OnQueryCount
- uid: System.Func{QueryModel{{TItem}},System.Threading.Tasks.Task{System.Int32}}
  commentId: T:System.Func{QueryModel{`0},System.Threading.Tasks.Task{System.Int32}}
  parent: System
  definition: System.Func`2
  name: Func<QueryModel<TItem>, Task<int>>
  nameWithType: Func<QueryModel<TItem>, Task<int>>
  fullName: System.Func<QueryModel<TItem>, System.Threading.Tasks.Task<int>>
  nameWithType.vb: Func(Of QueryModel(Of TItem), Task(Of Integer))
  fullName.vb: System.Func(Of QueryModel(Of TItem), System.Threading.Tasks.Task(Of Integer))
  name.vb: Func(Of QueryModel(Of TItem), Task(Of Integer))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - uid: QueryModel`1
    name: QueryModel
    isExternal: true
  - name: <
  - name: TItem
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: QueryModel`1
    name: QueryModel
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
  - name: )
- uid: App.Shared.Components.LazyRemoteTable`1.Bordered*
  commentId: Overload:App.Shared.Components.LazyRemoteTable`1.Bordered
  name: Bordered
  nameWithType: LazyRemoteTable<TItem>.Bordered
  fullName: App.Shared.Components.LazyRemoteTable<TItem>.Bordered
  nameWithType.vb: LazyRemoteTable(Of TItem).Bordered
  fullName.vb: App.Shared.Components.LazyRemoteTable(Of TItem).Bordered
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: App.Shared.Components.LazyRemoteTable`1.Style*
  commentId: Overload:App.Shared.Components.LazyRemoteTable`1.Style
  name: Style
  nameWithType: LazyRemoteTable<TItem>.Style
  fullName: App.Shared.Components.LazyRemoteTable<TItem>.Style
  nameWithType.vb: LazyRemoteTable(Of TItem).Style
  fullName.vb: App.Shared.Components.LazyRemoteTable(Of TItem).Style
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: App.Shared.Components.LazyRemoteTable`1.Class*
  commentId: Overload:App.Shared.Components.LazyRemoteTable`1.Class
  name: Class
  nameWithType: LazyRemoteTable<TItem>.Class
  fullName: App.Shared.Components.LazyRemoteTable<TItem>.Class
  nameWithType.vb: LazyRemoteTable(Of TItem).Class
  fullName.vb: App.Shared.Components.LazyRemoteTable(Of TItem).Class
- uid: App.Shared.Components.LazyRemoteTable`1.PageSize*
  commentId: Overload:App.Shared.Components.LazyRemoteTable`1.PageSize
  name: PageSize
  nameWithType: LazyRemoteTable<TItem>.PageSize
  fullName: App.Shared.Components.LazyRemoteTable<TItem>.PageSize
  nameWithType.vb: LazyRemoteTable(Of TItem).PageSize
  fullName.vb: App.Shared.Components.LazyRemoteTable(Of TItem).PageSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: App.Shared.Components.LazyRemoteTable`1.ChangeLocally*
  commentId: Overload:App.Shared.Components.LazyRemoteTable`1.ChangeLocally
  name: ChangeLocally
  nameWithType: LazyRemoteTable<TItem>.ChangeLocally
  fullName: App.Shared.Components.LazyRemoteTable<TItem>.ChangeLocally
  nameWithType.vb: LazyRemoteTable(Of TItem).ChangeLocally
  fullName.vb: App.Shared.Components.LazyRemoteTable(Of TItem).ChangeLocally
- uid: System.Func{{TItem}[],{TItem}[]}
  commentId: T:System.Func{`0[],`0[]}
  parent: System
  definition: System.Func`2
  name: Func<TItem[], TItem[]>
  nameWithType: Func<TItem[], TItem[]>
  fullName: System.Func<TItem[], TItem[]>
  nameWithType.vb: Func(Of TItem(), TItem())
  fullName.vb: System.Func(Of TItem(), TItem())
  name.vb: Func(Of TItem(), TItem())
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: TItem
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - name: TItem
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: (
  - name: )
  - name: ','
  - name: " "
  - name: TItem
  - name: (
  - name: )
  - name: )
- uid: Microsoft.AspNetCore.Components.ComponentBase.OnInitialized
  commentId: M:Microsoft.AspNetCore.Components.ComponentBase.OnInitialized
  parent: Microsoft.AspNetCore.Components.ComponentBase
  isExternal: true
  name: OnInitialized()
  nameWithType: ComponentBase.OnInitialized()
  fullName: Microsoft.AspNetCore.Components.ComponentBase.OnInitialized()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.OnInitialized
    name: OnInitialized
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Components.ComponentBase.OnInitialized
    name: OnInitialized
    isExternal: true
  - name: (
  - name: )
- uid: App.Shared.Components.LazyRemoteTable`1.OnInitialized*
  commentId: Overload:App.Shared.Components.LazyRemoteTable`1.OnInitialized
  name: OnInitialized
  nameWithType: LazyRemoteTable<TItem>.OnInitialized
  fullName: App.Shared.Components.LazyRemoteTable<TItem>.OnInitialized
  nameWithType.vb: LazyRemoteTable(Of TItem).OnInitialized
  fullName.vb: App.Shared.Components.LazyRemoteTable(Of TItem).OnInitialized
