### YamlMime:ManagedReference
items:
- uid: App.ServerServices.ReservationManager
  commentId: T:App.ServerServices.ReservationManager
  id: ReservationManager
  parent: App.ServerServices
  children:
  - App.ServerServices.ReservationManager.#ctor(App.Data.ServiceInterfaces.IUserService,App.Data.ServiceInterfaces.IBorrowService,App.Data.Constants.IReservationConstant,App.Data.Constants.IRates,App.Middlewares.IContextHookMiddleware,IDbContextFactory{App.Data.ApplicationDbContext},IClock)
  - App.ServerServices.ReservationManager.Count
  - App.ServerServices.ReservationManager.Create(System.Int32)
  - App.ServerServices.ReservationManager.Dispose
  - App.ServerServices.ReservationManager.OnChange(System.Int32)
  - App.ServerServices.ReservationManager.Remove(System.Int32)
  langs:
  - csharp
  - vb
  name: ReservationManager
  nameWithType: ReservationManager
  fullName: App.ServerServices.ReservationManager
  type: Class
  source:
    remote:
      path: App/ServerServices/ReservationManager.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: ReservationManager
    path: ../App/ServerServices/ReservationManager.cs
    startLine: 11
  assemblies:
  - App
  namespace: App.ServerServices
  summary: "\nInterface for reservation manager that manages reservation over borrow and no borrow\n"
  example: []
  syntax:
    content: 'public class ReservationManager : IReservationManager, IDisposable'
    content.vb: Public Class ReservationManager Implements IReservationManager, IDisposable
  inheritance:
  - System.Object
  implements:
  - App.ServerServices.IReservationManager
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - App.ServerServices.ReservationManager.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  - App.ServerServices.ReservationManager.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
- uid: App.ServerServices.ReservationManager.#ctor(App.Data.ServiceInterfaces.IUserService,App.Data.ServiceInterfaces.IBorrowService,App.Data.Constants.IReservationConstant,App.Data.Constants.IRates,App.Middlewares.IContextHookMiddleware,IDbContextFactory{App.Data.ApplicationDbContext},IClock)
  commentId: M:App.ServerServices.ReservationManager.#ctor(App.Data.ServiceInterfaces.IUserService,App.Data.ServiceInterfaces.IBorrowService,App.Data.Constants.IReservationConstant,App.Data.Constants.IRates,App.Middlewares.IContextHookMiddleware,IDbContextFactory{App.Data.ApplicationDbContext},IClock)
  id: '#ctor(App.Data.ServiceInterfaces.IUserService,App.Data.ServiceInterfaces.IBorrowService,App.Data.Constants.IReservationConstant,App.Data.Constants.IRates,App.Middlewares.IContextHookMiddleware,IDbContextFactory{App.Data.ApplicationDbContext},IClock)'
  parent: App.ServerServices.ReservationManager
  langs:
  - csharp
  - vb
  name: ReservationManager(IUserService, IBorrowService, IReservationConstant, IRates, IContextHookMiddleware, IDbContextFactory<ApplicationDbContext>, IClock)
  nameWithType: ReservationManager.ReservationManager(IUserService, IBorrowService, IReservationConstant, IRates, IContextHookMiddleware, IDbContextFactory<ApplicationDbContext>, IClock)
  fullName: App.ServerServices.ReservationManager.ReservationManager(App.Data.ServiceInterfaces.IUserService, App.Data.ServiceInterfaces.IBorrowService, App.Data.Constants.IReservationConstant, App.Data.Constants.IRates, App.Middlewares.IContextHookMiddleware, IDbContextFactory<App.Data.ApplicationDbContext>, IClock)
  type: Constructor
  source:
    remote:
      path: App/ServerServices/ReservationManager.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: .ctor
    path: ../App/ServerServices/ReservationManager.cs
    startLine: 32
  assemblies:
  - App
  namespace: App.ServerServices
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public ReservationManager(IUserService userService, IBorrowService borrowService, IReservationConstant reservationConstant, IRates rates, IContextHookMiddleware middleware, IDbContextFactory<ApplicationDbContext> factory, IClock clock)
    parameters:
    - id: userService
      type: App.Data.ServiceInterfaces.IUserService
      description: ''
    - id: borrowService
      type: App.Data.ServiceInterfaces.IBorrowService
      description: ''
    - id: reservationConstant
      type: App.Data.Constants.IReservationConstant
      description: ''
    - id: rates
      type: App.Data.Constants.IRates
      description: ''
    - id: middleware
      type: App.Middlewares.IContextHookMiddleware
      description: ''
    - id: factory
      type: IDbContextFactory{App.Data.ApplicationDbContext}
      description: ''
    - id: clock
      type: IClock
      description: ''
    content.vb: Public Sub New(userService As IUserService, borrowService As IBorrowService, reservationConstant As IReservationConstant, rates As IRates, middleware As IContextHookMiddleware, factory As IDbContextFactory(Of ApplicationDbContext), clock As IClock)
  overload: App.ServerServices.ReservationManager.#ctor*
  nameWithType.vb: ReservationManager.New(IUserService, IBorrowService, IReservationConstant, IRates, IContextHookMiddleware, IDbContextFactory(Of ApplicationDbContext), IClock)
  fullName.vb: App.ServerServices.ReservationManager.New(App.Data.ServiceInterfaces.IUserService, App.Data.ServiceInterfaces.IBorrowService, App.Data.Constants.IReservationConstant, App.Data.Constants.IRates, App.Middlewares.IContextHookMiddleware, IDbContextFactory(Of App.Data.ApplicationDbContext), IClock)
  name.vb: New(IUserService, IBorrowService, IReservationConstant, IRates, IContextHookMiddleware, IDbContextFactory(Of ApplicationDbContext), IClock)
- uid: App.ServerServices.ReservationManager.Dispose
  commentId: M:App.ServerServices.ReservationManager.Dispose
  id: Dispose
  parent: App.ServerServices.ReservationManager
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ReservationManager.Dispose()
  fullName: App.ServerServices.ReservationManager.Dispose()
  type: Method
  source:
    remote:
      path: App/ServerServices/ReservationManager.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: Dispose
    path: ../App/ServerServices/ReservationManager.cs
    startLine: 49
  assemblies:
  - App
  namespace: App.ServerServices
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: App.ServerServices.ReservationManager.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: App.ServerServices.ReservationManager.Create(System.Int32)
  commentId: M:App.ServerServices.ReservationManager.Create(System.Int32)
  id: Create(System.Int32)
  parent: App.ServerServices.ReservationManager
  langs:
  - csharp
  - vb
  name: Create(int)
  nameWithType: ReservationManager.Create(int)
  fullName: App.ServerServices.ReservationManager.Create(int)
  type: Method
  source:
    remote:
      path: App/ServerServices/ReservationManager.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: Create
    path: ../App/ServerServices/ReservationManager.cs
    startLine: 55
  assemblies:
  - App
  namespace: App.ServerServices
  summary: "\nCreates a new queue for given borrowable entity.\n"
  example: []
  syntax:
    content: public Task<ITimedQueue<Reservation>> Create(int id)
    parameters:
    - id: id
      type: System.Int32
      description: id of entity
    return:
      type: System.Threading.Tasks.Task{App.ServerServices.ITimedQueue{App.Data.Models.Reservation}}
      description: Reference to created queue
    content.vb: Public Function Create(id As Integer) As Task(Of ITimedQueue(Of Reservation))
  overload: App.ServerServices.ReservationManager.Create*
  implements:
  - App.ServerServices.IReservationManager.Create(System.Int32)
  nameWithType.vb: ReservationManager.Create(Integer)
  fullName.vb: App.ServerServices.ReservationManager.Create(Integer)
  name.vb: Create(Integer)
- uid: App.ServerServices.ReservationManager.Remove(System.Int32)
  commentId: M:App.ServerServices.ReservationManager.Remove(System.Int32)
  id: Remove(System.Int32)
  parent: App.ServerServices.ReservationManager
  langs:
  - csharp
  - vb
  name: Remove(int)
  nameWithType: ReservationManager.Remove(int)
  fullName: App.ServerServices.ReservationManager.Remove(int)
  type: Method
  source:
    remote:
      path: App/ServerServices/ReservationManager.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: Remove
    path: ../App/ServerServices/ReservationManager.cs
    startLine: 66
  assemblies:
  - App
  namespace: App.ServerServices
  summary: "\nRemoves queue for given borrowable entity.\n"
  example: []
  syntax:
    content: public void Remove(int id)
    parameters:
    - id: id
      type: System.Int32
      description: id of entity
    content.vb: Public Sub Remove(id As Integer)
  overload: App.ServerServices.ReservationManager.Remove*
  implements:
  - App.ServerServices.IReservationManager.Remove(System.Int32)
  nameWithType.vb: ReservationManager.Remove(Integer)
  fullName.vb: App.ServerServices.ReservationManager.Remove(Integer)
  name.vb: Remove(Integer)
- uid: App.ServerServices.ReservationManager.OnChange(System.Int32)
  commentId: M:App.ServerServices.ReservationManager.OnChange(System.Int32)
  id: OnChange(System.Int32)
  parent: App.ServerServices.ReservationManager
  langs:
  - csharp
  - vb
  name: OnChange(int)
  nameWithType: ReservationManager.OnChange(int)
  fullName: App.ServerServices.ReservationManager.OnChange(int)
  type: Method
  source:
    remote:
      path: App/ServerServices/ReservationManager.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: OnChange
    path: ../App/ServerServices/ReservationManager.cs
    startLine: 73
  assemblies:
  - App
  namespace: App.ServerServices
  summary: "\nTriggers OnChange event for given queue.\n"
  example: []
  syntax:
    content: public Task OnChange(int id)
    parameters:
    - id: id
      type: System.Int32
      description: id of entity
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Function OnChange(id As Integer) As Task
  overload: App.ServerServices.ReservationManager.OnChange*
  implements:
  - App.ServerServices.IReservationManager.OnChange(System.Int32)
  nameWithType.vb: ReservationManager.OnChange(Integer)
  fullName.vb: App.ServerServices.ReservationManager.OnChange(Integer)
  name.vb: OnChange(Integer)
- uid: App.ServerServices.ReservationManager.Count
  commentId: P:App.ServerServices.ReservationManager.Count
  id: Count
  parent: App.ServerServices.ReservationManager
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ReservationManager.Count
  fullName: App.ServerServices.ReservationManager.Count
  type: Property
  source:
    remote:
      path: App/ServerServices/ReservationManager.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: Count
    path: ../App/ServerServices/ReservationManager.cs
    startLine: 92
  assemblies:
  - App
  namespace: App.ServerServices
  summary: "\nGets number of queues. Each queue represents one borrowable entity.\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: App.ServerServices.ReservationManager.Count*
  implements:
  - App.ServerServices.IReservationManager.Count
references:
- uid: App.ServerServices.IReservationManager
  commentId: T:App.ServerServices.IReservationManager
  parent: App.ServerServices
  name: IReservationManager
  nameWithType: IReservationManager
  fullName: App.ServerServices.IReservationManager
- uid: App.ServerServices
  commentId: N:App.ServerServices
  name: App.ServerServices
  nameWithType: App.ServerServices
  fullName: App.ServerServices
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.ServerServices
    name: ServerServices
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.ServerServices
    name: ServerServices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: App.ServerServices.ReservationManager.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  name: GetPropertyExpression<ReservationManager>(ReservationManager, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<ReservationManager>(ReservationManager, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<App.ServerServices.ReservationManager>(App.ServerServices.ReservationManager, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of ReservationManager)(ReservationManager, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of App.ServerServices.ReservationManager)(App.ServerServices.ReservationManager, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of ReservationManager)(ReservationManager, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.ServerServices.ReservationManager,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - uid: App.ServerServices.ReservationManager
    name: ReservationManager
  - name: '>'
  - name: (
  - uid: App.ServerServices.ReservationManager
    name: ReservationManager
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.ServerServices.ReservationManager,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - uid: App.ServerServices.ReservationManager
    name: ReservationManager
  - name: )
  - name: (
  - uid: App.ServerServices.ReservationManager
    name: ReservationManager
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.ServerServices.ReservationManager.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  name: GetSetPropertyEventCallback<ReservationManager>(ReservationManager, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<ReservationManager>(ReservationManager, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<App.ServerServices.ReservationManager>(App.ServerServices.ReservationManager, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of ReservationManager)(ReservationManager, Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of App.ServerServices.ReservationManager)(App.ServerServices.ReservationManager, Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of ReservationManager)(ReservationManager, Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.ServerServices.ReservationManager,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - uid: App.ServerServices.ReservationManager
    name: ReservationManager
  - name: '>'
  - name: (
  - uid: App.ServerServices.ReservationManager
    name: ReservationManager
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.ServerServices.ReservationManager,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - uid: App.ServerServices.ReservationManager
    name: ReservationManager
  - name: )
  - name: (
  - uid: App.ServerServices.ReservationManager
    name: ReservationManager
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetPropertyExpression<T>(T, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<T>(T, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<T>(T, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of T)(T, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils.ReflectionExtensions
  commentId: T:App.Utils.ReflectionExtensions
  parent: App.Utils
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: App.Utils.ReflectionExtensions
- uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils
  commentId: N:App.Utils
  name: App.Utils
  nameWithType: App.Utils
  fullName: App.Utils
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
- uid: App.ServerServices.ReservationManager.#ctor*
  commentId: Overload:App.ServerServices.ReservationManager.#ctor
  name: ReservationManager
  nameWithType: ReservationManager.ReservationManager
  fullName: App.ServerServices.ReservationManager.ReservationManager
  nameWithType.vb: ReservationManager.New
  fullName.vb: App.ServerServices.ReservationManager.New
  name.vb: New
- uid: App.Data.ServiceInterfaces.IUserService
  commentId: T:App.Data.ServiceInterfaces.IUserService
  parent: App.Data.ServiceInterfaces
  name: IUserService
  nameWithType: IUserService
  fullName: App.Data.ServiceInterfaces.IUserService
- uid: App.Data.ServiceInterfaces.IBorrowService
  commentId: T:App.Data.ServiceInterfaces.IBorrowService
  parent: App.Data.ServiceInterfaces
  name: IBorrowService
  nameWithType: IBorrowService
  fullName: App.Data.ServiceInterfaces.IBorrowService
- uid: App.Data.Constants.IReservationConstant
  commentId: T:App.Data.Constants.IReservationConstant
  parent: App.Data.Constants
  name: IReservationConstant
  nameWithType: IReservationConstant
  fullName: App.Data.Constants.IReservationConstant
- uid: App.Data.Constants.IRates
  commentId: T:App.Data.Constants.IRates
  parent: App.Data.Constants
  name: IRates
  nameWithType: IRates
  fullName: App.Data.Constants.IRates
- uid: App.Middlewares.IContextHookMiddleware
  commentId: T:App.Middlewares.IContextHookMiddleware
  parent: App.Middlewares
  name: IContextHookMiddleware
  nameWithType: IContextHookMiddleware
  fullName: App.Middlewares.IContextHookMiddleware
- uid: IDbContextFactory{App.Data.ApplicationDbContext}
  commentId: '!:IDbContextFactory{App.Data.ApplicationDbContext}'
  definition: IDbContextFactory`1
  name: IDbContextFactory<ApplicationDbContext>
  nameWithType: IDbContextFactory<ApplicationDbContext>
  fullName: IDbContextFactory<App.Data.ApplicationDbContext>
  nameWithType.vb: IDbContextFactory(Of ApplicationDbContext)
  fullName.vb: IDbContextFactory(Of App.Data.ApplicationDbContext)
  name.vb: IDbContextFactory(Of ApplicationDbContext)
  spec.csharp:
  - uid: IDbContextFactory`1
    name: IDbContextFactory
    isExternal: true
  - name: <
  - uid: App.Data.ApplicationDbContext
    name: ApplicationDbContext
  - name: '>'
  spec.vb:
  - uid: IDbContextFactory`1
    name: IDbContextFactory
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: App.Data.ApplicationDbContext
    name: ApplicationDbContext
  - name: )
- uid: IClock
  isExternal: true
  name: IClock
  nameWithType: IClock
  fullName: IClock
- uid: App.Data.ServiceInterfaces
  commentId: N:App.Data.ServiceInterfaces
  name: App.Data.ServiceInterfaces
  nameWithType: App.Data.ServiceInterfaces
  fullName: App.Data.ServiceInterfaces
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.ServiceInterfaces
    name: ServiceInterfaces
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.ServiceInterfaces
    name: ServiceInterfaces
- uid: App.Data.Constants
  commentId: N:App.Data.Constants
  name: App.Data.Constants
  nameWithType: App.Data.Constants
  fullName: App.Data.Constants
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.Constants
    name: Constants
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.Constants
    name: Constants
- uid: App.Middlewares
  commentId: N:App.Middlewares
  name: App.Middlewares
  nameWithType: App.Middlewares
  fullName: App.Middlewares
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Middlewares
    name: Middlewares
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Middlewares
    name: Middlewares
- uid: IDbContextFactory`1
  isExternal: true
  name: IDbContextFactory<>
  nameWithType: IDbContextFactory<>
  fullName: IDbContextFactory<>
  nameWithType.vb: IDbContextFactory(Of )
  fullName.vb: IDbContextFactory(Of )
  name.vb: IDbContextFactory(Of )
  spec.csharp:
  - uid: IDbContextFactory`1
    name: IDbContextFactory
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: IDbContextFactory`1
    name: IDbContextFactory
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: App.ServerServices.ReservationManager.Dispose*
  commentId: Overload:App.ServerServices.ReservationManager.Dispose
  name: Dispose
  nameWithType: ReservationManager.Dispose
  fullName: App.ServerServices.ReservationManager.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
- uid: App.ServerServices.ReservationManager.Create*
  commentId: Overload:App.ServerServices.ReservationManager.Create
  name: Create
  nameWithType: ReservationManager.Create
  fullName: App.ServerServices.ReservationManager.Create
- uid: App.ServerServices.IReservationManager.Create(System.Int32)
  commentId: M:App.ServerServices.IReservationManager.Create(System.Int32)
  parent: App.ServerServices.IReservationManager
  isExternal: true
  name: Create(int)
  nameWithType: IReservationManager.Create(int)
  fullName: App.ServerServices.IReservationManager.Create(int)
  nameWithType.vb: IReservationManager.Create(Integer)
  fullName.vb: App.ServerServices.IReservationManager.Create(Integer)
  name.vb: Create(Integer)
  spec.csharp:
  - uid: App.ServerServices.IReservationManager.Create(System.Int32)
    name: Create
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.ServerServices.IReservationManager.Create(System.Int32)
    name: Create
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{App.ServerServices.ITimedQueue{App.Data.Models.Reservation}}
  commentId: T:System.Threading.Tasks.Task{App.ServerServices.ITimedQueue{App.Data.Models.Reservation}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ITimedQueue<Reservation>>
  nameWithType: Task<ITimedQueue<Reservation>>
  fullName: System.Threading.Tasks.Task<App.ServerServices.ITimedQueue<App.Data.Models.Reservation>>
  nameWithType.vb: Task(Of ITimedQueue(Of Reservation))
  fullName.vb: System.Threading.Tasks.Task(Of App.ServerServices.ITimedQueue(Of App.Data.Models.Reservation))
  name.vb: Task(Of ITimedQueue(Of Reservation))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - uid: App.ServerServices.ITimedQueue`1
    name: ITimedQueue
  - name: <
  - uid: App.Data.Models.Reservation
    name: Reservation
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: App.ServerServices.ITimedQueue`1
    name: ITimedQueue
  - name: (
  - name: Of
  - name: " "
  - uid: App.Data.Models.Reservation
    name: Reservation
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
- uid: App.ServerServices.ReservationManager.Remove*
  commentId: Overload:App.ServerServices.ReservationManager.Remove
  name: Remove
  nameWithType: ReservationManager.Remove
  fullName: App.ServerServices.ReservationManager.Remove
- uid: App.ServerServices.IReservationManager.Remove(System.Int32)
  commentId: M:App.ServerServices.IReservationManager.Remove(System.Int32)
  parent: App.ServerServices.IReservationManager
  isExternal: true
  name: Remove(int)
  nameWithType: IReservationManager.Remove(int)
  fullName: App.ServerServices.IReservationManager.Remove(int)
  nameWithType.vb: IReservationManager.Remove(Integer)
  fullName.vb: App.ServerServices.IReservationManager.Remove(Integer)
  name.vb: Remove(Integer)
  spec.csharp:
  - uid: App.ServerServices.IReservationManager.Remove(System.Int32)
    name: Remove
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.ServerServices.IReservationManager.Remove(System.Int32)
    name: Remove
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: App.ServerServices.ReservationManager.OnChange*
  commentId: Overload:App.ServerServices.ReservationManager.OnChange
  name: OnChange
  nameWithType: ReservationManager.OnChange
  fullName: App.ServerServices.ReservationManager.OnChange
- uid: App.ServerServices.IReservationManager.OnChange(System.Int32)
  commentId: M:App.ServerServices.IReservationManager.OnChange(System.Int32)
  parent: App.ServerServices.IReservationManager
  isExternal: true
  name: OnChange(int)
  nameWithType: IReservationManager.OnChange(int)
  fullName: App.ServerServices.IReservationManager.OnChange(int)
  nameWithType.vb: IReservationManager.OnChange(Integer)
  fullName.vb: App.ServerServices.IReservationManager.OnChange(Integer)
  name.vb: OnChange(Integer)
  spec.csharp:
  - uid: App.ServerServices.IReservationManager.OnChange(System.Int32)
    name: OnChange
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.ServerServices.IReservationManager.OnChange(System.Int32)
    name: OnChange
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: App.ServerServices.ReservationManager.Count*
  commentId: Overload:App.ServerServices.ReservationManager.Count
  name: Count
  nameWithType: ReservationManager.Count
  fullName: App.ServerServices.ReservationManager.Count
- uid: App.ServerServices.IReservationManager.Count
  commentId: P:App.ServerServices.IReservationManager.Count
  parent: App.ServerServices.IReservationManager
  name: Count
  nameWithType: IReservationManager.Count
  fullName: App.ServerServices.IReservationManager.Count
