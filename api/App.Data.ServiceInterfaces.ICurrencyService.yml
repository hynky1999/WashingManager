### YamlMime:ManagedReference
items:
- uid: App.Data.ServiceInterfaces.ICurrencyService
  commentId: T:App.Data.ServiceInterfaces.ICurrencyService
  id: ICurrencyService
  parent: App.Data.ServiceInterfaces
  children:
  - App.Data.ServiceInterfaces.ICurrencyService.ApproximateTo(App.Data.Constants.Money,App.Data.Constants.Currency)
  - App.Data.ServiceInterfaces.ICurrencyService.ConvertToAsync(App.Data.Constants.Money,App.Data.Constants.Currency)
  langs:
  - csharp
  - vb
  name: ICurrencyService
  nameWithType: ICurrencyService
  fullName: App.Data.ServiceInterfaces.ICurrencyService
  type: Interface
  source:
    remote:
      path: App/Data/ServiceInterfaces/ICurrencyService.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: ICurrencyService
    path: ../App/Data/ServiceInterfaces/ICurrencyService.cs
    startLine: 7
  assemblies:
  - App
  namespace: App.Data.ServiceInterfaces
  summary: "\nService for working with currencies and currency rates\n"
  example: []
  syntax:
    content: public interface ICurrencyService
    content.vb: Public Interface ICurrencyService
  extensionMethods:
  - App.Data.ServiceInterfaces.ICurrencyService.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  - App.Data.ServiceInterfaces.ICurrencyService.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
- uid: App.Data.ServiceInterfaces.ICurrencyService.ConvertToAsync(App.Data.Constants.Money,App.Data.Constants.Currency)
  commentId: M:App.Data.ServiceInterfaces.ICurrencyService.ConvertToAsync(App.Data.Constants.Money,App.Data.Constants.Currency)
  id: ConvertToAsync(App.Data.Constants.Money,App.Data.Constants.Currency)
  parent: App.Data.ServiceInterfaces.ICurrencyService
  langs:
  - csharp
  - vb
  name: ConvertToAsync(Money, Currency)
  nameWithType: ICurrencyService.ConvertToAsync(Money, Currency)
  fullName: App.Data.ServiceInterfaces.ICurrencyService.ConvertToAsync(App.Data.Constants.Money, App.Data.Constants.Currency)
  type: Method
  source:
    remote:
      path: App/Data/ServiceInterfaces/ICurrencyService.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: ConvertToAsync
    path: ../App/Data/ServiceInterfaces/ICurrencyService.cs
    startLine: 15
  assemblies:
  - App
  namespace: App.Data.ServiceInterfaces
  summary: "\nConverts money to specified currency\n"
  example: []
  syntax:
    content: Task<Money> ConvertToAsync(Money money, Currency toCurrency)
    parameters:
    - id: money
      type: App.Data.Constants.Money
      description: ''
    - id: toCurrency
      type: App.Data.Constants.Currency
      description: ''
    return:
      type: System.Threading.Tasks.Task{App.Data.Constants.Money}
      description: Money in specified currency
    content.vb: Function ConvertToAsync(money As Money, toCurrency As Currency) As Task(Of Money)
  overload: App.Data.ServiceInterfaces.ICurrencyService.ConvertToAsync*
- uid: App.Data.ServiceInterfaces.ICurrencyService.ApproximateTo(App.Data.Constants.Money,App.Data.Constants.Currency)
  commentId: M:App.Data.ServiceInterfaces.ICurrencyService.ApproximateTo(App.Data.Constants.Money,App.Data.Constants.Currency)
  id: ApproximateTo(App.Data.Constants.Money,App.Data.Constants.Currency)
  parent: App.Data.ServiceInterfaces.ICurrencyService
  langs:
  - csharp
  - vb
  name: ApproximateTo(Money, Currency)
  nameWithType: ICurrencyService.ApproximateTo(Money, Currency)
  fullName: App.Data.ServiceInterfaces.ICurrencyService.ApproximateTo(App.Data.Constants.Money, App.Data.Constants.Currency)
  type: Method
  source:
    remote:
      path: App/Data/ServiceInterfaces/ICurrencyService.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: ApproximateTo
    path: ../App/Data/ServiceInterfaces/ICurrencyService.cs
    startLine: 23
  assemblies:
  - App
  namespace: App.Data.ServiceInterfaces
  summary: "\nConverts money to specified currency approximately based on static currency rates\n"
  example: []
  syntax:
    content: Money ApproximateTo(Money money, Currency toCurrency)
    parameters:
    - id: money
      type: App.Data.Constants.Money
      description: ''
    - id: toCurrency
      type: App.Data.Constants.Currency
      description: ''
    return:
      type: App.Data.Constants.Money
      description: Approximate converted money
    content.vb: Function ApproximateTo(money As Money, toCurrency As Currency) As Money
  overload: App.Data.ServiceInterfaces.ICurrencyService.ApproximateTo*
references:
- uid: App.Data.ServiceInterfaces
  commentId: N:App.Data.ServiceInterfaces
  name: App.Data.ServiceInterfaces
  nameWithType: App.Data.ServiceInterfaces
  fullName: App.Data.ServiceInterfaces
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.ServiceInterfaces
    name: ServiceInterfaces
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.ServiceInterfaces
    name: ServiceInterfaces
- uid: App.Data.ServiceInterfaces.ICurrencyService.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  name: GetPropertyExpression<ICurrencyService>(ICurrencyService, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<ICurrencyService>(ICurrencyService, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<App.Data.ServiceInterfaces.ICurrencyService>(App.Data.ServiceInterfaces.ICurrencyService, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of ICurrencyService)(ICurrencyService, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of App.Data.ServiceInterfaces.ICurrencyService)(App.Data.ServiceInterfaces.ICurrencyService, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of ICurrencyService)(ICurrencyService, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.Data.ServiceInterfaces.ICurrencyService,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - uid: App.Data.ServiceInterfaces.ICurrencyService
    name: ICurrencyService
  - name: '>'
  - name: (
  - uid: App.Data.ServiceInterfaces.ICurrencyService
    name: ICurrencyService
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.Data.ServiceInterfaces.ICurrencyService,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - uid: App.Data.ServiceInterfaces.ICurrencyService
    name: ICurrencyService
  - name: )
  - name: (
  - uid: App.Data.ServiceInterfaces.ICurrencyService
    name: ICurrencyService
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Data.ServiceInterfaces.ICurrencyService.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  name: GetSetPropertyEventCallback<ICurrencyService>(ICurrencyService, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<ICurrencyService>(ICurrencyService, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<App.Data.ServiceInterfaces.ICurrencyService>(App.Data.ServiceInterfaces.ICurrencyService, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of ICurrencyService)(ICurrencyService, Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of App.Data.ServiceInterfaces.ICurrencyService)(App.Data.ServiceInterfaces.ICurrencyService, Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of ICurrencyService)(ICurrencyService, Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.Data.ServiceInterfaces.ICurrencyService,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - uid: App.Data.ServiceInterfaces.ICurrencyService
    name: ICurrencyService
  - name: '>'
  - name: (
  - uid: App.Data.ServiceInterfaces.ICurrencyService
    name: ICurrencyService
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.Data.ServiceInterfaces.ICurrencyService,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - uid: App.Data.ServiceInterfaces.ICurrencyService
    name: ICurrencyService
  - name: )
  - name: (
  - uid: App.Data.ServiceInterfaces.ICurrencyService
    name: ICurrencyService
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetPropertyExpression<T>(T, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<T>(T, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<T>(T, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of T)(T, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils.ReflectionExtensions
  commentId: T:App.Utils.ReflectionExtensions
  parent: App.Utils
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: App.Utils.ReflectionExtensions
- uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils
  commentId: N:App.Utils
  name: App.Utils
  nameWithType: App.Utils
  fullName: App.Utils
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
- uid: App.Data.ServiceInterfaces.ICurrencyService.ConvertToAsync*
  commentId: Overload:App.Data.ServiceInterfaces.ICurrencyService.ConvertToAsync
  name: ConvertToAsync
  nameWithType: ICurrencyService.ConvertToAsync
  fullName: App.Data.ServiceInterfaces.ICurrencyService.ConvertToAsync
- uid: App.Data.Constants.Money
  commentId: T:App.Data.Constants.Money
  parent: App.Data.Constants
  name: Money
  nameWithType: Money
  fullName: App.Data.Constants.Money
- uid: App.Data.Constants.Currency
  commentId: T:App.Data.Constants.Currency
  parent: App.Data.Constants
  name: Currency
  nameWithType: Currency
  fullName: App.Data.Constants.Currency
- uid: System.Threading.Tasks.Task{App.Data.Constants.Money}
  commentId: T:System.Threading.Tasks.Task{App.Data.Constants.Money}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Money>
  nameWithType: Task<Money>
  fullName: System.Threading.Tasks.Task<App.Data.Constants.Money>
  nameWithType.vb: Task(Of Money)
  fullName.vb: System.Threading.Tasks.Task(Of App.Data.Constants.Money)
  name.vb: Task(Of Money)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - uid: App.Data.Constants.Money
    name: Money
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: App.Data.Constants.Money
    name: Money
  - name: )
- uid: App.Data.Constants
  commentId: N:App.Data.Constants
  name: App.Data.Constants
  nameWithType: App.Data.Constants
  fullName: App.Data.Constants
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.Constants
    name: Constants
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.Constants
    name: Constants
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
- uid: App.Data.ServiceInterfaces.ICurrencyService.ApproximateTo*
  commentId: Overload:App.Data.ServiceInterfaces.ICurrencyService.ApproximateTo
  name: ApproximateTo
  nameWithType: ICurrencyService.ApproximateTo
  fullName: App.Data.ServiceInterfaces.ICurrencyService.ApproximateTo
