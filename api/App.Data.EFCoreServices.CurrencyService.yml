### YamlMime:ManagedReference
items:
- uid: App.Data.EFCoreServices.CurrencyService
  commentId: T:App.Data.EFCoreServices.CurrencyService
  id: CurrencyService
  parent: App.Data.EFCoreServices
  children:
  - App.Data.EFCoreServices.CurrencyService.ApproximateTo(App.Data.Constants.Money,App.Data.Constants.Currency)
  - App.Data.EFCoreServices.CurrencyService.ConvertToAsync(App.Data.Constants.Money,App.Data.Constants.Currency)
  langs:
  - csharp
  - vb
  name: CurrencyService
  nameWithType: CurrencyService
  fullName: App.Data.EFCoreServices.CurrencyService
  type: Class
  source:
    remote:
      path: App/Data/EFCoreServices/CurrencyService.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: CurrencyService
    path: ../App/Data/EFCoreServices/CurrencyService.cs
    startLine: 8
  assemblies:
  - App
  namespace: App.Data.EFCoreServices
  summary: "\nEF Core implementation of <xref href=\"App.Data.ServiceInterfaces.ICurrencyService\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class CurrencyService : ICurrencyService'
    content.vb: Public Class CurrencyService Implements ICurrencyService
  inheritance:
  - System.Object
  implements:
  - App.Data.ServiceInterfaces.ICurrencyService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - App.Data.EFCoreServices.CurrencyService.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  - App.Data.EFCoreServices.CurrencyService.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
- uid: App.Data.EFCoreServices.CurrencyService.ApproximateTo(App.Data.Constants.Money,App.Data.Constants.Currency)
  commentId: M:App.Data.EFCoreServices.CurrencyService.ApproximateTo(App.Data.Constants.Money,App.Data.Constants.Currency)
  id: ApproximateTo(App.Data.Constants.Money,App.Data.Constants.Currency)
  parent: App.Data.EFCoreServices.CurrencyService
  langs:
  - csharp
  - vb
  name: ApproximateTo(Money, Currency)
  nameWithType: CurrencyService.ApproximateTo(Money, Currency)
  fullName: App.Data.EFCoreServices.CurrencyService.ApproximateTo(App.Data.Constants.Money, App.Data.Constants.Currency)
  type: Method
  source:
    remote:
      path: App/Data/EFCoreServices/CurrencyService.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: ApproximateTo
    path: ../App/Data/EFCoreServices/CurrencyService.cs
    startLine: 11
  assemblies:
  - App
  namespace: App.Data.EFCoreServices
  summary: "\nConverts money to specified currency approximately based on static currency rates\n"
  example: []
  syntax:
    content: public Money ApproximateTo(Money money, Currency toCurrency)
    parameters:
    - id: money
      type: App.Data.Constants.Money
      description: ''
    - id: toCurrency
      type: App.Data.Constants.Currency
      description: ''
    return:
      type: App.Data.Constants.Money
      description: Approximate converted money
    content.vb: Public Function ApproximateTo(money As Money, toCurrency As Currency) As Money
  overload: App.Data.EFCoreServices.CurrencyService.ApproximateTo*
  implements:
  - App.Data.ServiceInterfaces.ICurrencyService.ApproximateTo(App.Data.Constants.Money,App.Data.Constants.Currency)
- uid: App.Data.EFCoreServices.CurrencyService.ConvertToAsync(App.Data.Constants.Money,App.Data.Constants.Currency)
  commentId: M:App.Data.EFCoreServices.CurrencyService.ConvertToAsync(App.Data.Constants.Money,App.Data.Constants.Currency)
  id: ConvertToAsync(App.Data.Constants.Money,App.Data.Constants.Currency)
  parent: App.Data.EFCoreServices.CurrencyService
  langs:
  - csharp
  - vb
  name: ConvertToAsync(Money, Currency)
  nameWithType: CurrencyService.ConvertToAsync(Money, Currency)
  fullName: App.Data.EFCoreServices.CurrencyService.ConvertToAsync(App.Data.Constants.Money, App.Data.Constants.Currency)
  type: Method
  source:
    remote:
      path: App/Data/EFCoreServices/CurrencyService.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: ConvertToAsync
    path: ../App/Data/EFCoreServices/CurrencyService.cs
    startLine: 27
  assemblies:
  - App
  namespace: App.Data.EFCoreServices
  summary: "\nConverts money to specified currency\n"
  example: []
  syntax:
    content: public Task<Money> ConvertToAsync(Money money, Currency toCurrency)
    parameters:
    - id: money
      type: App.Data.Constants.Money
      description: ''
    - id: toCurrency
      type: App.Data.Constants.Currency
      description: ''
    return:
      type: System.Threading.Tasks.Task{App.Data.Constants.Money}
      description: Money in specified currency
    content.vb: Public Function ConvertToAsync(money As Money, toCurrency As Currency) As Task(Of Money)
  overload: App.Data.EFCoreServices.CurrencyService.ConvertToAsync*
  implements:
  - App.Data.ServiceInterfaces.ICurrencyService.ConvertToAsync(App.Data.Constants.Money,App.Data.Constants.Currency)
references:
- uid: App.Data.ServiceInterfaces.ICurrencyService
  commentId: T:App.Data.ServiceInterfaces.ICurrencyService
  parent: App.Data.ServiceInterfaces
  name: ICurrencyService
  nameWithType: ICurrencyService
  fullName: App.Data.ServiceInterfaces.ICurrencyService
- uid: App.Data.EFCoreServices
  commentId: N:App.Data.EFCoreServices
  name: App.Data.EFCoreServices
  nameWithType: App.Data.EFCoreServices
  fullName: App.Data.EFCoreServices
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.EFCoreServices
    name: EFCoreServices
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.EFCoreServices
    name: EFCoreServices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: App.Data.EFCoreServices.CurrencyService.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  name: GetPropertyExpression<CurrencyService>(CurrencyService, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<CurrencyService>(CurrencyService, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<App.Data.EFCoreServices.CurrencyService>(App.Data.EFCoreServices.CurrencyService, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of CurrencyService)(CurrencyService, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of App.Data.EFCoreServices.CurrencyService)(App.Data.EFCoreServices.CurrencyService, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of CurrencyService)(CurrencyService, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.Data.EFCoreServices.CurrencyService,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - uid: App.Data.EFCoreServices.CurrencyService
    name: CurrencyService
  - name: '>'
  - name: (
  - uid: App.Data.EFCoreServices.CurrencyService
    name: CurrencyService
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.Data.EFCoreServices.CurrencyService,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - uid: App.Data.EFCoreServices.CurrencyService
    name: CurrencyService
  - name: )
  - name: (
  - uid: App.Data.EFCoreServices.CurrencyService
    name: CurrencyService
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Data.EFCoreServices.CurrencyService.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  name: GetSetPropertyEventCallback<CurrencyService>(CurrencyService, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<CurrencyService>(CurrencyService, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<App.Data.EFCoreServices.CurrencyService>(App.Data.EFCoreServices.CurrencyService, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of CurrencyService)(CurrencyService, Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of App.Data.EFCoreServices.CurrencyService)(App.Data.EFCoreServices.CurrencyService, Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of CurrencyService)(CurrencyService, Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.Data.EFCoreServices.CurrencyService,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - uid: App.Data.EFCoreServices.CurrencyService
    name: CurrencyService
  - name: '>'
  - name: (
  - uid: App.Data.EFCoreServices.CurrencyService
    name: CurrencyService
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.Data.EFCoreServices.CurrencyService,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - uid: App.Data.EFCoreServices.CurrencyService
    name: CurrencyService
  - name: )
  - name: (
  - uid: App.Data.EFCoreServices.CurrencyService
    name: CurrencyService
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Data.ServiceInterfaces
  commentId: N:App.Data.ServiceInterfaces
  name: App.Data.ServiceInterfaces
  nameWithType: App.Data.ServiceInterfaces
  fullName: App.Data.ServiceInterfaces
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.ServiceInterfaces
    name: ServiceInterfaces
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.ServiceInterfaces
    name: ServiceInterfaces
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetPropertyExpression<T>(T, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<T>(T, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<T>(T, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of T)(T, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils.ReflectionExtensions
  commentId: T:App.Utils.ReflectionExtensions
  parent: App.Utils
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: App.Utils.ReflectionExtensions
- uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils
  commentId: N:App.Utils
  name: App.Utils
  nameWithType: App.Utils
  fullName: App.Utils
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
- uid: App.Data.EFCoreServices.CurrencyService.ApproximateTo*
  commentId: Overload:App.Data.EFCoreServices.CurrencyService.ApproximateTo
  name: ApproximateTo
  nameWithType: CurrencyService.ApproximateTo
  fullName: App.Data.EFCoreServices.CurrencyService.ApproximateTo
- uid: App.Data.ServiceInterfaces.ICurrencyService.ApproximateTo(App.Data.Constants.Money,App.Data.Constants.Currency)
  commentId: M:App.Data.ServiceInterfaces.ICurrencyService.ApproximateTo(App.Data.Constants.Money,App.Data.Constants.Currency)
  parent: App.Data.ServiceInterfaces.ICurrencyService
  name: ApproximateTo(Money, Currency)
  nameWithType: ICurrencyService.ApproximateTo(Money, Currency)
  fullName: App.Data.ServiceInterfaces.ICurrencyService.ApproximateTo(App.Data.Constants.Money, App.Data.Constants.Currency)
  spec.csharp:
  - uid: App.Data.ServiceInterfaces.ICurrencyService.ApproximateTo(App.Data.Constants.Money,App.Data.Constants.Currency)
    name: ApproximateTo
  - name: (
  - uid: App.Data.Constants.Money
    name: Money
  - name: ','
  - name: " "
  - uid: App.Data.Constants.Currency
    name: Currency
  - name: )
  spec.vb:
  - uid: App.Data.ServiceInterfaces.ICurrencyService.ApproximateTo(App.Data.Constants.Money,App.Data.Constants.Currency)
    name: ApproximateTo
  - name: (
  - uid: App.Data.Constants.Money
    name: Money
  - name: ','
  - name: " "
  - uid: App.Data.Constants.Currency
    name: Currency
  - name: )
- uid: App.Data.Constants.Money
  commentId: T:App.Data.Constants.Money
  parent: App.Data.Constants
  name: Money
  nameWithType: Money
  fullName: App.Data.Constants.Money
- uid: App.Data.Constants.Currency
  commentId: T:App.Data.Constants.Currency
  parent: App.Data.Constants
  name: Currency
  nameWithType: Currency
  fullName: App.Data.Constants.Currency
- uid: App.Data.Constants
  commentId: N:App.Data.Constants
  name: App.Data.Constants
  nameWithType: App.Data.Constants
  fullName: App.Data.Constants
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.Constants
    name: Constants
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.Constants
    name: Constants
- uid: App.Data.EFCoreServices.CurrencyService.ConvertToAsync*
  commentId: Overload:App.Data.EFCoreServices.CurrencyService.ConvertToAsync
  name: ConvertToAsync
  nameWithType: CurrencyService.ConvertToAsync
  fullName: App.Data.EFCoreServices.CurrencyService.ConvertToAsync
- uid: App.Data.ServiceInterfaces.ICurrencyService.ConvertToAsync(App.Data.Constants.Money,App.Data.Constants.Currency)
  commentId: M:App.Data.ServiceInterfaces.ICurrencyService.ConvertToAsync(App.Data.Constants.Money,App.Data.Constants.Currency)
  parent: App.Data.ServiceInterfaces.ICurrencyService
  name: ConvertToAsync(Money, Currency)
  nameWithType: ICurrencyService.ConvertToAsync(Money, Currency)
  fullName: App.Data.ServiceInterfaces.ICurrencyService.ConvertToAsync(App.Data.Constants.Money, App.Data.Constants.Currency)
  spec.csharp:
  - uid: App.Data.ServiceInterfaces.ICurrencyService.ConvertToAsync(App.Data.Constants.Money,App.Data.Constants.Currency)
    name: ConvertToAsync
  - name: (
  - uid: App.Data.Constants.Money
    name: Money
  - name: ','
  - name: " "
  - uid: App.Data.Constants.Currency
    name: Currency
  - name: )
  spec.vb:
  - uid: App.Data.ServiceInterfaces.ICurrencyService.ConvertToAsync(App.Data.Constants.Money,App.Data.Constants.Currency)
    name: ConvertToAsync
  - name: (
  - uid: App.Data.Constants.Money
    name: Money
  - name: ','
  - name: " "
  - uid: App.Data.Constants.Currency
    name: Currency
  - name: )
- uid: System.Threading.Tasks.Task{App.Data.Constants.Money}
  commentId: T:System.Threading.Tasks.Task{App.Data.Constants.Money}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Money>
  nameWithType: Task<Money>
  fullName: System.Threading.Tasks.Task<App.Data.Constants.Money>
  nameWithType.vb: Task(Of Money)
  fullName.vb: System.Threading.Tasks.Task(Of App.Data.Constants.Money)
  name.vb: Task(Of Money)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - uid: App.Data.Constants.Money
    name: Money
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: App.Data.Constants.Money
    name: Money
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
