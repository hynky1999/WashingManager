### YamlMime:ManagedReference
items:
- uid: App.Auth.Utils.Utils
  commentId: T:App.Auth.Utils.Utils
  id: Utils
  parent: App.Auth.Utils
  children:
  - App.Auth.Utils.Utils.CreateWithClaimAsync(Microsoft.AspNetCore.Identity.UserManager{App.Auth.Models.ApplicationUser},App.Auth.Models.ApplicationUser,System.String)
  langs:
  - csharp
  - vb
  name: Utils
  nameWithType: Utils
  fullName: App.Auth.Utils.Utils
  type: Class
  source:
    remote:
      path: App/Auth/Utils/Utils.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: Utils
    path: ../App/Auth/Utils/Utils.cs
    startLine: 9
  assemblies:
  - App
  namespace: App.Auth.Utils
  summary: "\nAuth utils\n"
  example: []
  syntax:
    content: public static class Utils
    content.vb: Public Module Utils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: App.Auth.Utils.Utils.CreateWithClaimAsync(Microsoft.AspNetCore.Identity.UserManager{App.Auth.Models.ApplicationUser},App.Auth.Models.ApplicationUser,System.String)
  commentId: M:App.Auth.Utils.Utils.CreateWithClaimAsync(Microsoft.AspNetCore.Identity.UserManager{App.Auth.Models.ApplicationUser},App.Auth.Models.ApplicationUser,System.String)
  id: CreateWithClaimAsync(Microsoft.AspNetCore.Identity.UserManager{App.Auth.Models.ApplicationUser},App.Auth.Models.ApplicationUser,System.String)
  isExtensionMethod: true
  parent: App.Auth.Utils.Utils
  langs:
  - csharp
  - vb
  name: CreateWithClaimAsync(UserManager<ApplicationUser>, ApplicationUser, string)
  nameWithType: Utils.CreateWithClaimAsync(UserManager<ApplicationUser>, ApplicationUser, string)
  fullName: App.Auth.Utils.Utils.CreateWithClaimAsync(Microsoft.AspNetCore.Identity.UserManager<App.Auth.Models.ApplicationUser>, App.Auth.Models.ApplicationUser, string)
  type: Method
  source:
    remote:
      path: App/Auth/Utils/Utils.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: CreateWithClaimAsync
    path: ../App/Auth/Utils/Utils.cs
    startLine: 19
  assemblies:
  - App
  namespace: App.Auth.Utils
  summary: "\nCreates a user(with password) with userManager and adds claim to it based\non the id it gets from the database\n"
  example: []
  syntax:
    content: public static Task<IdentityResult> CreateWithClaimAsync(this UserManager<ApplicationUser> userManager, ApplicationUser user, string password)
    parameters:
    - id: userManager
      type: Microsoft.AspNetCore.Identity.UserManager{App.Auth.Models.ApplicationUser}
      description: ''
    - id: user
      type: App.Auth.Models.ApplicationUser
      description: ''
    - id: password
      type: System.String
      description: ''
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.IdentityResult}
      description: Result of Identity
    content.vb: Public Shared Function CreateWithClaimAsync(userManager As UserManager(Of ApplicationUser), user As ApplicationUser, password As String) As Task(Of IdentityResult)
  overload: App.Auth.Utils.Utils.CreateWithClaimAsync*
  nameWithType.vb: Utils.CreateWithClaimAsync(UserManager(Of ApplicationUser), ApplicationUser, String)
  fullName.vb: App.Auth.Utils.Utils.CreateWithClaimAsync(Microsoft.AspNetCore.Identity.UserManager(Of App.Auth.Models.ApplicationUser), App.Auth.Models.ApplicationUser, String)
  name.vb: CreateWithClaimAsync(UserManager(Of ApplicationUser), ApplicationUser, String)
references:
- uid: App.Auth.Utils
  commentId: N:App.Auth.Utils
  name: App.Auth.Utils
  nameWithType: App.Auth.Utils
  fullName: App.Auth.Utils
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Auth
    name: Auth
  - name: .
  - uid: App.Auth.Utils
    name: Utils
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Auth
    name: Auth
  - name: .
  - uid: App.Auth.Utils
    name: Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: App.Auth.Utils.Utils.CreateWithClaimAsync*
  commentId: Overload:App.Auth.Utils.Utils.CreateWithClaimAsync
  name: CreateWithClaimAsync
  nameWithType: Utils.CreateWithClaimAsync
  fullName: App.Auth.Utils.Utils.CreateWithClaimAsync
- uid: Microsoft.AspNetCore.Identity.UserManager{App.Auth.Models.ApplicationUser}
  commentId: T:Microsoft.AspNetCore.Identity.UserManager{App.Auth.Models.ApplicationUser}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.UserManager`1
  name: UserManager<ApplicationUser>
  nameWithType: UserManager<ApplicationUser>
  fullName: Microsoft.AspNetCore.Identity.UserManager<App.Auth.Models.ApplicationUser>
  nameWithType.vb: UserManager(Of ApplicationUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of App.Auth.Models.ApplicationUser)
  name.vb: UserManager(Of ApplicationUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
  - name: <
  - uid: App.Auth.Models.ApplicationUser
    name: ApplicationUser
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: App.Auth.Models.ApplicationUser
    name: ApplicationUser
  - name: )
- uid: App.Auth.Models.ApplicationUser
  commentId: T:App.Auth.Models.ApplicationUser
  parent: App.Auth.Models
  name: ApplicationUser
  nameWithType: ApplicationUser
  fullName: App.Auth.Models.ApplicationUser
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.IdentityResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.IdentityResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IdentityResult>
  nameWithType: Task<IdentityResult>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Identity.IdentityResult>
  nameWithType.vb: Task(Of IdentityResult)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Identity.IdentityResult)
  name.vb: Task(Of IdentityResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - uid: Microsoft.AspNetCore.Identity.IdentityResult
    name: IdentityResult
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.AspNetCore.Identity.IdentityResult
    name: IdentityResult
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1
  commentId: T:Microsoft.AspNetCore.Identity.UserManager`1
  isExternal: true
  name: UserManager<TUser>
  nameWithType: UserManager<TUser>
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>
  nameWithType.vb: UserManager(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser)
  name.vb: UserManager(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
  - name: <
  - name: TUser
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TUser
  - name: )
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: true
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore.Identity
    name: Identity
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore.Identity
    name: Identity
    isExternal: true
- uid: App.Auth.Models
  commentId: N:App.Auth.Models
  name: App.Auth.Models
  nameWithType: App.Auth.Models
  fullName: App.Auth.Models
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Auth
    name: Auth
  - name: .
  - uid: App.Auth.Models
    name: Models
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Auth
    name: Auth
  - name: .
  - uid: App.Auth.Models
    name: Models
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
