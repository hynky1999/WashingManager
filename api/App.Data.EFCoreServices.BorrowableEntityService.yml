### YamlMime:ManagedReference
items:
- uid: App.Data.EFCoreServices.BorrowableEntityService
  commentId: T:App.Data.EFCoreServices.BorrowableEntityService
  id: BorrowableEntityService
  parent: App.Data.EFCoreServices
  children:
  - App.Data.EFCoreServices.BorrowableEntityService.#ctor(IDbContextFactory{App.Data.ApplicationDbContext},App.Data.ServiceInterfaces.IReservationsService)
  - App.Data.EFCoreServices.BorrowableEntityService.ChangeStatus(App.Data.Models.BorrowableEntity,App.Data.Utils.Status)
  - App.Data.EFCoreServices.BorrowableEntityService.GetAllBorrowableEntitites``1
  langs:
  - csharp
  - vb
  name: BorrowableEntityService
  nameWithType: BorrowableEntityService
  fullName: App.Data.EFCoreServices.BorrowableEntityService
  type: Class
  source:
    remote:
      path: App/Data/EFCoreServices/BorrowableEntityService.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: BorrowableEntityService
    path: ../App/Data/EFCoreServices/BorrowableEntityService.cs
    startLine: 11
  assemblies:
  - App
  namespace: App.Data.EFCoreServices
  summary: "\nEF Core implementation of <xref href=\"App.Data.ServiceInterfaces.IBorrowableEntityService\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class BorrowableEntityService : IBorrowableEntityService'
    content.vb: Public Class BorrowableEntityService Implements IBorrowableEntityService
  inheritance:
  - System.Object
  implements:
  - App.Data.ServiceInterfaces.IBorrowableEntityService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - App.Data.EFCoreServices.BorrowableEntityService.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  - App.Data.EFCoreServices.BorrowableEntityService.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
- uid: App.Data.EFCoreServices.BorrowableEntityService.#ctor(IDbContextFactory{App.Data.ApplicationDbContext},App.Data.ServiceInterfaces.IReservationsService)
  commentId: M:App.Data.EFCoreServices.BorrowableEntityService.#ctor(IDbContextFactory{App.Data.ApplicationDbContext},App.Data.ServiceInterfaces.IReservationsService)
  id: '#ctor(IDbContextFactory{App.Data.ApplicationDbContext},App.Data.ServiceInterfaces.IReservationsService)'
  parent: App.Data.EFCoreServices.BorrowableEntityService
  langs:
  - csharp
  - vb
  name: BorrowableEntityService(IDbContextFactory<ApplicationDbContext>, IReservationsService)
  nameWithType: BorrowableEntityService.BorrowableEntityService(IDbContextFactory<ApplicationDbContext>, IReservationsService)
  fullName: App.Data.EFCoreServices.BorrowableEntityService.BorrowableEntityService(IDbContextFactory<App.Data.ApplicationDbContext>, App.Data.ServiceInterfaces.IReservationsService)
  type: Constructor
  source:
    remote:
      path: App/Data/EFCoreServices/BorrowableEntityService.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: .ctor
    path: ../App/Data/EFCoreServices/BorrowableEntityService.cs
    startLine: 21
  assemblies:
  - App
  namespace: App.Data.EFCoreServices
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public BorrowableEntityService(IDbContextFactory<ApplicationDbContext> dbFactory, IReservationsService reservationsService)
    parameters:
    - id: dbFactory
      type: IDbContextFactory{App.Data.ApplicationDbContext}
      description: ''
    - id: reservationsService
      type: App.Data.ServiceInterfaces.IReservationsService
      description: ''
    content.vb: Public Sub New(dbFactory As IDbContextFactory(Of ApplicationDbContext), reservationsService As IReservationsService)
  overload: App.Data.EFCoreServices.BorrowableEntityService.#ctor*
  nameWithType.vb: BorrowableEntityService.New(IDbContextFactory(Of ApplicationDbContext), IReservationsService)
  fullName.vb: App.Data.EFCoreServices.BorrowableEntityService.New(IDbContextFactory(Of App.Data.ApplicationDbContext), App.Data.ServiceInterfaces.IReservationsService)
  name.vb: New(IDbContextFactory(Of ApplicationDbContext), IReservationsService)
- uid: App.Data.EFCoreServices.BorrowableEntityService.ChangeStatus(App.Data.Models.BorrowableEntity,App.Data.Utils.Status)
  commentId: M:App.Data.EFCoreServices.BorrowableEntityService.ChangeStatus(App.Data.Models.BorrowableEntity,App.Data.Utils.Status)
  id: ChangeStatus(App.Data.Models.BorrowableEntity,App.Data.Utils.Status)
  parent: App.Data.EFCoreServices.BorrowableEntityService
  langs:
  - csharp
  - vb
  name: ChangeStatus(BorrowableEntity, Status)
  nameWithType: BorrowableEntityService.ChangeStatus(BorrowableEntity, Status)
  fullName: App.Data.EFCoreServices.BorrowableEntityService.ChangeStatus(App.Data.Models.BorrowableEntity, App.Data.Utils.Status)
  type: Method
  source:
    remote:
      path: App/Data/EFCoreServices/BorrowableEntityService.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: ChangeStatus
    path: ../App/Data/EFCoreServices/BorrowableEntityService.cs
    startLine: 30
  assemblies:
  - App
  namespace: App.Data.EFCoreServices
  summary: "\nChange Status property of BE\n"
  example: []
  syntax:
    content: public Task ChangeStatus(BorrowableEntity be, Status status)
    parameters:
    - id: be
      type: App.Data.Models.BorrowableEntity
      description: Borrowable Entitiy
    - id: status
      type: App.Data.Utils.Status
      description: Status
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Function ChangeStatus(be As BorrowableEntity, status As Status) As Task
  overload: App.Data.EFCoreServices.BorrowableEntityService.ChangeStatus*
  implements:
  - App.Data.ServiceInterfaces.IBorrowableEntityService.ChangeStatus(App.Data.Models.BorrowableEntity,App.Data.Utils.Status)
- uid: App.Data.EFCoreServices.BorrowableEntityService.GetAllBorrowableEntitites``1
  commentId: M:App.Data.EFCoreServices.BorrowableEntityService.GetAllBorrowableEntitites``1
  id: GetAllBorrowableEntitites``1
  parent: App.Data.EFCoreServices.BorrowableEntityService
  langs:
  - csharp
  - vb
  name: GetAllBorrowableEntitites<T>()
  nameWithType: BorrowableEntityService.GetAllBorrowableEntitites<T>()
  fullName: App.Data.EFCoreServices.BorrowableEntityService.GetAllBorrowableEntitites<T>()
  type: Method
  source:
    remote:
      path: App/Data/EFCoreServices/BorrowableEntityService.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: GetAllBorrowableEntitites
    path: ../App/Data/EFCoreServices/BorrowableEntityService.cs
    startLine: 46
  assemblies:
  - App
  namespace: App.Data.EFCoreServices
  summary: "\nReturns all BEs of certain type\n"
  example: []
  syntax:
    content: 'public Task<T[]> GetAllBorrowableEntitites<T>() where T : BorrowableEntity'
    typeParameters:
    - id: T
      description: Type or Borrowable entity
    return:
      type: System.Threading.Tasks.Task{{T}[]}
      description: ''
    content.vb: Public Function GetAllBorrowableEntitites(Of T As BorrowableEntity)() As Task(Of T())
  overload: App.Data.EFCoreServices.BorrowableEntityService.GetAllBorrowableEntitites*
  implements:
  - App.Data.ServiceInterfaces.IBorrowableEntityService.GetAllBorrowableEntitites``1
  nameWithType.vb: BorrowableEntityService.GetAllBorrowableEntitites(Of T)()
  fullName.vb: App.Data.EFCoreServices.BorrowableEntityService.GetAllBorrowableEntitites(Of T)()
  name.vb: GetAllBorrowableEntitites(Of T)()
references:
- uid: App.Data.ServiceInterfaces.IBorrowableEntityService
  commentId: T:App.Data.ServiceInterfaces.IBorrowableEntityService
  parent: App.Data.ServiceInterfaces
  name: IBorrowableEntityService
  nameWithType: IBorrowableEntityService
  fullName: App.Data.ServiceInterfaces.IBorrowableEntityService
- uid: App.Data.EFCoreServices
  commentId: N:App.Data.EFCoreServices
  name: App.Data.EFCoreServices
  nameWithType: App.Data.EFCoreServices
  fullName: App.Data.EFCoreServices
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.EFCoreServices
    name: EFCoreServices
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.EFCoreServices
    name: EFCoreServices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: App.Data.EFCoreServices.BorrowableEntityService.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  name: GetPropertyExpression<BorrowableEntityService>(BorrowableEntityService, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<BorrowableEntityService>(BorrowableEntityService, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<App.Data.EFCoreServices.BorrowableEntityService>(App.Data.EFCoreServices.BorrowableEntityService, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of BorrowableEntityService)(BorrowableEntityService, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of App.Data.EFCoreServices.BorrowableEntityService)(App.Data.EFCoreServices.BorrowableEntityService, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of BorrowableEntityService)(BorrowableEntityService, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.Data.EFCoreServices.BorrowableEntityService,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - uid: App.Data.EFCoreServices.BorrowableEntityService
    name: BorrowableEntityService
  - name: '>'
  - name: (
  - uid: App.Data.EFCoreServices.BorrowableEntityService
    name: BorrowableEntityService
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.Data.EFCoreServices.BorrowableEntityService,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - uid: App.Data.EFCoreServices.BorrowableEntityService
    name: BorrowableEntityService
  - name: )
  - name: (
  - uid: App.Data.EFCoreServices.BorrowableEntityService
    name: BorrowableEntityService
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Data.EFCoreServices.BorrowableEntityService.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  name: GetSetPropertyEventCallback<BorrowableEntityService>(BorrowableEntityService, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<BorrowableEntityService>(BorrowableEntityService, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<App.Data.EFCoreServices.BorrowableEntityService>(App.Data.EFCoreServices.BorrowableEntityService, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of BorrowableEntityService)(BorrowableEntityService, Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of App.Data.EFCoreServices.BorrowableEntityService)(App.Data.EFCoreServices.BorrowableEntityService, Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of BorrowableEntityService)(BorrowableEntityService, Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.Data.EFCoreServices.BorrowableEntityService,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - uid: App.Data.EFCoreServices.BorrowableEntityService
    name: BorrowableEntityService
  - name: '>'
  - name: (
  - uid: App.Data.EFCoreServices.BorrowableEntityService
    name: BorrowableEntityService
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.Data.EFCoreServices.BorrowableEntityService,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - uid: App.Data.EFCoreServices.BorrowableEntityService
    name: BorrowableEntityService
  - name: )
  - name: (
  - uid: App.Data.EFCoreServices.BorrowableEntityService
    name: BorrowableEntityService
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Data.ServiceInterfaces
  commentId: N:App.Data.ServiceInterfaces
  name: App.Data.ServiceInterfaces
  nameWithType: App.Data.ServiceInterfaces
  fullName: App.Data.ServiceInterfaces
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.ServiceInterfaces
    name: ServiceInterfaces
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.ServiceInterfaces
    name: ServiceInterfaces
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetPropertyExpression<T>(T, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<T>(T, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<T>(T, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of T)(T, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils.ReflectionExtensions
  commentId: T:App.Utils.ReflectionExtensions
  parent: App.Utils
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: App.Utils.ReflectionExtensions
- uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils
  commentId: N:App.Utils
  name: App.Utils
  nameWithType: App.Utils
  fullName: App.Utils
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
- uid: App.Data.EFCoreServices.BorrowableEntityService.#ctor*
  commentId: Overload:App.Data.EFCoreServices.BorrowableEntityService.#ctor
  name: BorrowableEntityService
  nameWithType: BorrowableEntityService.BorrowableEntityService
  fullName: App.Data.EFCoreServices.BorrowableEntityService.BorrowableEntityService
  nameWithType.vb: BorrowableEntityService.New
  fullName.vb: App.Data.EFCoreServices.BorrowableEntityService.New
  name.vb: New
- uid: IDbContextFactory{App.Data.ApplicationDbContext}
  commentId: '!:IDbContextFactory{App.Data.ApplicationDbContext}'
  definition: IDbContextFactory`1
  name: IDbContextFactory<ApplicationDbContext>
  nameWithType: IDbContextFactory<ApplicationDbContext>
  fullName: IDbContextFactory<App.Data.ApplicationDbContext>
  nameWithType.vb: IDbContextFactory(Of ApplicationDbContext)
  fullName.vb: IDbContextFactory(Of App.Data.ApplicationDbContext)
  name.vb: IDbContextFactory(Of ApplicationDbContext)
  spec.csharp:
  - uid: IDbContextFactory`1
    name: IDbContextFactory
    isExternal: true
  - name: <
  - uid: App.Data.ApplicationDbContext
    name: ApplicationDbContext
  - name: '>'
  spec.vb:
  - uid: IDbContextFactory`1
    name: IDbContextFactory
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: App.Data.ApplicationDbContext
    name: ApplicationDbContext
  - name: )
- uid: App.Data.ServiceInterfaces.IReservationsService
  commentId: T:App.Data.ServiceInterfaces.IReservationsService
  parent: App.Data.ServiceInterfaces
  name: IReservationsService
  nameWithType: IReservationsService
  fullName: App.Data.ServiceInterfaces.IReservationsService
- uid: IDbContextFactory`1
  isExternal: true
  name: IDbContextFactory<>
  nameWithType: IDbContextFactory<>
  fullName: IDbContextFactory<>
  nameWithType.vb: IDbContextFactory(Of )
  fullName.vb: IDbContextFactory(Of )
  name.vb: IDbContextFactory(Of )
  spec.csharp:
  - uid: IDbContextFactory`1
    name: IDbContextFactory
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: IDbContextFactory`1
    name: IDbContextFactory
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: App.Data.EFCoreServices.BorrowableEntityService.ChangeStatus*
  commentId: Overload:App.Data.EFCoreServices.BorrowableEntityService.ChangeStatus
  name: ChangeStatus
  nameWithType: BorrowableEntityService.ChangeStatus
  fullName: App.Data.EFCoreServices.BorrowableEntityService.ChangeStatus
- uid: App.Data.ServiceInterfaces.IBorrowableEntityService.ChangeStatus(App.Data.Models.BorrowableEntity,App.Data.Utils.Status)
  commentId: M:App.Data.ServiceInterfaces.IBorrowableEntityService.ChangeStatus(App.Data.Models.BorrowableEntity,App.Data.Utils.Status)
  parent: App.Data.ServiceInterfaces.IBorrowableEntityService
  name: ChangeStatus(BorrowableEntity, Status)
  nameWithType: IBorrowableEntityService.ChangeStatus(BorrowableEntity, Status)
  fullName: App.Data.ServiceInterfaces.IBorrowableEntityService.ChangeStatus(App.Data.Models.BorrowableEntity, App.Data.Utils.Status)
  spec.csharp:
  - uid: App.Data.ServiceInterfaces.IBorrowableEntityService.ChangeStatus(App.Data.Models.BorrowableEntity,App.Data.Utils.Status)
    name: ChangeStatus
  - name: (
  - uid: App.Data.Models.BorrowableEntity
    name: BorrowableEntity
  - name: ','
  - name: " "
  - uid: App.Data.Utils.Status
    name: Status
  - name: )
  spec.vb:
  - uid: App.Data.ServiceInterfaces.IBorrowableEntityService.ChangeStatus(App.Data.Models.BorrowableEntity,App.Data.Utils.Status)
    name: ChangeStatus
  - name: (
  - uid: App.Data.Models.BorrowableEntity
    name: BorrowableEntity
  - name: ','
  - name: " "
  - uid: App.Data.Utils.Status
    name: Status
  - name: )
- uid: App.Data.Models.BorrowableEntity
  commentId: T:App.Data.Models.BorrowableEntity
  parent: App.Data.Models
  name: BorrowableEntity
  nameWithType: BorrowableEntity
  fullName: App.Data.Models.BorrowableEntity
- uid: App.Data.Utils.Status
  commentId: T:App.Data.Utils.Status
  parent: App.Data.Utils
  name: Status
  nameWithType: Status
  fullName: App.Data.Utils.Status
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: App.Data.Models
  commentId: N:App.Data.Models
  name: App.Data.Models
  nameWithType: App.Data.Models
  fullName: App.Data.Models
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.Models
    name: Models
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.Models
    name: Models
- uid: App.Data.Utils
  commentId: N:App.Data.Utils
  name: App.Data.Utils
  nameWithType: App.Data.Utils
  fullName: App.Data.Utils
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.Utils
    name: Utils
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.Utils
    name: Utils
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
- uid: App.Data.EFCoreServices.BorrowableEntityService.GetAllBorrowableEntitites*
  commentId: Overload:App.Data.EFCoreServices.BorrowableEntityService.GetAllBorrowableEntitites
  name: GetAllBorrowableEntitites
  nameWithType: BorrowableEntityService.GetAllBorrowableEntitites
  fullName: App.Data.EFCoreServices.BorrowableEntityService.GetAllBorrowableEntitites
- uid: App.Data.ServiceInterfaces.IBorrowableEntityService.GetAllBorrowableEntitites``1
  commentId: M:App.Data.ServiceInterfaces.IBorrowableEntityService.GetAllBorrowableEntitites``1
  parent: App.Data.ServiceInterfaces.IBorrowableEntityService
  name: GetAllBorrowableEntitites<T>()
  nameWithType: IBorrowableEntityService.GetAllBorrowableEntitites<T>()
  fullName: App.Data.ServiceInterfaces.IBorrowableEntityService.GetAllBorrowableEntitites<T>()
  nameWithType.vb: IBorrowableEntityService.GetAllBorrowableEntitites(Of T)()
  fullName.vb: App.Data.ServiceInterfaces.IBorrowableEntityService.GetAllBorrowableEntitites(Of T)()
  name.vb: GetAllBorrowableEntitites(Of T)()
  spec.csharp:
  - uid: App.Data.ServiceInterfaces.IBorrowableEntityService.GetAllBorrowableEntitites``1
    name: GetAllBorrowableEntitites
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: App.Data.ServiceInterfaces.IBorrowableEntityService.GetAllBorrowableEntitites``1
    name: GetAllBorrowableEntitites
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{{T}[]}
  commentId: T:System.Threading.Tasks.Task{``0[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T[]>
  nameWithType: Task<T[]>
  fullName: System.Threading.Tasks.Task<T[]>
  nameWithType.vb: Task(Of T())
  fullName.vb: System.Threading.Tasks.Task(Of T())
  name.vb: Task(Of T())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - name: T
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: (
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
