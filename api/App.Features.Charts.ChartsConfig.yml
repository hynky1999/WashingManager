### YamlMime:ManagedReference
items:
- uid: App.Features.Charts.ChartsConfig
  commentId: T:App.Features.Charts.ChartsConfig
  id: ChartsConfig
  parent: App.Features.Charts
  children:
  - App.Features.Charts.ChartsConfig.AllowedChartModels
  - App.Features.Charts.ChartsConfig.GetChartsConfig(System.Type,App.Data.ServiceInterfaces.ILocalizationService)
  langs:
  - csharp
  - vb
  name: ChartsConfig
  nameWithType: ChartsConfig
  fullName: App.Features.Charts.ChartsConfig
  type: Class
  source:
    remote:
      path: App/Features/Charts/ChartsConfig.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: ChartsConfig
    path: ../App/Features/Charts/ChartsConfig.cs
    startLine: 10
  assemblies:
  - App
  namespace: App.Features.Charts
  summary: "\nClass Defines what models we allow to be used in the charts.\nIt also defines what chart we will create for each model.\n"
  example: []
  syntax:
    content: public static class ChartsConfig
    content.vb: Public Module ChartsConfig
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: App.Features.Charts.ChartsConfig.AllowedChartModels
  commentId: F:App.Features.Charts.ChartsConfig.AllowedChartModels
  id: AllowedChartModels
  parent: App.Features.Charts.ChartsConfig
  langs:
  - csharp
  - vb
  name: AllowedChartModels
  nameWithType: ChartsConfig.AllowedChartModels
  fullName: App.Features.Charts.ChartsConfig.AllowedChartModels
  type: Field
  source:
    remote:
      path: App/Features/Charts/ChartsConfig.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: AllowedChartModels
    path: ../App/Features/Charts/ChartsConfig.cs
    startLine: 15
  assemblies:
  - App
  namespace: App.Features.Charts
  summary: "\nAllowed models for charting\n"
  example: []
  syntax:
    content: public static readonly Type[] AllowedChartModels
    return:
      type: System.Type[]
    content.vb: Public Shared ReadOnly AllowedChartModels As Type()
- uid: App.Features.Charts.ChartsConfig.GetChartsConfig(System.Type,App.Data.ServiceInterfaces.ILocalizationService)
  commentId: M:App.Features.Charts.ChartsConfig.GetChartsConfig(System.Type,App.Data.ServiceInterfaces.ILocalizationService)
  id: GetChartsConfig(System.Type,App.Data.ServiceInterfaces.ILocalizationService)
  parent: App.Features.Charts.ChartsConfig
  langs:
  - csharp
  - vb
  name: GetChartsConfig(Type, ILocalizationService)
  nameWithType: ChartsConfig.GetChartsConfig(Type, ILocalizationService)
  fullName: App.Features.Charts.ChartsConfig.GetChartsConfig(System.Type, App.Data.ServiceInterfaces.ILocalizationService)
  type: Method
  source:
    remote:
      path: App/Features/Charts/ChartsConfig.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: GetChartsConfig
    path: ../App/Features/Charts/ChartsConfig.cs
    startLine: 26
  assemblies:
  - App
  namespace: App.Features.Charts
  summary: "\nDefines chart type\n"
  example: []
  syntax:
    content: public static (string name, Type type, Dictionary<string, object> args)[] GetChartsConfig(Type entityType, ILocalizationService loc)
    parameters:
    - id: entityType
      type: System.Type
      description: ''
    - id: loc
      type: App.Data.ServiceInterfaces.ILocalizationService
      description: ''
    return:
      type: System.ValueTuple{System.String,System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}}[]
      description: "\nName of chart, type of chart and params to call init type with\n"
    content.vb: Public Shared Function GetChartsConfig(entityType As Type, loc As ILocalizationService) As (name As String, type As Type, args As Dictionary(Of String, Object))()
  overload: App.Features.Charts.ChartsConfig.GetChartsConfig*
references:
- uid: App.Features.Charts
  commentId: N:App.Features.Charts
  name: App.Features.Charts
  nameWithType: App.Features.Charts
  fullName: App.Features.Charts
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Features
    name: Features
  - name: .
  - uid: App.Features.Charts
    name: Charts
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Features
    name: Features
  - name: .
  - uid: App.Features.Charts
    name: Charts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Type[]
  isExternal: true
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullName.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Type
    name: Type
    isExternal: true
  - name: (
  - name: )
- uid: App.Features.Charts.ChartsConfig.GetChartsConfig*
  commentId: Overload:App.Features.Charts.ChartsConfig.GetChartsConfig
  name: GetChartsConfig
  nameWithType: ChartsConfig.GetChartsConfig
  fullName: App.Features.Charts.ChartsConfig.GetChartsConfig
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: App.Data.ServiceInterfaces.ILocalizationService
  commentId: T:App.Data.ServiceInterfaces.ILocalizationService
  parent: App.Data.ServiceInterfaces
  name: ILocalizationService
  nameWithType: ILocalizationService
  fullName: App.Data.ServiceInterfaces.ILocalizationService
- uid: System.ValueTuple{System.String,System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}}[]
  isExternal: true
  name: (string name, Type type, Dictionary<string, object> args)[]
  nameWithType: (string name, Type type, Dictionary<string, object> args)[]
  fullName: (string name, System.Type type, System.Collections.Generic.Dictionary<string, object> args)[]
  nameWithType.vb: (name As String, type As Type, args As Dictionary(Of String, Object))()
  fullName.vb: (name As String, type As System.Type, args As System.Collections.Generic.Dictionary(Of String, Object))()
  name.vb: (name As String, type As Type, args As Dictionary(Of String, Object))()
  spec.csharp:
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{System.String,System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}}.name
    name: name
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{System.String,System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}}.type
    name: type
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.String,System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}}.args
    name: args
  - name: )
  - name: '['
  - name: ']'
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.String,System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}}.name
    name: name
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}}.type
    name: type
  - name: " "
  - name: As
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}}.args
    name: args
  - name: " "
  - name: As
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
  - name: )
  - name: (
  - name: )
- uid: App.Data.ServiceInterfaces
  commentId: N:App.Data.ServiceInterfaces
  name: App.Data.ServiceInterfaces
  nameWithType: App.Data.ServiceInterfaces
  fullName: App.Data.ServiceInterfaces
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.ServiceInterfaces
    name: ServiceInterfaces
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Data
    name: Data
  - name: .
  - uid: App.Data.ServiceInterfaces
    name: ServiceInterfaces
