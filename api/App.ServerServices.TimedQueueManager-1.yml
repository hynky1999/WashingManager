### YamlMime:ManagedReference
items:
- uid: App.ServerServices.TimedQueueManager`1
  commentId: T:App.ServerServices.TimedQueueManager`1
  id: TimedQueueManager`1
  parent: App.ServerServices
  children:
  - App.ServerServices.TimedQueueManager`1.#ctor(System.Func{System.Int32,App.ServerServices.ITimedQueue{`0}})
  - App.ServerServices.TimedQueueManager`1.Count
  - App.ServerServices.TimedQueueManager`1.CreateQueue(System.Int32)
  - App.ServerServices.TimedQueueManager`1.Dispose
  - App.ServerServices.TimedQueueManager`1.GetQueue(System.Int32)
  - App.ServerServices.TimedQueueManager`1.RemoveQueue(System.Int32)
  langs:
  - csharp
  - vb
  name: TimedQueueManager<TItem>
  nameWithType: TimedQueueManager<TItem>
  fullName: App.ServerServices.TimedQueueManager<TItem>
  type: Class
  source:
    remote:
      path: App/ServerServices/TimedQueueManager.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: TimedQueueManager
    path: ../App/ServerServices/TimedQueueManager.cs
    startLine: 5
  assemblies:
  - App
  namespace: App.ServerServices
  summary: "\nA class which manages multiple ITimedQueue instances\nIt enables to create, get and remove queues\n"
  example: []
  syntax:
    content: 'public class TimedQueueManager<TItem> : ITimedQueueManager<TItem>, IDisposable'
    typeParameters:
    - id: TItem
      description: ''
    content.vb: Public Class TimedQueueManager(Of TItem) Implements ITimedQueueManager(Of TItem), IDisposable
  inheritance:
  - System.Object
  implements:
  - App.ServerServices.ITimedQueueManager{{TItem}}
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - App.ServerServices.TimedQueueManager`1.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  - App.ServerServices.TimedQueueManager`1.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
  nameWithType.vb: TimedQueueManager(Of TItem)
  fullName.vb: App.ServerServices.TimedQueueManager(Of TItem)
  name.vb: TimedQueueManager(Of TItem)
- uid: App.ServerServices.TimedQueueManager`1.#ctor(System.Func{System.Int32,App.ServerServices.ITimedQueue{`0}})
  commentId: M:App.ServerServices.TimedQueueManager`1.#ctor(System.Func{System.Int32,App.ServerServices.ITimedQueue{`0}})
  id: '#ctor(System.Func{System.Int32,App.ServerServices.ITimedQueue{`0}})'
  parent: App.ServerServices.TimedQueueManager`1
  langs:
  - csharp
  - vb
  name: TimedQueueManager(Func<int, ITimedQueue<TItem>>)
  nameWithType: TimedQueueManager<TItem>.TimedQueueManager(Func<int, ITimedQueue<TItem>>)
  fullName: App.ServerServices.TimedQueueManager<TItem>.TimedQueueManager(System.Func<int, App.ServerServices.ITimedQueue<TItem>>)
  type: Constructor
  source:
    remote:
      path: App/ServerServices/TimedQueueManager.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: .ctor
    path: ../App/ServerServices/TimedQueueManager.cs
    startLine: 14
  assemblies:
  - App
  namespace: App.ServerServices
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public TimedQueueManager(Func<int, ITimedQueue<TItem>> factory)
    parameters:
    - id: factory
      type: System.Func{System.Int32,App.ServerServices.ITimedQueue{{TItem}}}
      description: ''
    content.vb: Public Sub New(factory As Func(Of Integer, ITimedQueue(Of TItem)))
  overload: App.ServerServices.TimedQueueManager`1.#ctor*
  nameWithType.vb: TimedQueueManager(Of TItem).New(Func(Of Integer, ITimedQueue(Of TItem)))
  fullName.vb: App.ServerServices.TimedQueueManager(Of TItem).New(System.Func(Of Integer, App.ServerServices.ITimedQueue(Of TItem)))
  name.vb: New(Func(Of Integer, ITimedQueue(Of TItem)))
- uid: App.ServerServices.TimedQueueManager`1.CreateQueue(System.Int32)
  commentId: M:App.ServerServices.TimedQueueManager`1.CreateQueue(System.Int32)
  id: CreateQueue(System.Int32)
  parent: App.ServerServices.TimedQueueManager`1
  langs:
  - csharp
  - vb
  name: CreateQueue(int)
  nameWithType: TimedQueueManager<TItem>.CreateQueue(int)
  fullName: App.ServerServices.TimedQueueManager<TItem>.CreateQueue(int)
  type: Method
  source:
    remote:
      path: App/ServerServices/TimedQueueManager.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: CreateQueue
    path: ../App/ServerServices/TimedQueueManager.cs
    startLine: 22
  assemblies:
  - App
  namespace: App.ServerServices
  summary: "\nCreates a new queue\n"
  example: []
  syntax:
    content: public ITimedQueue<TItem> CreateQueue(int id)
    parameters:
    - id: id
      type: System.Int32
      description: ''
    return:
      type: App.ServerServices.ITimedQueue{{TItem}}
      description: ''
    content.vb: Public Function CreateQueue(id As Integer) As ITimedQueue(Of TItem)
  overload: App.ServerServices.TimedQueueManager`1.CreateQueue*
  implements:
  - App.ServerServices.ITimedQueueManager{{TItem}}.CreateQueue(System.Int32)
  nameWithType.vb: TimedQueueManager(Of TItem).CreateQueue(Integer)
  fullName.vb: App.ServerServices.TimedQueueManager(Of TItem).CreateQueue(Integer)
  name.vb: CreateQueue(Integer)
- uid: App.ServerServices.TimedQueueManager`1.GetQueue(System.Int32)
  commentId: M:App.ServerServices.TimedQueueManager`1.GetQueue(System.Int32)
  id: GetQueue(System.Int32)
  parent: App.ServerServices.TimedQueueManager`1
  langs:
  - csharp
  - vb
  name: GetQueue(int)
  nameWithType: TimedQueueManager<TItem>.GetQueue(int)
  fullName: App.ServerServices.TimedQueueManager<TItem>.GetQueue(int)
  type: Method
  source:
    remote:
      path: App/ServerServices/TimedQueueManager.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: GetQueue
    path: ../App/ServerServices/TimedQueueManager.cs
    startLine: 30
  assemblies:
  - App
  namespace: App.ServerServices
  summary: "\nReturns a queue with given id\n"
  example: []
  syntax:
    content: public ITimedQueue<TItem>? GetQueue(int id)
    parameters:
    - id: id
      type: System.Int32
      description: ''
    return:
      type: App.ServerServices.ITimedQueue{{TItem}}
      description: ''
    content.vb: Public Function GetQueue(id As Integer) As ITimedQueue(Of TItem)
  overload: App.ServerServices.TimedQueueManager`1.GetQueue*
  implements:
  - App.ServerServices.ITimedQueueManager{{TItem}}.GetQueue(System.Int32)
  nameWithType.vb: TimedQueueManager(Of TItem).GetQueue(Integer)
  fullName.vb: App.ServerServices.TimedQueueManager(Of TItem).GetQueue(Integer)
  name.vb: GetQueue(Integer)
- uid: App.ServerServices.TimedQueueManager`1.RemoveQueue(System.Int32)
  commentId: M:App.ServerServices.TimedQueueManager`1.RemoveQueue(System.Int32)
  id: RemoveQueue(System.Int32)
  parent: App.ServerServices.TimedQueueManager`1
  langs:
  - csharp
  - vb
  name: RemoveQueue(int)
  nameWithType: TimedQueueManager<TItem>.RemoveQueue(int)
  fullName: App.ServerServices.TimedQueueManager<TItem>.RemoveQueue(int)
  type: Method
  source:
    remote:
      path: App/ServerServices/TimedQueueManager.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: RemoveQueue
    path: ../App/ServerServices/TimedQueueManager.cs
    startLine: 36
  assemblies:
  - App
  namespace: App.ServerServices
  summary: "\nRemoves a queue with given id\n"
  example: []
  syntax:
    content: public void RemoveQueue(int id)
    parameters:
    - id: id
      type: System.Int32
      description: ''
    content.vb: Public Sub RemoveQueue(id As Integer)
  overload: App.ServerServices.TimedQueueManager`1.RemoveQueue*
  implements:
  - App.ServerServices.ITimedQueueManager{{TItem}}.RemoveQueue(System.Int32)
  nameWithType.vb: TimedQueueManager(Of TItem).RemoveQueue(Integer)
  fullName.vb: App.ServerServices.TimedQueueManager(Of TItem).RemoveQueue(Integer)
  name.vb: RemoveQueue(Integer)
- uid: App.ServerServices.TimedQueueManager`1.Count
  commentId: P:App.ServerServices.TimedQueueManager`1.Count
  id: Count
  parent: App.ServerServices.TimedQueueManager`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: TimedQueueManager<TItem>.Count
  fullName: App.ServerServices.TimedQueueManager<TItem>.Count
  type: Property
  source:
    remote:
      path: App/ServerServices/TimedQueueManager.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: Count
    path: ../App/ServerServices/TimedQueueManager.cs
    startLine: 43
  assemblies:
  - App
  namespace: App.ServerServices
  summary: "\nReturns number of queues\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: App.ServerServices.TimedQueueManager`1.Count*
  implements:
  - App.ServerServices.ITimedQueueManager{{TItem}}.Count
  nameWithType.vb: TimedQueueManager(Of TItem).Count
  fullName.vb: App.ServerServices.TimedQueueManager(Of TItem).Count
- uid: App.ServerServices.TimedQueueManager`1.Dispose
  commentId: M:App.ServerServices.TimedQueueManager`1.Dispose
  id: Dispose
  parent: App.ServerServices.TimedQueueManager`1
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TimedQueueManager<TItem>.Dispose()
  fullName: App.ServerServices.TimedQueueManager<TItem>.Dispose()
  type: Method
  source:
    remote:
      path: App/ServerServices/TimedQueueManager.cs
      branch: main
      repo: https://github.com/hynky1999/WashingManager
    id: Dispose
    path: ../App/ServerServices/TimedQueueManager.cs
    startLine: 46
  assemblies:
  - App
  namespace: App.ServerServices
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: App.ServerServices.TimedQueueManager`1.Dispose*
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: TimedQueueManager(Of TItem).Dispose()
  fullName.vb: App.ServerServices.TimedQueueManager(Of TItem).Dispose()
references:
- uid: App.ServerServices
  commentId: N:App.ServerServices
  name: App.ServerServices
  nameWithType: App.ServerServices
  fullName: App.ServerServices
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.ServerServices
    name: ServerServices
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.ServerServices
    name: ServerServices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: App.ServerServices.ITimedQueueManager{{TItem}}
  commentId: T:App.ServerServices.ITimedQueueManager{`0}
  parent: App.ServerServices
  definition: App.ServerServices.ITimedQueueManager`1
  name: ITimedQueueManager<TItem>
  nameWithType: ITimedQueueManager<TItem>
  fullName: App.ServerServices.ITimedQueueManager<TItem>
  nameWithType.vb: ITimedQueueManager(Of TItem)
  fullName.vb: App.ServerServices.ITimedQueueManager(Of TItem)
  name.vb: ITimedQueueManager(Of TItem)
  spec.csharp:
  - uid: App.ServerServices.ITimedQueueManager`1
    name: ITimedQueueManager
  - name: <
  - name: TItem
  - name: '>'
  spec.vb:
  - uid: App.ServerServices.ITimedQueueManager`1
    name: ITimedQueueManager
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: App.ServerServices.TimedQueueManager`1.App.Utils.ReflectionExtensions.GetPropertyExpression``1(System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  name: GetPropertyExpression<TimedQueueManager<TItem>>(TimedQueueManager<TItem>, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<TimedQueueManager<TItem>>(TimedQueueManager<TItem>, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<App.ServerServices.TimedQueueManager<TItem>>(App.ServerServices.TimedQueueManager<TItem>, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of TimedQueueManager(Of TItem))(TimedQueueManager(Of TItem), PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of App.ServerServices.TimedQueueManager(Of TItem))(App.ServerServices.TimedQueueManager(Of TItem), System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of TimedQueueManager(Of TItem))(TimedQueueManager(Of TItem), PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.ServerServices.TimedQueueManager{`0},System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - uid: App.ServerServices.TimedQueueManager`1
    name: TimedQueueManager
  - name: <
  - name: TItem
  - name: '>'
  - name: '>'
  - name: (
  - uid: App.ServerServices.TimedQueueManager`1
    name: TimedQueueManager
  - name: <
  - name: TItem
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(App.ServerServices.TimedQueueManager{`0},System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - uid: App.ServerServices.TimedQueueManager`1
    name: TimedQueueManager
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: )
  - name: (
  - uid: App.ServerServices.TimedQueueManager`1
    name: TimedQueueManager
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.ServerServices.TimedQueueManager`1.App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  parent: App.Utils.ReflectionExtensions
  definition: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  name: GetSetPropertyEventCallback<TimedQueueManager<TItem>>(TimedQueueManager<TItem>, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<TimedQueueManager<TItem>>(TimedQueueManager<TItem>, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<App.ServerServices.TimedQueueManager<TItem>>(App.ServerServices.TimedQueueManager<TItem>, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of TimedQueueManager(Of TItem))(TimedQueueManager(Of TItem), Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of App.ServerServices.TimedQueueManager(Of TItem))(App.ServerServices.TimedQueueManager(Of TItem), Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of TimedQueueManager(Of TItem))(TimedQueueManager(Of TItem), Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.ServerServices.TimedQueueManager{`0},System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - uid: App.ServerServices.TimedQueueManager`1
    name: TimedQueueManager
  - name: <
  - name: TItem
  - name: '>'
  - name: '>'
  - name: (
  - uid: App.ServerServices.TimedQueueManager`1
    name: TimedQueueManager
  - name: <
  - name: TItem
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(App.ServerServices.TimedQueueManager{`0},System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - uid: App.ServerServices.TimedQueueManager`1
    name: TimedQueueManager
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: )
  - name: (
  - uid: App.ServerServices.TimedQueueManager`1
    name: TimedQueueManager
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: App.ServerServices.ITimedQueueManager`1
  commentId: T:App.ServerServices.ITimedQueueManager`1
  name: ITimedQueueManager<TItem>
  nameWithType: ITimedQueueManager<TItem>
  fullName: App.ServerServices.ITimedQueueManager<TItem>
  nameWithType.vb: ITimedQueueManager(Of TItem)
  fullName.vb: App.ServerServices.ITimedQueueManager(Of TItem)
  name.vb: ITimedQueueManager(Of TItem)
  spec.csharp:
  - uid: App.ServerServices.ITimedQueueManager`1
    name: ITimedQueueManager
  - name: <
  - name: TItem
  - name: '>'
  spec.vb:
  - uid: App.ServerServices.ITimedQueueManager`1
    name: ITimedQueueManager
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
- uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetPropertyExpression<T>(T, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetPropertyExpression<T>(T, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetPropertyExpression<T>(T, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetPropertyExpression(Of T)(T, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetPropertyExpression(Of T)(T, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetPropertyExpression``1(``0,System.Reflection.PropertyInfo,System.Type)
    name: GetPropertyExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils.ReflectionExtensions
  commentId: T:App.Utils.ReflectionExtensions
  parent: App.Utils
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: App.Utils.ReflectionExtensions
- uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  commentId: M:App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
  isExternal: true
  name: GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  nameWithType: ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, PropertyInfo, Type)
  fullName: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback<T>(T, object, System.Reflection.PropertyInfo, System.Type)
  nameWithType.vb: ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  fullName.vb: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback(Of T)(T, Object, System.Reflection.PropertyInfo, System.Type)
  name.vb: GetSetPropertyEventCallback(Of T)(T, Object, PropertyInfo, Type)
  spec.csharp:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.Utils.ReflectionExtensions.GetSetPropertyEventCallback``1(``0,System.Object,System.Reflection.PropertyInfo,System.Type)
    name: GetSetPropertyEventCallback
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: App.Utils
  commentId: N:App.Utils
  name: App.Utils
  nameWithType: App.Utils
  fullName: App.Utils
  spec.csharp:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
  spec.vb:
  - uid: App
    name: App
  - name: .
  - uid: App.Utils
    name: Utils
- uid: App.ServerServices.TimedQueueManager`1.#ctor*
  commentId: Overload:App.ServerServices.TimedQueueManager`1.#ctor
  name: TimedQueueManager
  nameWithType: TimedQueueManager<TItem>.TimedQueueManager
  fullName: App.ServerServices.TimedQueueManager<TItem>.TimedQueueManager
  nameWithType.vb: TimedQueueManager(Of TItem).New
  fullName.vb: App.ServerServices.TimedQueueManager(Of TItem).New
  name.vb: New
- uid: System.Func{System.Int32,App.ServerServices.ITimedQueue{{TItem}}}
  commentId: T:System.Func{System.Int32,App.ServerServices.ITimedQueue{`0}}
  parent: System
  definition: System.Func`2
  name: Func<int, ITimedQueue<TItem>>
  nameWithType: Func<int, ITimedQueue<TItem>>
  fullName: System.Func<int, App.ServerServices.ITimedQueue<TItem>>
  nameWithType.vb: Func(Of Integer, ITimedQueue(Of TItem))
  fullName.vb: System.Func(Of Integer, App.ServerServices.ITimedQueue(Of TItem))
  name.vb: Func(Of Integer, ITimedQueue(Of TItem))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: App.ServerServices.ITimedQueue`1
    name: ITimedQueue
  - name: <
  - name: TItem
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: App.ServerServices.ITimedQueue`1
    name: ITimedQueue
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: App.ServerServices.TimedQueueManager`1.CreateQueue*
  commentId: Overload:App.ServerServices.TimedQueueManager`1.CreateQueue
  name: CreateQueue
  nameWithType: TimedQueueManager<TItem>.CreateQueue
  fullName: App.ServerServices.TimedQueueManager<TItem>.CreateQueue
  nameWithType.vb: TimedQueueManager(Of TItem).CreateQueue
  fullName.vb: App.ServerServices.TimedQueueManager(Of TItem).CreateQueue
- uid: App.ServerServices.ITimedQueueManager{{TItem}}.CreateQueue(System.Int32)
  commentId: M:App.ServerServices.ITimedQueueManager{`0}.CreateQueue(System.Int32)
  parent: App.ServerServices.ITimedQueueManager{{TItem}}
  definition: App.ServerServices.ITimedQueueManager`1.CreateQueue(System.Int32)
  name: CreateQueue(int)
  nameWithType: ITimedQueueManager<TItem>.CreateQueue(int)
  fullName: App.ServerServices.ITimedQueueManager<TItem>.CreateQueue(int)
  nameWithType.vb: ITimedQueueManager(Of TItem).CreateQueue(Integer)
  fullName.vb: App.ServerServices.ITimedQueueManager(Of TItem).CreateQueue(Integer)
  name.vb: CreateQueue(Integer)
  spec.csharp:
  - uid: App.ServerServices.ITimedQueueManager{`0}.CreateQueue(System.Int32)
    name: CreateQueue
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.ServerServices.ITimedQueueManager{`0}.CreateQueue(System.Int32)
    name: CreateQueue
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: App.ServerServices.ITimedQueue{{TItem}}
  commentId: T:App.ServerServices.ITimedQueue{`0}
  parent: App.ServerServices
  definition: App.ServerServices.ITimedQueue`1
  name: ITimedQueue<TItem>
  nameWithType: ITimedQueue<TItem>
  fullName: App.ServerServices.ITimedQueue<TItem>
  nameWithType.vb: ITimedQueue(Of TItem)
  fullName.vb: App.ServerServices.ITimedQueue(Of TItem)
  name.vb: ITimedQueue(Of TItem)
  spec.csharp:
  - uid: App.ServerServices.ITimedQueue`1
    name: ITimedQueue
  - name: <
  - name: TItem
  - name: '>'
  spec.vb:
  - uid: App.ServerServices.ITimedQueue`1
    name: ITimedQueue
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
- uid: App.ServerServices.ITimedQueueManager`1.CreateQueue(System.Int32)
  commentId: M:App.ServerServices.ITimedQueueManager`1.CreateQueue(System.Int32)
  isExternal: true
  name: CreateQueue(int)
  nameWithType: ITimedQueueManager<TItem>.CreateQueue(int)
  fullName: App.ServerServices.ITimedQueueManager<TItem>.CreateQueue(int)
  nameWithType.vb: ITimedQueueManager(Of TItem).CreateQueue(Integer)
  fullName.vb: App.ServerServices.ITimedQueueManager(Of TItem).CreateQueue(Integer)
  name.vb: CreateQueue(Integer)
  spec.csharp:
  - uid: App.ServerServices.ITimedQueueManager`1.CreateQueue(System.Int32)
    name: CreateQueue
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.ServerServices.ITimedQueueManager`1.CreateQueue(System.Int32)
    name: CreateQueue
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: App.ServerServices.ITimedQueue`1
  commentId: T:App.ServerServices.ITimedQueue`1
  name: ITimedQueue<TItem>
  nameWithType: ITimedQueue<TItem>
  fullName: App.ServerServices.ITimedQueue<TItem>
  nameWithType.vb: ITimedQueue(Of TItem)
  fullName.vb: App.ServerServices.ITimedQueue(Of TItem)
  name.vb: ITimedQueue(Of TItem)
  spec.csharp:
  - uid: App.ServerServices.ITimedQueue`1
    name: ITimedQueue
  - name: <
  - name: TItem
  - name: '>'
  spec.vb:
  - uid: App.ServerServices.ITimedQueue`1
    name: ITimedQueue
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
- uid: App.ServerServices.TimedQueueManager`1.GetQueue*
  commentId: Overload:App.ServerServices.TimedQueueManager`1.GetQueue
  name: GetQueue
  nameWithType: TimedQueueManager<TItem>.GetQueue
  fullName: App.ServerServices.TimedQueueManager<TItem>.GetQueue
  nameWithType.vb: TimedQueueManager(Of TItem).GetQueue
  fullName.vb: App.ServerServices.TimedQueueManager(Of TItem).GetQueue
- uid: App.ServerServices.ITimedQueueManager{{TItem}}.GetQueue(System.Int32)
  commentId: M:App.ServerServices.ITimedQueueManager{`0}.GetQueue(System.Int32)
  parent: App.ServerServices.ITimedQueueManager{{TItem}}
  definition: App.ServerServices.ITimedQueueManager`1.GetQueue(System.Int32)
  name: GetQueue(int)
  nameWithType: ITimedQueueManager<TItem>.GetQueue(int)
  fullName: App.ServerServices.ITimedQueueManager<TItem>.GetQueue(int)
  nameWithType.vb: ITimedQueueManager(Of TItem).GetQueue(Integer)
  fullName.vb: App.ServerServices.ITimedQueueManager(Of TItem).GetQueue(Integer)
  name.vb: GetQueue(Integer)
  spec.csharp:
  - uid: App.ServerServices.ITimedQueueManager{`0}.GetQueue(System.Int32)
    name: GetQueue
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.ServerServices.ITimedQueueManager{`0}.GetQueue(System.Int32)
    name: GetQueue
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: App.ServerServices.ITimedQueueManager`1.GetQueue(System.Int32)
  commentId: M:App.ServerServices.ITimedQueueManager`1.GetQueue(System.Int32)
  isExternal: true
  name: GetQueue(int)
  nameWithType: ITimedQueueManager<TItem>.GetQueue(int)
  fullName: App.ServerServices.ITimedQueueManager<TItem>.GetQueue(int)
  nameWithType.vb: ITimedQueueManager(Of TItem).GetQueue(Integer)
  fullName.vb: App.ServerServices.ITimedQueueManager(Of TItem).GetQueue(Integer)
  name.vb: GetQueue(Integer)
  spec.csharp:
  - uid: App.ServerServices.ITimedQueueManager`1.GetQueue(System.Int32)
    name: GetQueue
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.ServerServices.ITimedQueueManager`1.GetQueue(System.Int32)
    name: GetQueue
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: App.ServerServices.TimedQueueManager`1.RemoveQueue*
  commentId: Overload:App.ServerServices.TimedQueueManager`1.RemoveQueue
  name: RemoveQueue
  nameWithType: TimedQueueManager<TItem>.RemoveQueue
  fullName: App.ServerServices.TimedQueueManager<TItem>.RemoveQueue
  nameWithType.vb: TimedQueueManager(Of TItem).RemoveQueue
  fullName.vb: App.ServerServices.TimedQueueManager(Of TItem).RemoveQueue
- uid: App.ServerServices.ITimedQueueManager{{TItem}}.RemoveQueue(System.Int32)
  commentId: M:App.ServerServices.ITimedQueueManager{`0}.RemoveQueue(System.Int32)
  parent: App.ServerServices.ITimedQueueManager{{TItem}}
  definition: App.ServerServices.ITimedQueueManager`1.RemoveQueue(System.Int32)
  name: RemoveQueue(int)
  nameWithType: ITimedQueueManager<TItem>.RemoveQueue(int)
  fullName: App.ServerServices.ITimedQueueManager<TItem>.RemoveQueue(int)
  nameWithType.vb: ITimedQueueManager(Of TItem).RemoveQueue(Integer)
  fullName.vb: App.ServerServices.ITimedQueueManager(Of TItem).RemoveQueue(Integer)
  name.vb: RemoveQueue(Integer)
  spec.csharp:
  - uid: App.ServerServices.ITimedQueueManager{`0}.RemoveQueue(System.Int32)
    name: RemoveQueue
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.ServerServices.ITimedQueueManager{`0}.RemoveQueue(System.Int32)
    name: RemoveQueue
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: App.ServerServices.ITimedQueueManager`1.RemoveQueue(System.Int32)
  commentId: M:App.ServerServices.ITimedQueueManager`1.RemoveQueue(System.Int32)
  isExternal: true
  name: RemoveQueue(int)
  nameWithType: ITimedQueueManager<TItem>.RemoveQueue(int)
  fullName: App.ServerServices.ITimedQueueManager<TItem>.RemoveQueue(int)
  nameWithType.vb: ITimedQueueManager(Of TItem).RemoveQueue(Integer)
  fullName.vb: App.ServerServices.ITimedQueueManager(Of TItem).RemoveQueue(Integer)
  name.vb: RemoveQueue(Integer)
  spec.csharp:
  - uid: App.ServerServices.ITimedQueueManager`1.RemoveQueue(System.Int32)
    name: RemoveQueue
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: App.ServerServices.ITimedQueueManager`1.RemoveQueue(System.Int32)
    name: RemoveQueue
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: App.ServerServices.TimedQueueManager`1.Count*
  commentId: Overload:App.ServerServices.TimedQueueManager`1.Count
  name: Count
  nameWithType: TimedQueueManager<TItem>.Count
  fullName: App.ServerServices.TimedQueueManager<TItem>.Count
  nameWithType.vb: TimedQueueManager(Of TItem).Count
  fullName.vb: App.ServerServices.TimedQueueManager(Of TItem).Count
- uid: App.ServerServices.ITimedQueueManager{{TItem}}.Count
  commentId: P:App.ServerServices.ITimedQueueManager{`0}.Count
  parent: App.ServerServices.ITimedQueueManager{{TItem}}
  definition: App.ServerServices.ITimedQueueManager`1.Count
  name: Count
  nameWithType: ITimedQueueManager<TItem>.Count
  fullName: App.ServerServices.ITimedQueueManager<TItem>.Count
  nameWithType.vb: ITimedQueueManager(Of TItem).Count
  fullName.vb: App.ServerServices.ITimedQueueManager(Of TItem).Count
- uid: App.ServerServices.ITimedQueueManager`1.Count
  commentId: P:App.ServerServices.ITimedQueueManager`1.Count
  name: Count
  nameWithType: ITimedQueueManager<TItem>.Count
  fullName: App.ServerServices.ITimedQueueManager<TItem>.Count
  nameWithType.vb: ITimedQueueManager(Of TItem).Count
  fullName.vb: App.ServerServices.ITimedQueueManager(Of TItem).Count
- uid: App.ServerServices.TimedQueueManager`1.Dispose*
  commentId: Overload:App.ServerServices.TimedQueueManager`1.Dispose
  name: Dispose
  nameWithType: TimedQueueManager<TItem>.Dispose
  fullName: App.ServerServices.TimedQueueManager<TItem>.Dispose
  nameWithType.vb: TimedQueueManager(Of TItem).Dispose
  fullName.vb: App.ServerServices.TimedQueueManager(Of TItem).Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
