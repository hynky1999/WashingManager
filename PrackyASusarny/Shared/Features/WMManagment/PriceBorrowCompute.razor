@using PrackyASusarny.Data.EFCoreServices
@using PrackyASusarny.Errors.Folder
@inject BorrowService BorrowService
@inject ILogger<PriceBorrowCompute> Logger

@if (_price is not null) {
    <h6>Aktuální cena za výpůjčku</h6>
    <p>@_price</p>
    <Button OnClick="UpdatePrice">Obnovit cenu</Button>
}

@code {

    [Parameter]
    public Borrow? Borrow { get; set; }

    [Parameter]
    public EventCallback<Price?> OnBorrowEnd { get; set; }

    private Price? _price = null;

    protected override async Task OnInitializedAsync() {
        await UpdatePrice();
        await base.OnInitializedAsync();
    }

    protected override async Task OnParametersSetAsync() {
        await UpdatePrice();
        await base.OnParametersSetAsync();
    }

    private Task UpdatePrice() {
        if (Borrow is null) {
            _price = null;
            return Task.CompletedTask;
        }
        try {
            _price = BorrowService.GetPrice(Borrow);
        }
        catch (DbException ex) {
            Logger.LogError(ex, "Error while getting price for borrow");
        }
        return Task.CompletedTask;
    }







}