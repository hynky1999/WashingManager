@using PrackyASusarny.Data.EFCoreServices
@using PrackyASusarny.Errors.Folder
@inject BorrowService BorrowService


<Modal Visible="@_visibility" Footer="@null" OnCancel="@CloseModal">
    <h2>Ukonči výpůjčku</h2>
    @if (ShowWashingMachine && WashingMachine is not null) {
        <WmDescription WashingMachine="@WashingMachine"/>
    }
    @if (_borrow is not null) {
        <BorrowDescription Borrow="@_borrow"/>
        <PriceBorrowCompute Borrow="@_borrow"/>
        <Button OnClick="EndBorrow">Ukončit výpůjčku</Button>
    } else {
        <Spin/>
    }
</Modal>
<Button OnClick="@OpenModal">Ukončit výpůjčku</Button>


@code {

    [Parameter]
    public WashingMachine? WashingMachine { get; set; }

    [Parameter]
    public bool ShowWashingMachine { get; set; } = true;

    [Parameter]
    public EventCallback<Borrow> OnSuccess { get; set; }

    private Borrow? _borrow;
    private bool _visibility;

    private async void OpenModal() {
        _visibility = true;
        if (_borrow is null && WashingMachine is not null) {
            _borrow = await BorrowService.GetBorrowByWm(WashingMachine);
        }
    }

    private void CloseModal() {
        _visibility = false;
    }

    private async Task EndBorrow() {
        if (_borrow is null) {
            return;
        }

        try {
            await BorrowService.EndBorrow(_borrow);
#pragma warning disable CS4014
            OnSuccess.InvokeAsync(_borrow);
#pragma warning restore CS4014
            CloseModal();
        }
        catch (DbException) {
        }
    }



}