@using System.Linq.Expressions
@typeparam TItem
@inject ICrudService<TItem> CrudService

<Select Value="@Value" ValueChanged="@ValueChanged" ValueExpression="@ValueExpression" DataSource="@dataSource" Disabled="@Disabled"></Select>

@code {

    [Parameter]
    public TItem Value { get; set; }

    [Parameter]
    public EventCallback<TItem> ValueChanged { get; set; }

    [Parameter]
    public Expression<Func<TItem>> ValueExpression { get; set; }

    [Parameter]
    public string id { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    private List<TItem> dataSource = new List<TItem>();


    protected async override Task OnParametersSetAsync()
    {
        dataSource = (await CrudService.GetAllAsync(false));
    }

}