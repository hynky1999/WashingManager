@page "/AdminMenu/{modelName}/{Action}/{Id:int?}"
@using Microsoft.AspNetCore.Authorization
@using PrackyASusarny.Auth.Utils
@using PrackyASusarny.Features.AdminPanel.Componenets
@attribute [Authorize(Policy = Policies.ModelManagement)]
@inject NavigationManager NavManager
@inject ILocalizationService Loc


<PageHeader SubTitle="@Loc[Action!]" Title=@Loc[ModelName!]/>
<AdminMenuNavBar/>
<Divider/>
<ModelLoader AllowedTypes="@AdminConfig.AllowedTypes" Model="@ModelName">
    @if (_action == CrudAction.List) {
        <Button OnClick="@(_ => NavManager.NavigateTo($"adminMenu/{ModelName}/Create"))">@Loc["Create New"]</Button>
        <Divider/>
        <DynamicComponent Type="@(typeof(CrudTable<>).MakeGenericType(context))"/>
    } else if (_action == CrudAction.Create || _action == CrudAction.Update) {
        <DynamicComponent Parameters="@(new Dictionary<string, object>() {{"Action", _action}, {"Id", Id ?? 0}})"
                          Type="@(typeof(CrudForm<>).MakeGenericType(context))"/>
    } else {
        <Title Level="2">@Loc["Unknown Action"]</Title>
    }
</ModelLoader>

@code{

    [Parameter]
    public string? ModelName { get; set; }

    [Parameter]
    public string? Action { get; set; }

    [Parameter]
    public int? Id { get; set; }

    private CrudAction? _action;

    protected override void OnParametersSet() {
        if (Enum.TryParse<CrudAction>(Action, out var acc)) {
            _action = acc;
        } else {
            _action = null;
        }
    }

}