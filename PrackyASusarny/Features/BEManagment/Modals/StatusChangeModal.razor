@using PrackyASusarny.Utils
@typeparam T where T : BorrowableEntity
@inject ModalService ModalService
@inject IBorrowableEntityService BorrowableEntityService
@inject MessageService MessageService
@inject ILocalizationService Loc

@code {

    [Parameter]
    public EventCallback<T> OnFinish { get; set; }

    private Status status { get; set; }

    [Parameter]
    public T? DefaultBe { get; set; }

    private async Task OnOkClick(ModalClosingEventArgs e) {
        if (DefaultBe == null) {
            MessageService.Error("No item selected");
            return;
        }
        await MessageService.GenericOnDBError(async () => {
            await BorrowableEntityService.ChangeStatus(DefaultBe, status);
            await OnFinish.InvokeAsync(DefaultBe);
            MessageService.Success($"The item has been marked as {status.ToString()}.");
        });
    }

    public void OpenModal(Status statusIn) {
        RenderFragment icon = @<Icon Theme="outline" Type="exclamation-circle"></Icon>;
        // We take status as parameter rather than binding as when this method is called, the status is not yet set
        this.status = statusIn;

        ModalService.Confirm(new ConfirmOptions {
            Title = Loc[$"Do you want to make this entity {status.ToString()}?"],
            Icon = icon,
            OnOk = OnOkClick
        });
    }

}