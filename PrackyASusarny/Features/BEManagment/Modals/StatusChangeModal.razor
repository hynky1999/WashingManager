@using Microsoft.Build.Framework
@using PrackyASusarny.Errors.Folder
@typeparam T where T : BorrowableEntity
@inject ModalService ModalService
@inject IBorrowableEntityService BorrowableEntityService
@inject MessageService MessageService
@inject ILocalizationService Loc

@code {

    [Parameter]
    public EventCallback<T> OnFinish { get; set; }

    [Required]
    [Parameter]
    public Status Status { get; set; }

    [Parameter]
    public T? DefaultBe { get; set; }

    private async Task OnOkClick(ModalClosingEventArgs e) {
        if (DefaultBe == null) {
            MessageService.Error("No item selected");
            return;
        }
        try {
            await BorrowableEntityService.ChangeStatus(DefaultBe, Status);
            await OnFinish.InvokeAsync(DefaultBe);
            MessageService.Success($"The item has been marked as {Status.ToString()}.");
        }
        catch (DbException) {
            MessageService.Error($"Failed to mark the item as {Status.ToString()}.");
        }
    }

    public void OpenModal() {
        RenderFragment icon = @<Icon Type="exclamation-circle" Theme="outline"></Icon>;

        ModalService.Confirm(new ConfirmOptions {
            Title = Loc["Do you want to make this entity broken?"],
            Icon = icon,
            OnOk = OnOkClick
        });
    }

}