@page "/charts/{Entity}"

<Tabs>
    @foreach (var chart in _charts) {
        <TabPane Key=1>
            <DynamicComponent Type="@chart.type" Parameters="@chart.args"/>
        </TabPane>
    }
</Tabs>

@code {

    [Parameter]
    public string? Entity { get; set; }

    private (Type type, Dictionary<string, object> args)[] _charts = {};


    protected override void OnParametersSet() {
        var entityType = BorrowableEntity.TypeFactory(Entity ?? "");
        if (entityType is not null) {
            _charts = GetchartsConfig(entityType);
        } else {
            _charts = new (Type, Dictionary<string, object>)[] {};
        }


        base.OnInitialized();
    }

    private (Type type, Dictionary<string, object> args)[] GetchartsConfig(Type entityType) {
        return new[] {
            (typeof(DailyBorrows<>).MakeGenericType(entityType),
                new Dictionary<string, object> {
                    {"SinceDate", DateTime.Now.AddDays(-10)},
                    {"ToDate", DateTime.Now}
                }
                )
        };
    }



}