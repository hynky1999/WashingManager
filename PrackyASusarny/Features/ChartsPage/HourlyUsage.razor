@using PrackyASusarny.Pages.Features.DefaultChartPage
@typeparam T where T : BorrowableEntity
@inject IUsageChartingService<T> Charts
@if (_statData.Length == 0) {
    <Empty Description=@("No Data Found")/>
} else {
    <AntDesign.Charts.Column Data="@_statData" Config="@_config"/>
}

@code {

    [Parameter]
    public DayOfWeek Day { get; set; }

    private string _usage = "Daily usage at {0}";

    private object[] _statData = {};
    private ColumnConfig _config = new();

    protected override async Task OnParametersSetAsync() {
        var entityName = typeof(T).GetProperty(nameof(DbModel.HumanReadableName))?.GetValue(typeof(T)) ?? nameof(T);
        var entityNameStr = (string) entityName;
        _usage = string.Format(_usage, Day);

        _config = SetUpConfig(ChartsUtils.GetChartDescription(_usage, entityNameStr, 0, (null, null)));
        _statData = (await Charts.GetHourlyUsageAsync(Day)).Select(usage => new {Day = usage.hour, Value = usage.value}).ToArray();
        await base.OnParametersSetAsync();
    }

    private ColumnConfig SetUpConfig(string description) {
        return new ColumnConfig {
            Title = new AntDesign.Charts.Title() {
                Visible = true,
                Text = _usage
            },
            Description = new Description {
                Visible = true,
                Text = description
            },
            ForceFit = true,
            Padding = "auto",
            XField = "Hour",
            YField = "Borrows",
            Label = new ColumnViewConfigLabel {
                Visible = true,
                Style = new TextStyle {
                    FontSize = 12,
                    FontWeight = 600,
                    Opacity = 0.6
                }
            }
        };
    }

}
