@typeparam T where T : BorrowableEntity
@inject IUsageChartingService<T> Charts
@inject ILocalizationService LocalizationService
@inherits GenericEntityBase<T>
@if (_statData.Length == 0) {
    <Empty Description=@("No Data Found")/>
} else {
    <AntDesign.Charts.Column Data="@_statData" Config="@_config"/>
}

@code {
        private const string Usage = "Average hourly usage";
    private object[] _statData = {};
    private ColumnConfig _config = new();

    protected override async Task OnInitializedAsync() {
        var description = ChartsUtils.GetChartDescription(Usage, EntityName, (null, null), LocalizationService);
        _config = ChartsUtils.CreateColumnConfig(Usage, description, "Hour", "Avg. Borrows");
        _statData = (await Charts.GetAvgHourlyUsageAsync()).Select(usage => new {x = usage.hour.ToString(), y = Math.Round(usage.value, LocalizationService.DecimalPlaces)}).ToArray();
        await base.OnInitializedAsync();
    }

}