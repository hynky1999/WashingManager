@page "/adminMenu/{modelName}/{Action}/{Id:int?}"
@inject ILogger<ManageModelPage> Logger
@inject NavigationManager NavManager


<PageHeader Title=@($"{ModelName}") SubTitle="@Action"/>
<AdminMenuNavBar/>
<Divider/>
@if (_listType is not null) {
    @if (Action == "List") {
        <Button OnClick="@(_ => NavManager.NavigateTo($"adminMenu/{ModelName}/Create"))">Create</Button>
        <Divider/>
        @CrudListTableFragment()
    } else if (Action == "Create") {
        @CrudForm(CrudAction.Create, Id)
    } else if (Action == "Update") {
        @CrudForm(CrudAction.Update, Id)
    } else {
        <Title Level="2">@("Unknow Action")</Title>
    }
} else {
    <Title Level="2">@($"{ModelName} is not showable or doesn't exist")</Title>
}


@code{

    [Parameter]
    public string? ModelName { get; set; }

    [Parameter]
    public string? Action { get; set; }

    [Parameter]
    public int? Id { get; set; }

    private Type? _listType;

    protected override void OnParametersSet() {
        if (ModelName is not null) {
            AdminConfig.ModelNameToType.TryGetValue(ModelName, out _listType);
        }
    }

    private RenderFragment CrudListTableFragment() {
        return builder => {
            if (_listType is null) {
                return;
            }
            try {
                builder.OpenComponent(0, typeof(CrudTable<>).MakeGenericType(_listType));
                builder.CloseComponent();
            }
            catch (ArgumentException e) {
                Logger.LogError(e, "Error in CrudListTableFragment");
            }
        };
    }

    private RenderFragment CrudForm(CrudAction action, int? id) {
        if (_listType is null) {
            return _ => { };
        }
        return builder => {
            builder.OpenComponent(0, typeof(CrudForm<>).MakeGenericType(_listType));
            builder.AddAttribute(1, "Action", action);
            builder.AddAttribute(2, "Id", id);
            builder.CloseComponent();
        };
    }

}