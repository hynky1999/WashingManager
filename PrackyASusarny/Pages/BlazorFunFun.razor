@page "/BlazorFun"
@using PrackyASusarny.Utils
@using System.Reflection
@using System.Text.Json

<Form Model="@_manual" ValidateOnChange="@true" OnFinish="OnFinish" OnFinishFailed="OnFinishFailed">
    <FormItem >
        @CustomRender
    </FormItem>
    <FormItem>
        <Button HtmlType="submit">Submit</Button>
    </FormItem>
</Form>
<Button OnClick="@((e) => _manual.ManualID += 1)">Inc manualid</Button>

@code {
    Manual _manual = new Manual();

    RenderFragment? CustomRender
    {
        get
        {
            return builder =>
            {
                PropertyInfo p = typeof(Manual).GetProperty("ManualID");
                EventCallbackFactory ecf = new EventCallbackFactory();
                builder.OpenComponent(0, typeof(AntDesign.InputNumber<>).MakeGenericType(p.PropertyType));
                builder.AddAttribute(1, "Value", p.GetValue(_manual));
                builder.AddAttribute(2, "ValueChanged", _manual.GetSetPropertyEventCallback(this, p));
                builder.AddAttribute(3, "ValueExpression", _manual.GetPropertyExpression(p));
                builder.CloseComponent();
            };
        }
    }

    private void OnFinish(EditContext editContext)
    {
        Console.WriteLine($"Success:{JsonSerializer.Serialize(_manual)}");
    }

    private void OnFinishFailed(EditContext editContext)
    {
        Console.WriteLine($"Failed:{JsonSerializer.Serialize(_manual)}");
    }

}